<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
    <changeSet failOnError="false" author="Emeka" id="prep-1">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="prep_eligibility"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE IF NOT EXISTS public.prep_eligibility
            (
                id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
                created_by character varying(255) NOT NULL,
                date_created timestamp without time zone NOT NULL,
                modified_by character varying(255),
                date_modified timestamp without time zone,
                hiv_risk jsonb,
                sti_screening jsonb,
                drug_use_history jsonb,
                personal_hiv_risk_assessment jsonb,
                sex_partner_risk jsonb,
                person_uuid character varying(255),
                sex_partner character varying(255),
                counseling_type character varying(255),
                first_time_visit boolean,
                num_children_less_than_five character varying(255),
                num_wives integer,
                target_group character varying(255),
                extra jsonb,
                facility_id bigint,
                uuid character varying(255),
                archived integer,
                unique_id character varying,
                score integer,
                CONSTRAINT pk_prep_eligibility PRIMARY KEY (id),
                CONSTRAINT uc_prep_eligibility_uuid UNIQUE (uuid),
                CONSTRAINT fk_prep_eligibility_on_sexual_partner_fk FOREIGN KEY (sex_partner)
                REFERENCES public.base_application_codeset (code) MATCH SIMPLE
                                       ON UPDATE NO ACTION
                                       ON DELETE NO ACTION,
                CONSTRAINT fk_prep_eligibility_on_target_group_fk FOREIGN KEY (target_group)
                REFERENCES public.base_application_codeset (code) MATCH SIMPLE
                                       ON UPDATE NO ACTION
                                       ON DELETE NO ACTION
                )
        </sql>
    </changeSet>
    <changeSet failOnError="false" author="Emeka" id="prep-2">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="prep_enrollment"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE IF NOT EXISTS prep_enrollment
            (
                id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
                created_by character varying(255) NOT NULL,
                date_created timestamp without time zone NOT NULL,
                modified_by character varying(255),
                date_modified timestamp without time zone,
                unique_id character varying(255),
                anc_number character varying(255),
                art_number character varying(255),
                date_started date,
                person_uuid character varying(255) NOT NULL,
                visit_uuid character varying(255),
                uuid character varying(255) NOT NULL,
                archived integer NOT NULL,
                extra jsonb,
                facility_id bigint NOT NULL,
                prep_eligibility_uuid character varying NOT NULL,
                status character varying,
                date_enrolled date,
                date_referred date,
                risk_type character varying,
                supporter_phone character varying,
                supporter_name character varying,
                supporter_relationship_type character varying,
                CONSTRAINT pk_prep_enrollment PRIMARY KEY (id),
                CONSTRAINT prep_eligibility_uuid UNIQUE (prep_eligibility_uuid),
                CONSTRAINT uc_prep_enrollment_uuid UNIQUE (uuid),
                CONSTRAINT fk_prep_eligibility_uuid FOREIGN KEY (prep_eligibility_uuid)
                REFERENCES public.prep_eligibility (uuid) MATCH SIMPLE
                                       ON UPDATE NO ACTION
                                       ON DELETE NO ACTION
                NOT VALID,
                CONSTRAINT fk_prep_enrollment_on_person_uuid FOREIGN KEY (person_uuid)
                REFERENCES public.patient_person (uuid) MATCH SIMPLE
                                       ON UPDATE NO ACTION
                                       ON DELETE NO ACTION,
                CONSTRAINT fk_prep_enrollment_on_visit_uuid FOREIGN KEY (visit_uuid)
                REFERENCES public.patient_visit (uuid) MATCH SIMPLE
                                       ON UPDATE NO ACTION
                                       ON DELETE NO ACTION,
                CONSTRAINT fk_risk_type FOREIGN KEY (risk_type)
                REFERENCES public.base_application_codeset (code) MATCH SIMPLE
                                       ON UPDATE NO ACTION
                                       ON DELETE NO ACTION
                                        NOT VALID
                )
        </sql>
    </changeSet>
    <changeSet failOnError="false" author="Emeka" id="prep-3">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="prep_clinical"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE IF NOT EXISTS prep_clinic
            (
                id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
                weight double precision,
                height double precision,
                breastfeeding boolean,
                pregnant boolean,
                visit_date date,
                is_commencement boolean,
                prep_enrollment_uuid character varying(255),
                uuid character varying(255) NOT NULL,
                regimen_id bigint,
                regimen_type_id bigint,
                vital_sign_uuid character varying(255),
                person_uuid character varying(255),
                visit_uuid character varying(255),
                next_appointment date,
                facility_id bigint,
                extra jsonb,
                created_by character varying(255 )NOT NULL,
                date_created timestamp without time zone NOT NULL,
                modified_by character varying(255),
                date_modified timestamp without time zone,
                archived integer,
                CONSTRAINT pk_prep_clinical PRIMARY KEY (id),
                CONSTRAINT uc_prep_clinical_uuid UNIQUE (uuid),
                CONSTRAINT fk_prep_clinical_on_person_uuid FOREIGN KEY (person_uuid)
                REFERENCES public.patient_person (uuid) MATCH SIMPLE
                                       ON UPDATE NO ACTION
                                       ON DELETE NO ACTION,
                CONSTRAINT fk_prep_clinical_on_prep_enrollment_uuid FOREIGN KEY (prep_enrollment_uuid)
                REFERENCES public.prep_enrollment (uuid) MATCH SIMPLE
                                       ON UPDATE NO ACTION
                                       ON DELETE NO ACTION,
                CONSTRAINT fk_prep_clinical_on_visit_uuid FOREIGN KEY (visit_uuid)
                REFERENCES public.patient_visit (uuid) MATCH SIMPLE
                                       ON UPDATE NO ACTION
                                       ON DELETE NO ACTION,
                CONSTRAINT fk_prep_clinical_on_vital_sign_uuid FOREIGN KEY (vital_sign_uuid)
                REFERENCES public.triage_vital_sign (uuid) MATCH SIMPLE
                                       ON UPDATE NO ACTION
                                       ON DELETE NO ACTION
                );
        </sql>
    </changeSet>
</databaseChangeLog>