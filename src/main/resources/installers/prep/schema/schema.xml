<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
    <changeSet failOnError="false" author="Emeka" id="prep-1">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="prep_eligibility"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE IF NOT EXISTS prep_eligibility
            (
                id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
                unique_id              VARCHAR(255),
                hiv_risk                     JSONB,
                sti_screening                JSONB,
                drug_use_history             JSONB,
                personal_hiv_risk_assessment JSONB,
                sex_partner_risk             JSONB,
                person_uuid                  VARCHAR(255),
                sex_partner                  VARCHAR(255),
                counseling_type              VARCHAR(255),
                first_time_visit             BOOLEAN,
                num_children_less_than_five  INTEGER,
                num_wives                    INTEGER,
                target_group                 VARCHAR(255),
                extra                        JSONB,
                facility_id                  BIGINT,
                uuid                         VARCHAR(255),
                archived                     INTEGER,
                created_by                   VARCHAR(255) NOT NULL,
                date_created                 TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                modified_by                  VARCHAR(255),
                date_modified                TIMESTAMP WITHOUT TIME ZONE,
                CONSTRAINT pk_prep_eligibility PRIMARY KEY (id),
                CONSTRAINT uc_prep_eligibility_uuid UNIQUE (uuid),
                CONSTRAINT FK_PREP_ELIGIBILITY_ON_TARGET_GROUP_FK FOREIGN KEY (target_group) REFERENCES base_application_codeset (code),
                CONSTRAINT FK_PREP_ELIGIBILITY_ON_SEXUAL_PARTNER_FK FOREIGN KEY (sex_partner) REFERENCES base_application_codeset (code)
                );
        </sql>
    </changeSet>
    <changeSet failOnError="false" author="Emeka" id="prep-2">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="prep_enrollment"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE IF NOT EXISTS prep_enrollment
            (
                id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
                unique_id              VARCHAR(255),
                prep_eligibility_uuid VARCHAR(255),
                entry_point            VARCHAR(255),
                target_group           VARCHAR(255),
                source_of_referrer     VARCHAR(255),
                pregnant               BOOLEAN,
                breastfeeding          BOOLEAN,
                date_of_registration   date,
                status_at_registration VARCHAR(255),
                enrollment_setting     VARCHAR(255),
                date_started           date,
                send_message           BOOLEAN,
                person_uuid            VARCHAR(255) NOT NULL,
                visit_uuid             VARCHAR(255) NOT NULL,
                uuid                   VARCHAR(255) NOT NULL,
                facility_name          VARCHAR(255),
                care_entry_point_other VARCHAR(255),
                date_of_lpm            date,
                pregnancy_status       VARCHAR(255),
                extra                  JSONB,
                facility_id            BIGINT NOT NULL,
                created_by                   VARCHAR(255) NOT NULL,
                date_created                 TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                modified_by                  VARCHAR(255),
                date_modified                TIMESTAMP WITHOUT TIME ZONE,
                archived               INTEGER NOT NULL,
                CONSTRAINT pk_prep_enrollment PRIMARY KEY (id),
                CONSTRAINT uc_prep_enrollment_uuid UNIQUE (uuid),
                CONSTRAINT FK_PREP_ENROLLMENT_ON_PREP_ELIGIBILITY_UUID FOREIGN KEY (prep_eligibility_uuid) REFERENCES prep_eligibility (uuid),
                CONSTRAINT FK_PREP_ENROLLMENT_ON_PERSON_UUID FOREIGN KEY (person_uuid) REFERENCES patient_person (uuid),
                CONSTRAINT FK_PREP_ENROLLMENT_ON_VISIT_UUID FOREIGN KEY (visit_uuid) REFERENCES patient_visit (uuid),
                CONSTRAINT FK_PREP_ENROLLMENT_ON_PREGNANCY_STATUS_FK FOREIGN KEY (pregnancy_status) REFERENCES base_application_codeset (code),
                CONSTRAINT FK_PREP_ENROLLMENT_ON_ENROLLMENT_SETTING_FK FOREIGN KEY (enrollment_setting) REFERENCES base_application_codeset (code),
                CONSTRAINT FK_PREP_ENROLLMENT_ON_TARGET_GROUP_FK FOREIGN KEY (target_group) REFERENCES base_application_codeset (code),
                CONSTRAINT FK_PREP_ENROLLMENT_ON_ENTRY_POINT_FK FOREIGN KEY (entry_point) REFERENCES base_application_codeset (code),
                CONSTRAINT FK_PREP_ENROLLMENT_ON_SOURCE_OF_REFERRER_FK FOREIGN KEY (source_of_referrer) REFERENCES base_application_codeset (code),
                CONSTRAINT FK_PREP_ENROLLMENT_ON_STATUS_AT_REGISTRATION_FK FOREIGN KEY (status_at_registration) REFERENCES base_application_codeset (code)
                );
        </sql>
    </changeSet>
    <changeSet failOnError="false" author="Emeka" id="prep-3">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="prep_clinical"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE IF NOT EXISTS prep_clinical
            (
                id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
                visit_date               date,
                is_commencement          BOOLEAN,
                functional_status_uuid   VARCHAR(255),
                clinical_stage_uuid      VARCHAR(255),
                clinical_note            VARCHAR(255),
                prep_enrollment_uuid     VARCHAR(255),
                uuid                     VARCHAR(255) NOT NULL,
                regimen_id               BIGINT,
                regimen_type_id          BIGINT,
                vital_sign_uuid          VARCHAR(255),
                person_uuid              VARCHAR(255),
                visit_uuid               VARCHAR(255),
                oi_screened              VARCHAR(5),
                sti_ids                  VARCHAR(50),
                sti_treated              VARCHAR(5),
                opportunistic_infections JSONB,
                adherence_level          VARCHAR(15),
                adheres                  JSONB,
                next_appointment         date,
                lmp_date                 date,
                tb_screen                JSONB,
                extra                    JSONB,
                created_by               VARCHAR(255) NOT NULL,
                date_created             TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                modified_by              VARCHAR(255),
                date_modified            TIMESTAMP WITHOUT TIME ZONE,
                archived                 INTEGER,
                facility_id              BIGINT,
                CONSTRAINT pk_prep_clinical PRIMARY KEY (id),
                CONSTRAINT uc_prep_clinical_uuid UNIQUE (uuid),
                CONSTRAINT FK_PREP_CLINICAL_ON_PERSON_UUID FOREIGN KEY (person_uuid) REFERENCES patient_person (uuid),
                CONSTRAINT FK_PREP_CLINICAL_ON_PREP_ENROLLMENT_UUID FOREIGN KEY (prep_enrollment_uuid) REFERENCES prep_enrollment (uuid),
                CONSTRAINT FK_PREP_CLINICAL_ON_VISIT_UUID FOREIGN KEY (visit_uuid) REFERENCES patient_visit (uuid),
                CONSTRAINT FK_PREP_CLINICAL_ON_VITAL_SIGN_UUID FOREIGN KEY (vital_sign_uuid) REFERENCES triage_vital_sign (uuid),
                CONSTRAINT FK_PREP_CLINICAL_ON_CLINICAL_STAGE_UUID FOREIGN KEY (clinical_stage_uuid) REFERENCES base_application_codeset (code),
                CONSTRAINT FK_PREP_CLINICAL_ON_FUNCTIONAL_STATUS_UUID FOREIGN KEY (functional_status_uuid) REFERENCES base_application_codeset (code)
                );
        </sql>
    </changeSet>

</databaseChangeLog>