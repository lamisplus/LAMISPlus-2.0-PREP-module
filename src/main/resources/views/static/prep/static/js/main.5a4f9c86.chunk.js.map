{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtByAge.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtBySex.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Index.js","main/webapp/jsx/components/Visualisation/Index.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Consultation/ADR/Index.js","main/webapp/jsx/components/Consultation/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/Allergies/AddAllergy.js","main/webapp/jsx/components/Consultation/Conditions/AddCondition.js","main/webapp/jsx/components/Consultation/PostPatient/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/ADR/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/TBScreening/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/History/ConsultationPage.js","main/webapp/jsx/components/Consultation/ViewUpdate/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","setPatientList","setLoading","axios","baseUrl","headers","then","response","data","catch","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","icons","title","columns","field","filtering","query","Promise","resolve","reject","pageSize","page","result","records","map","row","name","personResponseDto","firstName","surname","hospital_number","clientCode","uniqueId","gender","sex","age","dateOfBirth","undefined","moment","format","count","Label","size","prepEnrollmentCount","actions","to","pathname","state","patientObj","ButtonGroup","variant","style","backgroundColor","Button","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","Highcharts","setOptions","colors","getOptions","radialGradient","cx","cy","r","stops","brighten","ReceivingArtByAge","chart","plotBackgroundColor","plotBorderWidth","plotShadow","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","connectorColor","showInLegend","series","sliced","y","ReceivingArtBySex","align","verticalAlign","distance","startAngle","endAngle","center","innerSize","useStyles","SummaryView","activeItem","React","anchorEl","Boolean","padding","md","lg","sm","xs","className","CardBody","highcharts","subtitle","legend","layout","xAxis","categories","labels","x","yAxis","allowDecimals","responsive","rules","condition","maxWidth","chartOptions","credits","options2","Widget","class","divStyle","borderRadius","Home","key","setKey","startIcon","textTransform","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","secondary","icon","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","classes","patientObjs","setBiometricStatus","setDevices","setHivStatus","PatientCurrentStatus","CheckBiometric","console","log","ExpansionPanel","ExpansionPanelSummary","root2","phoneNumber","contactPoint","getPhoneNumber","address","city","getAddress","Divider","navItemText","SubMenu","Observation","observation","filter","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","prepEligibilityCount","commenced","RecentHistory","vitaLoad","setViralLoad","setRefillList","setClinicVisitList","recentActivities","setRecentActivities","history","useHistory","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","LaboratoryHistory","PharmacyList","ClinicVisitList","RecentActivities","personId","activities","LabObject","forEach","index","array","dataOrders","labOrder","tests","push","LoadViewPage","action","path","actionType","activeTab","Accordion","defaultActiveKey","i","Toggle","as","Text","date","Collapse","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","viewable","deletable","delete","toast","errorMessage","apierror","message","length","test","status","labTestOrderStatus","orderDate","labTestGroupName","labTestName","viralLoadIndicationName","labTestOrderStatusName","Alert","PatientnHistory","loading","PatientHistory","isLoading","position","item","Icon","LoadDeletePage","ADR","ClinicVisit","dropdownOpen","setDropdownOpen","toggleDropDown","errors","setErrors","clinicVisitList","temp","setGetPatientObj","saving","setSaving","setClinicalStage","setFunctionalStatus","adherenceLevel","setAdherenceLevel","sti","setSti","setTBForms","prepStatus","setPrepStatus","currentVitalSigns","setcurrentVitalSigns","showCurrentVitalSigns","setShowCurrentVitalSigns","bodyWeight","diastolic","systolic","pulse","temperature","respiratoryRate","vitalClinicalSupport","setVitalClinicalSupport","dateInitialAdherenceCounseling","datePrepStart","dateReferred","extra","nextAppointment","pregnant","prepEnrollmentUuid","referred","regimenId","stiScreening","urinalysisResult","weight","objValues","setObjValues","encounterDate","facilityId","serviceTypeId","vital","setVitalSignDto","currentOnIpt","coughing","antiTBDrug","nightSweat","fever","contactWithTBCase","lethergy","tbStatusId","FunctionalStatus","WhoStaging","AdherenceLevel","SYNDROMIC_STI_SCREENING","VitalSigns","GetPatientObj","PatientDetaild","PREP_STATUS","lastVitalSigns","patObJ","handleInputChange","e","target","handleInputChangeVitalSignDto","Grid","Column","Segment","ribbon","visit","visitDate","List","celled","vitalSignDto","paddingBottom","paddingTop","borderTop","Math","round","FormGroup","Input","border","onChange","min","artCommence","max","required","checked","htmlFor","InputGroup","onKeyUp","InputGroupText","addonType","isOpen","toggle","toFixed","hivTestResult","regimenStartPrep","syndromicSTIScreening","prepGiven","datePrepGiven","code","disabled","preventDefault","whoStagingId","clinicalNote","functionalStatusId","labTestGroupId","Object","values","every","post","RelativeList","relative","removeRelativeLocation","adr","adrOnsetDate","IconButton","prepSideEffect","setPrepSideEffect","PrepSideEffect","handAdrleInputChange","setAdrObj","adrObj","adrList","splice","setAdrList","enableUpdate","artStartDate","Table","striped","InfectionList","removeInfection","illnessInfection","ondateInfection","handleInfectionInputChange","setInfection","infection","infectionList","setInfectionList","TBScreeningForm","tbStatus","setTbStatus","TBForms","TBStatus","tbObj","setTbObj","visitId","setVisitId","enableUpdateButton","setEnableUpdateButton","setEnableUpdate","getPatientObj","clinicalStage","functionalStatus","adheres","adrScreened","adverseDrugReactions","artStatusId","cd4","cd4Percentage","clinicalStageId","hivEnrollmentId","lmpDate","oiScreened","opportunisticInfections","tbScreen","stiIds","stiTreated","uuid","isCommencement","ClinicVisitListHistory","GetVisitById","visitID","content","label","basic","pointing","enrollment","put","hidden","ClinicVisitHistory","ConsultationPage","ClinicVisitPage","ClinicHistory","flexGrow","PrEPCommencementForm","prepClientId","prepId","prepEligibilityUuid","drugAllergies","reffered","datereferred","setpregnant","patientDto","setPatientDto","PREGANACY_STATUS","GetPatientDTOObj","for","dateEnrolled","dateOfRegistration","breastFeeding","Spinner","validate","POSITION","BOTTOM_CENTER","subErrors","demo","background","default","inline","PrEPEligibiltyScreeningForm","dateInterruption","why","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","linkToArt","dateLinkToArt","BasicInfo","patientID","clientId","counselingType","setCounselingType","drugUseHistory","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","targetGroup","CounselingType","GetPatientPrepEligibility","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessment","setRiskAssessment","handleInputChangeRiskAssessment","riskCount","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","riskAssessmentPartner","setRiskAssessmentPartner","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","setStiScreening","handleInputChangeStiScreening","stiCount","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","hivNegative","hivPositive","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","drugHistory","setDrugHistory","handleInputChangeDrugHistory","sexPartners","maritalStatus","moreThanOneSexPartnerLastThreeMonths","Message","warning","labelPosition","htsClientId","PrEPVisit","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","targetGroupId","ovc_enrolled","ovcNumber","carePoints","hivStatus","setTransferIn","enrolled","PrEPRegistrationForm","riskType","supporterName","supporterPhone","supporterRelationshipType","relatives","setRelatives","RELATIONSHIP","GetPatientPrepEnrollment","ancUniqueArtNo","dateHivPositive","dateOfLastHivNegativeTest","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","finger","newStoredBiometrics","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","severity","AlertTitle","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","horizontal","Header","paddingLeft","Content","capturedObj","biometricStatus","art","setArt","CardContent","Biometric","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","UserRegistration","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","lastName","middleName","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","useLocation","setfemaleStatus","dateReferredForPrep","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","setCarePoints","setSourceReferral","setEnrollSetting","setKP","setPregnancyStatus","hospitalNumStatus","setHospitalNumStatus","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","KP","PregnancyStatus","GetCountry","alert","useCallback","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","newConatctsInfo","contactInfo","line","fullName","patientForm","landmark","checkPhoneNumberBasic","inputName","slice","autoClose","hideProgressBar","margingRight","Form","defaultChecked","currentDate","setDate","setMonth","dobNew","abs","maritalStatusOption","occupationOption","educationOption","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","getCountryId","setStateByCountryId","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","show","centered","backdrop","Title","Footer","setOvcEnrolled","getSex","identifiers","altphone","employmentStatus","education","getStateId","patientAge","getSexId","dateOfRegistration1","TOP_RIGHT","patientDTO","femaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","kP","pregnancyStatus","transferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","getCharacters","person","hivEnrollment","handleCheckBox","floor","random","App","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.5a4f9c86.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8282/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjcwNTM3NDEzfQ.mJH-EnH0E81PzniqiziG5ted299rDXUEh1-Yi9qLH0WZAAlT9yyptbkK1oE3ZJ1d4-OS3H4IGJsvDNCdXWowXQ';\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}prep/persons`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"PrEP Count\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\r\n                                    hospital_number: getHospitalNumber(row.personResponseDto.identifier),\r\n                                    clientCode: row.uniqueId,\r\n                                    //phone_number:  row.phone,\r\n                                    gender:row && row.personResponseDto.sex ? row.personResponseDto.sex : \"\",\r\n                                    age: (row.personResponseDto.dateOfBirth === 0 ||\r\n                                        row.personResponseDto.dateOfBirth === undefined ||\r\n                                        row.personResponseDto.dateOfBirth === null ||\r\n                                        row.personResponseDto.dateOfBirth === \"\" )\r\n                                            ? 0\r\n                                            : calculate_age(moment(row.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.prepEnrollmentCount}</Label>),\r\n                                \r\n                                actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import Highcharts from 'highcharts';\r\n\r\n// Radialize the colors\r\nHighcharts.setOptions({\r\n    colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n        return {\r\n            radialGradient: {\r\n                cx: 0.5,\r\n                cy: 0.3,\r\n                r: 0.7\r\n            },\r\n            stops: [\r\n                [0, color],\r\n                [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\r\n            ]\r\n        };\r\n    })\r\n});\r\n\r\nexport const ReceivingArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children currently receiving ART by Age'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Currently Receiving ART By Age',\r\n        data: [\r\n            { name: '25 + ',  sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n           \r\n        ]\r\n    }]\r\n};","export const ReceivingArtBySex = {\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: 0,\r\n        plotShadow: false\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART by Sex',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        y: -160\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            \r\n            dataLabels: {\r\n                enabled: true,\r\n                distance: -50,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    color: 'white'\r\n                }\r\n            },\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            center: ['50%', '75%'],\r\n            size: '110%',\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        type: 'pie',\r\n        name: 'Newly Enrolled on ART ',\r\n        innerSize: '50%',\r\n        data: [\r\n            ['Male', 58.9],\r\n            ['Female', 13.29],\r\n            \r\n        ]\r\n    }]\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY DIAGNOSED HIV+</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">VIRALLY SUPPRESSED</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>\r\n                 \r\n                  <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObjs = props.patientObj ? props.patientObj.personResponseDto : {}\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [biometricStatus, setBiometricStatus] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [biometricModal, setBiometricModal] = useState(false);\r\n  const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  const [hivStatus, setHivStatus] = useState();\r\n\r\n  useEffect(() => {\r\n    PatientCurrentStatus();\r\n    CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of KP\r\n  const CheckBiometric =()=>{\r\n      axios\r\n        .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setBiometricStatus(response.data);\r\n            if(response.data===true){\r\n              axios\r\n                  .get(`${baseUrl}biometrics/devices`,\r\n                      { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                  )\r\n                  .then((response) => {\r\n                      setDevices(response.data);\r\n                      \r\n                  })\r\n                  .catch((error) => {\r\n                      console.log(error)\r\n                  });\r\n            \r\n              }\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n  }\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentStatus() {\r\n        axios\r\n            .get(`${baseUrl}hiv/status/patient-current/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              setHivStatus(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n    const loadChildEvaluation =(row)=> {\r\n      props.setActiveContent('child-evaluation')\r\n    }\r\n    const capturePatientBiometric =(row)=> {\r\n      //props.setActiveContent('biometrics')\r\n      props.setActiveContent({...props.activeContent, route:'biometrics', obj:row})\r\n    }\r\n    \r\n    const CurrentStatus = ()=>{\r\n\r\n          return (  <Label color=\"blue\" size=\"mini\">{hivStatus}</Label>);\r\n  }\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      return address ? address.city : '';\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.surname }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>{patientObj.sex && patientObj.sex!==null ?  patientObj.sex : '' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n    const loadEAC =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'counseling'})\r\n    }\r\n    const loadStatusUpdate =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'status-update'})\r\n    }\r\n    const loadPharmacyModal =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'pharmacy'})\r\n    }\r\n    const loadLaboratoryModal =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'laboratory'})\r\n    }\r\n    const loadCervicalCancer = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'cervical-cancer'})\r\n    }\r\n    const loadPrEPDiscontinuationsInterruptions = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions'})\r\n    }\r\n    const loadPrEPRegistrationForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-registration'})\r\n    }\r\n    const loadPrEPCommencementForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-commencement'})\r\n    }\r\n    const loadPrEPEligibiltyScreeningForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-screening'})\r\n    }\r\n    const loadPrEPVisitForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-visit'})\r\n    }\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        //setActiveItem('history')\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"mini\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>                  \r\n                {patientObj.prepEligibilityCount<=0 || patientObj.prepEnrollmentCount<=0 || patientObj.commenced!==true ? \r\n                (<>\r\n                    {patientObj.prepEligibilityCount<=0 && (<Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibilty Screening Form</Menu.Item>)}\r\n                    {patientObj.prepEligibilityCount >0 && patientObj.prepEnrollmentCount<=0 && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\r\n                    {patientObj.prepEligibilityCount >0 && patientObj.prepEnrollmentCount>0 && patientObj.commenced!==true && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\r\n                </>)\r\n                :\r\n                (<>  \r\n                    <Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>\r\n                    <Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>\r\n                </>)}\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                    \r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: '100%',\r\n  },\r\n  heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: 'bolder',\r\n  },\r\n}));\r\nconst RecentHistory = (props) => {\r\n  const classes = useStyles();\r\n  const [vitaLoad, setViralLoad]=useState([])\r\n  const [refillList, setRefillList] = useState([])\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let history = useHistory();\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n\r\n  useEffect(() => {\r\n    LaboratoryHistory();\r\n    PharmacyList();\r\n    ClinicVisitList();\r\n    RecentActivities();\r\n  }, [props.patientObj.id]);\r\n\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities =()=>{\r\n    axios\r\n       .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setRecentActivities(response.data[0].activities)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n  //Get list of LaboratoryHistory\r\n  const LaboratoryHistory =()=>{\r\n    axios\r\n       .get(`${baseUrl}laboratory/orders/patients/${props.patientObj.id}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n           let LabObject= []\r\n                response.data.forEach(function(value, index, array) {\r\n                    const dataOrders = value.labOrder.tests                    \r\n                    if(dataOrders[index]) {\r\n                        dataOrders.forEach(function(value, index, array) {\r\n                            LabObject.push(value)\r\n                        })                       \r\n                    }                   \r\n                });\r\n              setViralLoad(LabObject)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n   //GET LIST Drug Refill\r\n   async function PharmacyList() {\r\n    setLoading(true)\r\n    axios\r\n        .get(`${baseUrl}hiv/art/pharmacy/patient?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLoading(false)\r\n            setRefillList(response.data);                \r\n        })\r\n        .catch((error) => {  \r\n            setLoading(false)  \r\n        });        \r\n  }\r\n   //GET LIST Drug Refill\r\n   async function ClinicVisitList() {\r\n    setLoading(true)\r\n    axios\r\n        .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLoading(false)\r\n            setClinicVisitList(response.data);                \r\n        })\r\n        .catch((error) => {  \r\n            setLoading(false)  \r\n        });        \r\n  }\r\n  const labStatus =(status)=> {\r\n      if(status===0){\r\n        return \"timeline-badge info\"\r\n      }else if(status===1){\r\n        return \"timeline-badge warning\"\r\n      }else if(status===2){\r\n        return \"timeline-badge success\"\r\n      }else if(status===3){\r\n        return \"timeline-badge danger\"\r\n      }else if(status===4){\r\n        return \"timeline-badge primary\"\r\n      }else if(status===5){\r\n        return \"timeline-badge info\"\r\n      }else {\r\n        return \"timeline-badge secondary\"\r\n      }\r\n  }\r\n  const ActivityName =(name)=> {\r\n      if(name==='HIV Enrollment'){\r\n        return \"HE\"\r\n      }else if(name==='Pharmacy refill'){\r\n        return \"PR\"\r\n      }else if(name==='Clinical evaluation'){\r\n        return \"CE\"\r\n      }else if(name==='Clinic visit follow up'){\r\n        return \"CV\"\r\n      }else if(name==='ART Commencement'){\r\n        return \"AC\"\r\n      }else {\r\n        return \"RA\"\r\n      }\r\n  }\r\n\r\n  const LoadViewPage =(row,action)=>{\r\n        \r\n    if(row.path==='Mental-health'){        \r\n        props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='Art-commence'){\r\n        props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='Clinical-evaluation'){\r\n        props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='eac1'){\r\n        props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id, actionType:action})\r\n    }\r\n    else if(row.path==='eac2'){\r\n        props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id, actionType:action})\r\n    }\r\n    else if(row.path==='eac3'){\r\n        props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id, actionType:action})\r\n    }else if(row.path==='hiv-enrollment'){\r\n        history.push({\r\n            pathname: '/update-patient',\r\n            state: { id: row.id, patientObj:props.patientObj, actionType:action }\r\n        });\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n    }else if(row.path==='pharmacy'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        props.setActiveContent({...props.activeContent, route:'pharmacy-update', id:row.id, activeTab:\"history\", actionType:action, obj:row})\r\n\r\n    }else if(row.path==='Laboratory'){\r\n        props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='clinic-visit'){\r\n      props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, activeTab:\"history\",actionType:action, })\r\n\r\n  }else{\r\n\r\n    }\r\n    \r\n  }\r\n  const LoadDeletePage =(row)=>{\r\n      \r\n      if(row.path==='Mental-health'){        \r\n          //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n      }else if(row.path==='Art-commence'){\r\n          //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });\r\n\r\n      }else if(row.path==='Clinical-evaluation'){\r\n          //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });\r\n\r\n      }else if(row.path==='eac1'){\r\n          //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/eac/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n      }\r\n      else if(row.path==='eac2'){\r\n          //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/eac/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n      }\r\n      else if(row.path==='eac3'){\r\n          //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/eac/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n      }else if(row.path==='hiv-enrollment'){\r\n          axios\r\n          .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n          //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n      }else if(row.path==='pharmacy'){\r\n          //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n          //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n          axios\r\n          .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          }); \r\n\r\n      }else if(row.path==='clinic-visit'){\r\n          //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          }); \r\n      }else{\r\n\r\n      }\r\n      \r\n  }\r\n  const redirectLink=()=>{\r\n    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                    defaultActiveKey=\"0\"\r\n                  >\r\n                    <>\r\n                    {recentActivities.map((data, i)=>\r\n                    <div className=\"accordion-item\" key={i}>\r\n                      <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                      >\r\n                      <span className=\"accordion-header-icon\"></span>\r\n                      <span className=\"accordion-header-text\">Encounter Date : <span className=\"\">{data.date}</span> </span>\r\n                      <span className=\"accordion-header-indicator\"></span>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse\r\n                      eventKey={`${i}`}\r\n                      className=\"accordion__body\"\r\n                    >\r\n                      <div className=\"accordion-body-text\">\r\n                      <ul className=\"timeline\">\r\n\r\n                            <li>\r\n                              <div className=\"timeline-panel\">\r\n                              <div className={i % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(data.name)}</div>\r\n                              <div className=\"media-body\">\r\n                                <h5 className=\"mb-1\">{data.name}</h5>\r\n                                <small className=\"d-block\">\r\n                                {data.date}\r\n                                </small>\r\n                              </div>\r\n                              <Dropdown className=\"dropdown\">\r\n                                <Dropdown.Toggle\r\n                                variant=\" light\"\r\n                                className=\"i-false p-0 btn-info sharp\"\r\n                                >\r\n                                <svg\r\n                                  width=\"18px\"\r\n                                  height=\"18px\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  version=\"1.1\"\r\n                                >\r\n                                  <g\r\n                                  stroke=\"none\"\r\n                                  strokeWidth=\"1\"\r\n                                  fill=\"none\"\r\n                                  fillRule=\"evenodd\"\r\n                                  >\r\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                                  </g>\r\n                                </svg>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"dropdown-menu\">\r\n                                {data.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(data,'view')}\r\n                                  >\r\n                                  View\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                {data.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(data,'update')}\r\n                                  >\r\n                                  Update\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                  {data.deletable && (<Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  to=\"/widget-basic\"\r\n                                  onClick={()=>LoadDeletePage(data)}\r\n                                  >\r\n                                  Delete\r\n                                  </Dropdown.Item>\r\n                                  )}\r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              </div>\r\n                            </li>\r\n                                                   \r\n                      </ul>\r\n                      </div>\r\n                    </Accordion.Collapse>\r\n                  </div>\r\n                )}\r\n                </>\r\n                </Accordion>\r\n                \r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-0 pb-0\">\r\n            <h4 className=\"card-title\">Visit Chart</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <PerfectScrollbar\r\n              style={{ height: \"370px\" }}\r\n              id=\"DZ_W_TimeLine\"\r\n              className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n            >\r\n              <ul className=\"timeline\">\r\n                {vitaLoad.length >0 ? (\r\n                  <>\r\n                    {vitaLoad.map((test,index) => ( \r\n                    <>\r\n                      <li key={index}>\r\n                      <div className={labStatus(test.labTestOrderStatus)}></div>\r\n                      <span\r\n                        className=\"timeline-panel text-muted\"\r\n                        onClick={()=>redirectLink()}\r\n                        //to=\"\"\r\n                      >\r\n                        <h6 className=\"mb-0\">\r\n                          Test Order Date{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.orderDate}</strong>\r\n                        </h6>\r\n                        {test.labTestGroupName!=='others' &&(<h6 className=\"mb-0\">\r\n                          Test Order{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestGroupName + \" - \" + test.labTestName}</strong>.\r\n                        </h6>\r\n                          )}\r\n                          {test.labTestGroupName==='others' &&(<h6 className=\"mb-0\">\r\n                          Test Order{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestName + \" - \" + test.viralLoadIndicationName}</strong>.\r\n                        </h6>\r\n                          )}\r\n                        \r\n                        <h6 className=\"mb-0\">\r\n                          Status{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestOrderStatusName}</strong>.\r\n                        </h6>\r\n                        \r\n                      </span>\r\n                      </li>\r\n                    </>\r\n\r\n                    ))}\r\n                  \r\n                  </>\r\n                  ) \r\n                  :\r\n                  <Alert\r\n                    variant=\"info\"\r\n                    className=\"alert-dismissible solid fade show\"\r\n                  >\r\n                    <p>No visit yet</p>\r\n                  </Alert>\r\n                }\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n\r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            <Input\r\n                type=\"select\"\r\n                name=\"adr\"\r\n                id=\"adr\"\r\n                value={props.adrObj.adr}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                >\r\n                  <option value=\"\"> Select</option>\r\n                    {prepSideEffect.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                        </option>\r\n                    ))}\r\n            </Input>\r\n            {errors.adr !==\"\" ? (\r\n                <span className={classes.error}>{errors.adr}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                onChange={handAdrleInputChange}\r\n                min={props.artStartDate}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n        <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n            <Icon name='plus' /> Add\r\n        </LabelSui>\r\n        </div>\r\n\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n      </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n            <FormGroup>\r\n            <Label >Onset Date </Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"ondateInfection\"\r\n                id=\"ondateInfection\"\r\n                value={props.infection.ondateInfection}\r\n                onChange={handleInfectionInputChange}\r\n                min={props.artStartDate}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.ondateInfection !==\"\" ? (\r\n                <span className={classes.error}>{errors.ondateInfection}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Illness</Label>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"illnessInfection\"\r\n                id=\"illnessInfection\"\r\n                value={props.infection.illnessInfection}\r\n                onChange={handleInfectionInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.illnessInfection !==\"\" ? (\r\n                <span className={classes.error}>{errors.illnessInfection}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-2\">\r\n        <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n            <Icon name='plus' /> Add\r\n        </LabelSui>\r\n        </div>\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, Icon, List, Button, Card,Feed } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          Input,\r\n        } from \"reactstrap\";\r\nimport ADR from './ADR/Index'\r\nimport OpportunisticInfection from './OpportunisticInfection/Index'\r\nimport TBScreening from './TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\n//import AddVitals from './Vitals/AddVitals'\r\nimport AddAllergy from './Allergies/AddAllergy'\r\nimport AddCondition from './Conditions/AddCondition'\r\nimport PostPatient from './PostPatient/Index'\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Accordion, Alert } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n\r\n      adherenceLevel: \"\",\r\n      dateInitialAdherenceCounseling: \"\",\r\n      datePrepStart: \"\",\r\n      dateReferred: \"\",\r\n      diastolic: \"\",\r\n      extra: {},\r\n      height: \"\",\r\n      nextAppointment: \"\",\r\n      personId: \"\",\r\n      pregnant: \"\",\r\n      prepEnrollmentUuid: \"\",\r\n      pulse: \"\",\r\n      referred: \"\",\r\n      regimenId: \"\",\r\n      respiratoryRate: \"\",\r\n      stiScreening: \"\",\r\n      systolic: \"\",\r\n      temperature: \"\",\r\n      urinalysisResult: \"\",\r\n      weight: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    SYNDROMIC_STI_SCREENING();\r\n    VitalSigns();\r\n    GetPatientObj();\r\n    ClinicVisitList();\r\n    PatientDetaild();\r\n    PREP_STATUS();\r\n    //hiv/patient/3\r\n  }, []);\r\n  const PREP_STATUS =()=>{\r\n    axios\r\n    .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    )\r\n    .then((response) => {\r\n        setPrepStatus(response.data);\r\n    })\r\n    .catch((error) => {\r\n    //console.log(error);\r\n    });    \r\n}\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitList() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data);                \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n    //Check for the last Vital Signs\r\n    const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n    }\r\n    //Check for the Patient Object\r\n    const PatientDetaild = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patient/${props.patientObj.id}`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            patientObj=response.data\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n      }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const SYNDROMIC_STI_SCREENING = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setSti(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n\r\n    objValues['vitalSignDto'] = vital\r\n    axios.post(`${baseUrl}prep/clinic-visit`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        PatientDetaild();\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit save successful\");\r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-6\">\r\n        <h2>Clinic Follow-up Visit</h2>\r\n        </div>\r\n        \r\n      </div>\r\n      <Grid columns='equal'>\r\n       <Grid.Column width={5}>\r\n          \r\n            <Segment>\r\n              <Label as='a' color='blue' style={{width:'110%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>Vital Signs</h4>\r\n              </Label>\r\n              <br />\r\n\r\n               <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <br/>\r\n                    <ul className=\"timeline\">\r\n                    { clinicVisitList.length > 0 ?(\r\n                      \r\n                    <Accordion\r\n                        className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                        defaultActiveKey=\"0\"\r\n                        \r\n                      >\r\n                        <>\r\n                        {clinicVisitList.map((visit, i)=>\r\n                        <div className=\"accordion-item\" key={i} >\r\n                          <Accordion.Toggle\r\n                              as={Card.Text}\r\n                              eventKey={`${i}`}\r\n                              className={`accordion-header ${\r\n                                activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                              } accordion-header-info`}\r\n                              onClick={() =>\r\n                                setActiveAccordionHeaderShadow(\r\n                                  activeAccordionHeaderShadow === 1 ? -1 : i\r\n                                )\r\n                              }\r\n                              style={{width:'100%'}}\r\n                          >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text float-start\">Visit Date : <span className=\"\">{visit.visitDate}</span> </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                        \r\n                              <List celled style={{width:'100%'}}>\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.pulse!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px',borderTop:'1px solid #fff', marginTop:'-5px' }}>Pulse <span style={{color:'rgb(153, 46, 98)'}} className=\"float-end\"><b>{visit.vitalSignDto.pulse} bpm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.respiratoryRate!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Respiratory Rate <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.respiratoryRate} bpm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.temperature!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Temperature <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.temperature} <sup>0</sup>C</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.systolic!==null && visit.vitalSignDto.diastolic!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Blood Pressure <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.systolic}/{visit.vitalSignDto.diastolic}</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.height!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Height <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.height} cm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.bodyWeight!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Weight <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.bodyWeight} kg</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.bodyWeight!==null && visit.vitalSignDto.height!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>BMI <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{Math.round(visit.vitalSignDto.bodyWeight/(visit.vitalSignDto.height/100))} kg</b></span></List.Item>)}\r\n                              </List>\r\n                            \r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    )}\r\n                    </>\r\n                    </Accordion>             \r\n\r\n                ):\r\n                (\r\n                  <>\r\n                  <br/>\r\n                  <Alert\r\n                      variant=\"info\"\r\n                      className=\"alert-dismissible solid fade show\"\r\n                    >\r\n                      <p>No Vital Signs</p>\r\n                    </Alert>\r\n                  </>\r\n                )}\r\n                    </ul>\r\n               \r\n                </PerfectScrollbar>\r\n            </Segment>\r\n           \r\n        </Grid.Column>\r\n        <Grid.Column width={11}>\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    value={vital.encounterDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChangeVitalSignDto}\r\n                    min={props.patientObj && props.patientObj.artCommence ? props.patientObj.artCommence.visitDate : null}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                 {errors.encounterDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.encounterDate}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                {showCurrentVitalSigns && (\r\n                  <div className=\"form-check custom-checkbox ml-1 \">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"currentVitalSigns\"\r\n                      id=\"currentVitalSigns\"\r\n                      onChange={handleCheckBox} \r\n                                          \r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"basic_checkbox_1\"\r\n                    >\r\n                      use current Vital Signs\r\n                    </label>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n            <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}></h4>\r\n            </Label>\r\n            <br /><br />\r\n\r\n            <div className=\"row\">\r\n\r\n             \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >HIV Test Result </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={objValues.hivTestResult}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenStartPrep\"\r\n                    id=\"regimenStartPrep\"\r\n                    value={objValues.regimenStartPrep}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\r\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Level of Adherence *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syndromic STI Screening </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening \"\r\n                    id=\"syndromicSstiScreeningTIScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.syndromicSTIScreening==='Yes' && (\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {sti.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              )}\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepGiven\"\r\n                    id=\"prepGiven\"\r\n                    value={objValues.prepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>       \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date PrEP Givern</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"datePrepGiven\"\r\n                    id=\"datePrepGiven\"\r\n                    value={objValues.datePrepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div> \r\n            \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Status</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepStatus\"\r\n                    id=\"prepStatus\"\r\n                    value={objValues.prepStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            \r\n           \r\n            <br />\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={saving}\r\n              startIcon={<SaveIcon />}\r\n              style={{backgroundColor:\"#014d88\"}}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AddAllergy = (props) => {\r\n\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [allergy, setAllergy]= useState({allergy: \"\"})\r\n    \r\n        const handleInputChange = e => {            \r\n            setAllergy ({...allergy,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, allergy,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  //props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"md\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Add Allergy\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Allergies</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"allergy\"\r\n                                            id=\"allergy\"\r\n                                            //value={allergy.functionalStatusId}\r\n                                            //onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\">Select </option>\r\n                                           \r\n                                        </Input>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAllergy;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AddCondition = (props) => {\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [allergy, setAllergy]= useState({allergy: \"\"})\r\n    \r\n        const handleInputChange = e => {            \r\n            setAllergy ({...allergy,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, allergy,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"md\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Add Conditions\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Conditions</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"allergy\"\r\n                                            id=\"allergy\"\r\n                                            //value={allergy.functionalStatusId}\r\n                                            //onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\">Select </option>\r\n                                           \r\n                                        </Input>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCondition;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {  Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from 'date-fns';\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\nlet newDate = new Date()\r\n\r\nconst PostPatient = (props) => {\r\n    const patientObj = props.patientObj;\r\n    const [selectedOption, setSelectedOption] = useState();\r\n    const classes = useStyles()\r\n    const [services, setServices]= useState([]);\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        ServicesPost()\r\n      }, []);\r\n        ///GET LIST OF Post Services\r\n        async function ServicesPost() {\r\n            axios\r\n                .get(`${baseUrl}patient/vital-sign/post-service`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    const filterService = response.data.filter((x) => x.moduleServiceCode!=='consultation-code' && x.moduleServiceCode!=='hiv-code')\r\n                    setServices(\r\n                        Object.entries(filterService).map(([key, value]) => ({\r\n                          label: value.moduleServiceName,\r\n                          value: value.moduleServiceCode,\r\n                        })))\r\n                 \r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n\r\n    const [postServices, setPostServices]= useState({                                                  \r\n                                                        encounterDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n                                                        facilityId: 1,\r\n                                                        personId:\"\",\r\n                                                        serviceCode:\"\",\r\n                                                        visitId: \"\"\r\n                                                    })\r\n    \r\n\r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            let serviceArr = []\r\n            selectedOption.forEach(function (value, index, array) {\r\n                serviceArr.push(value['value'])\r\n            })\r\n            postServices.personId=patientObj.id\r\n            postServices.visitId=patientObj.visitId\r\n            postServices.serviceCode=serviceArr\r\n            axios.post(`${baseUrl}patient/post`, postServices,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  //props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Post Patient\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                              \r\n                                   <Select\r\n                                        onChange={setSelectedOption}\r\n                                        value={selectedOption}\r\n                                        options={services}\r\n                                        isMulti=\"true\"\r\n                                        noOptionsMessage=\"true\"\r\n                                    />\r\n\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                    >\r\n                                    {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostPatient;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);\r\n     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n        {props.enableUpdate && (\r\n        <>\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            \r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"adr\"\r\n                  id=\"adr\"\r\n                  value={props.adrObj.adr}\r\n                  onChange={handAdrleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                      {prepSideEffect.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n                {errors.adr !==\"\" ? (\r\n                    <span className={classes.error}>{errors.adr}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                min={props.artStartDate}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n        </div>\r\n        </>)}\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n       {props.enableUpdate && (\r\n        <>\r\n          <div className=\"form-group mb-3 col-md-5\">\r\n              <FormGroup>\r\n              <Label >Onset Date </Label>\r\n              <Input\r\n                  type=\"date\"\r\n                  name=\"ondateInfection\"\r\n                  id=\"ondateInfection\"\r\n                  value={props.infection.ondateInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.ondateInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.ondateInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-5\">        \r\n          <FormGroup>\r\n              <Label > Illness</Label>\r\n              <Input\r\n                  type=\"text\"\r\n                  name=\"illnessInfection\"\r\n                  id=\"illnessInfection\"\r\n                  value={props.infection.illnessInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.illnessInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.illnessInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n          </div>\r\n        </>\r\n        )}\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input, Label, FormGroup} from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { token, url as baseUrl } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst TBScreeningForm = (props) => {\r\n  const [tbStatus, setTbStatus] = useState([]); \r\n  const [TBForms, setTBForms] = useState(false) \r\n\r\n  useEffect(() => {\r\n    TBStatus();\r\n    if(props.tbObj.antiTBDrug ==='NO'){\r\n      setTBForms(true)\r\n    }else{\r\n      setTBForms(false)\r\n    }\r\n    }, [props.tbObj]);\r\n\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const TBStatus =()=>{\r\n    axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    const handleInputChange = e => {\r\n      props.setTbObj ({...props.tbObj,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"antiTBDrug\" ){\r\n          if(e.target.value===\"NO\"){\r\n              setTBForms(true)\r\n          }else{\r\n              setTBForms(false)\r\n          }\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n          \r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n              <Label >Patient on Anti TB Drugs?</Label>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"antiTBDrug\"\r\n                  id=\"antiTBDrug\"\r\n                  value={props.tbObj.antiTBDrug}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  disabled={!props.enableUpdate}\r\n                  required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n\r\n              </Input>\r\n              \r\n            </FormGroup>\r\n          </div>\r\n          {TBForms===true ? (\r\n            <>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label >Patient Currently on IPT?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"currentOnIpt\"\r\n                    id=\"currentOnIpt\"\r\n                    value={props.tbObj.currentOnIpt}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                        <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >coughing?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"coughing\"\r\n                    id=\"coughing\"\r\n                    value={props.tbObj.coughing}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Night Sweat?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"nightSweat\"\r\n                    id=\"nightSweat\"\r\n                    value={props.tbObj.nightSweat}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Fever</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"fever\"\r\n                    id=\"fever\"\r\n                    value={props.tbObj.fever}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Contact with TB Case?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"contactWithTBCase\"\r\n                    id=\"contactWithTBCase\"\r\n                    value={props.tbObj.contactWithTBCase}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Lethergy</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"lethergy\"\r\n                    id=\"lethergy\"\r\n                    value={props.tbObj.lethergy}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              {/* <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {tbStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div> */}\r\n              {(props.tbObj.currentOnIpt===\"NO\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on INH prophylaxis'  && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"YES\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"YES\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"YES\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"YES\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"YES\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n          </>\r\n          )\r\n          :\r\n          \"\"\r\n          }\r\n        </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\n\r\n\r\nexport default TBScreeningForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label,} from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          InputGroupButtonDropdown,\r\n          Input,\r\n          DropdownToggle,\r\n          DropdownMenu,\r\n          DropdownItem\r\n        } from \"reactstrap\";\r\nimport ADR from './../ADR/Index'\r\nimport OpportunisticInfection from './../OpportunisticInfection/Index'\r\nimport TBScreening from './../TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col,   } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Button as ButtonSMUI, Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom';\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst ClinicVisit = (props) => {\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [visitId, setVisitId]= useState()\r\n  const [enableUpdateButton, setEnableUpdateButton]=useState(false)\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [enableUpdate, setEnableUpdate]= useState(false) //Enable update for all input field if the user have permission\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  // the visit date history \r\n  //end of the visit date history\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns()\r\n    GetPatientObj();\r\n    ClinicVisitListHistory();\r\n    if(props.activeContent.id!==null){\r\n     \r\n      GetVisitById(props.activeContent.id)\r\n      setVisitId(props.activeContent.id)\r\n    }\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitListHistory() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data.filter((x)=> x.isCommencement!==true));              \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n  //Check for the last Vital Signs\r\n  const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const  heightFunction =(e)=>{\r\n    if(e==='cm'){\r\n        setHeightValue('cm')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height * 100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n    }else if(e==='m'){\r\n        setHeightValue('m')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height/100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n        \r\n    }\r\n\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.put(`${baseUrl}hiv/art/clinic-visit/${visitId}`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit updated successful\");\r\n        //GetVisitById(visitId)\r\n        //props.setActiveContent({...props.activeContent, route:'consultation', id:\"\", activeTab:\"history\", actionType:\"view\", obj:{}})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n  //Get visit by ID\r\n  async function GetVisitById(visitID) {\r\n    axios\r\n      .get(`${baseUrl}hiv/art/clinic-visit/${visitID}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n          const e = response.data\r\n          setVitalSignDto({ ...e.vitalSignDto })\r\n          objValues.clinicalNote = e.clinicalNote\r\n          objValues.functionalStatusId= e.functionalStatusId\r\n          objValues.whoStagingId= e.whoStagingId \r\n          objValues.nextAppointment= e.nextAppointment\r\n          objValues.adherenceLevel = e.adherenceLevel\r\n          setTbObj({...e.tbScreen})\r\n          setAdrList([...e.adverseDrugReactions])\r\n          setInfectionList([...e.opportunisticInfections])\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const getVisitDetail=(e)=>{\r\n      setEnableUpdateButton(true)\r\n      setVisitId(e.id)\r\n      GetVisitById(e.id)      \r\n  }\r\n  const EnableUpdateAction =()=>{\r\n\r\n      setEnableUpdate(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-3 col-xxl-3 col-lg-3\" >\r\n                <div className=\"card\" style={{ height: \"500px\" }}>\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> Clinic Visits</h4>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                    {clinicVisitList.map((visit,index)=>(\t\r\n                    <div className=\"media pb-3 border-bottom mb-0 align-items-center\" key={index}>\t\t\t\t\t\t\t\t\r\n                      <div className=\"media-body\">\r\n                            <ButtonSMUI\r\n                                color='black'\r\n                                content='Visit Date'\r\n                                icon='calendar alternate'\r\n                                onClick={()=>getVisitDetail(visit)}\r\n                                label={{ basic: true, color: 'grey', pointing: 'left', content: `${visit.visitDate}` }}\r\n                            />\r\n                      </div>\r\n                    </div>\r\n\t\t\t\t\t\t))}\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-9 col-xxl-9 col-lg-9\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> </h4>\r\n                    {enableUpdateButton && (\r\n                    <ButtonSMUI color='facebook' onClick={()=>EnableUpdateAction()} >\r\n                      <Icon name='edit' /> Edit Visit \r\n                    </ButtonSMUI>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Grid columns='equal'>\r\n                    <Grid.Column >\r\n                    <Segment>\r\n                    <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}> Visit Date - {vital.encounterDate}</h4>\r\n                        </Label>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Date of Visit *</FormLabelName>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"encounterDate\"\r\n                                id=\"encounterDate\"\r\n                                value={vital.encounterDate}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                            {errors.encounterDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.encounterDate}</span>\r\n                            ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n                        </div>\r\n                        <Label as='a' color='grey' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n\r\n                        <div className=\" mb-3\">\r\n                        <FormLabelName >Clinical Notes</FormLabelName>\r\n                        <textarea\r\n                            name=\"clinicalNote\"\r\n                            className=\"form-control\"\r\n                            value={objValues.clinicalNote}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            disabled={!enableUpdate}\r\n                        ></textarea>\r\n                        {errors.clinicalNote !==\"\" ? (\r\n                                <span className={classes.error}>{errors.clinicalNote}</span>\r\n                            ) : \"\" }\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >WHO Staging *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"whoStagingId\"\r\n                                id=\"whoStagingId\"\r\n                                value={objValues.whoStagingId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {clinicalStage.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.whoStagingId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.whoStagingId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Functional Status *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"functionalStatusId\"\r\n                                id=\"functionalStatusId\"\r\n                                value={objValues.functionalStatusId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {functionalStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.functionalStatusId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Level of Adherence *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"adherenceLevel\"\r\n                                id=\"adherenceLevel\"\r\n                                value={objValues.adherenceLevel}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n\r\n                                {adherenceLevel.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.adherenceLevel !==\"\" ? (\r\n                                <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <br />\r\n                        <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='pink' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>ADR</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList}  enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <TBScreening tbObj={tbObj} setTbObj={setTbObj} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <Input\r\n                                type=\"date\"\r\n                                name=\"nextAppointment\"\r\n                                id=\"nextAppointment\"\r\n                                className=\"col-md-6\"\r\n                                value={objValues.nextAppointment}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                        {errors.nextAppointment !==\"\" ? (\r\n                                <span className={classes.error}>{errors.nextAppointment}</span>\r\n                            ) : \"\" }\r\n                        <br />\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={saving}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        hidden={!enableUpdate}\r\n                        >\r\n                        {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                        ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                        )}\r\n                        </MatButton>\r\n                    </Segment>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"@reach/menu-button/styles.css\";\r\nimport ConsultationPage from './History/ConsultationPage'\r\n\r\n\r\nconst ClinicVisitHistory = (props) => {    \r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n\r\n  return (\r\n    <div>\r\n         <div className=\"row\">\r\n            \r\n                <ConsultationPage patientObj={patientObj} activeContent={props.activeContent} />  \r\n\r\n        </div>   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClinicVisitHistory;\r\n\r\n\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ViewUpdate/ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent.id]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" HISTORY\">                   \r\n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input,InputGroup,\r\n    InputGroupText,} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n      success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n      }, \r\n}))\r\n\r\nconst PrEPCommencementForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    console.log(props)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInitialAdherenceCounseling: \"\",\r\n        datePrepStart: \"\",\r\n        height: \"\",\r\n        personId: patientObj.personId,\r\n        prepClientId: props.prepId,\r\n        regimenId: \"\",\r\n        urinalysisResult: \"\",\r\n        prepEligibilityUuid:\"\",\r\n        weight:\"\",\r\n        drugAllergies:\"\",\r\n        reffered:\"\",\r\n        datereferred:\"\",\r\n        extra: {},\r\n        nextAppointment: \"\",\r\n        pregnant: true,\r\n        prepEnrollmentUuid: \"\",\r\n\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [pregnant, setpregnant] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [patientDto, setPatientDto] = useState();\r\n\r\n    useEffect(() => {         \r\n        PREGANACY_STATUS();\r\n        GetPatientDTOObj();\r\n    }, []);\r\n    const PREGANACY_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setpregnant(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const GetPatientPrepEligibility =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               //setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n            //Vital signs clinical decision support \r\n    const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n        bodyWeight: \"\",\r\n        height: \"\",\r\n    })\r\n    const handleInputChange = e => { \r\n          \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }    \r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateInitialAdherenceCounseling = objValues.dateInitialAdherenceCounseling ? \"\" : \"This field is required\"\r\n        temp.datePrepStart = objValues.datePrepStart ? \"\" : \"This field is required\"\r\n        temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\r\n        temp.height = objValues.height ? \"\" : \"This field is required\"\r\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n        temp.reffered = objValues.reffered ? \"\" : \"This field is required\"\r\n        temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to check the input value for clinical decision \r\n    const handleInputValueCheckHeight =(e)=>{\r\n        if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n        const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n        }\r\n    }\r\n    const handleInputValueCheckBodyWeight =(e)=>{\r\n        if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n        const message =\"Body weight must not be greater than 150 and less than 3\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n        }\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n           setSaving(true);\r\n           objValues.prepEnrollmentUuid=patientDto.uuid \r\n          axios.post(`${baseUrl}prep/commencement`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                 \r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                      toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n            }          \r\n    }\r\n\r\n  return (      \r\n        <div >      \r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2> PrEP Commencement </h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Initial Adherence Counseling </Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateInitialAdherenceCounseling\"\r\n                                id=\"dateInitialAdherenceCounseling\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateInitialAdherenceCounseling}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                            />\r\n                            {errors.dateInitialAdherenceCounseling !==\"\" ? (\r\n                                <span className={classes.error}>{errors.dateInitialAdherenceCounseling}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date PrEP started *</Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"datePrepStart\"\r\n                                id=\"datePrepStart\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                            />\r\n                             {errors.datePrepStart !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datePrepStart}</span>\r\n                            ) : \"\" }   \r\n                            </FormGroup>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\" mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Body Weight</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"weight\"\r\n                                    id=\"weight\"\r\n                                    onChange={handleInputChange}\r\n                                    min=\"3\"\r\n                                    max=\"150\"\r\n                                    value={objValues.weight}\r\n                                    onKeyUp={handleInputValueCheckBodyWeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    kg\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                    <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                            ) : \"\"}\r\n                            {errors.weight !==\"\" ? (\r\n                                <span className={classes.error}>{errors.weight}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>                                   \r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Height</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    cm\r\n                            </InputGroupText>\r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"height\"\r\n                                    id=\"height\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.height}\r\n                                    min=\"48.26\"\r\n                                    max=\"216.408\"\r\n                                    onKeyUp={handleInputValueCheckHeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                    <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    \r\n                                    style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.height !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                            ) : \"\"}\r\n                            {errors.height !==\"\" ? (\r\n                                <span className={classes.error}>{errors.height}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                            {objValues.weight!==\"\" && objValues.height!==''&&(\r\n                                <FormGroup>\r\n                                <Label > {\" \"}</Label>\r\n                                <InputGroup> \r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    BMI : {Math.round(objValues.weight/((objValues.height * objValues.height)/100))}\r\n                                </InputGroupText>                   \r\n                            \r\n                                </InputGroup>                \r\n                                </FormGroup>\r\n                            )}\r\n                        </div>\r\n                        {props.patientObj.personResponseDto.sex==='Female'  || props.patientObj.personResponseDto.sex==='female' || props.patientObj.personResponseDto.sex==='FEMALE' && (       \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Pregnancy Status</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"pregnant\"\r\n                            id=\"pregnant\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.pregnant}  \r\n                        >\r\n                        <option value=\"1\"> </option>\r\n                        {pregnant.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        \r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        {objValues.pregnant==='PREGANACY_STATUS_BREASTFEEDING' && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Breast Feeding</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"breastFeeding\"\r\n                            id=\"breastFeeding\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.breastFeeding}\r\n                            \r\n                        >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">History of drug Allergies</Label>\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            name=\"drugAllergies\"\r\n                            id=\"drugAllergies\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.drugAllergies}\r\n                            \r\n                        />\r\n                      \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Urinalysis Result</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"urinalysisResult\"\r\n                            id=\"urinalysisResult\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.urinalysisResult}\r\n                            \r\n                        />\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">referred</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"reffered\"\r\n                            id=\"reffered\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.reffered}\r\n                            \r\n                        >\r\n                        <option value=\"\"> </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        {errors.reffered !==\"\" ? (\r\n                                <span className={classes.error}>{errors.reffered}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Date referred</Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"datereferred\"\r\n                            id=\"datereferred\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.datereferred}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                        />\r\n                        {errors.datereferred !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datereferred}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">PrEP Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"regimenId\"\r\n                            id=\"regimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.regimenId}\r\n                            \r\n                        >\r\n                        <option value=\"1\"> All Regimen</option>\r\n                        <option value=\"34\"> First Line</option>\r\n                        <option value=\"34\"> Second Line</option>\r\n                        <option value=\"34\"> Third Line</option>\r\n            \r\n                        </Input>\r\n                        {errors.regimenId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.regimenId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        //maxWidth: 752,\r\n        //flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    \r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInterruption: \"\",\r\n        why: \"\",\r\n        interruptionType: \"\",\r\n        dateRestartPlacedBackMedication: \"\",\r\n        personId: patientObj.personId,\r\n        causeOfDeath: \"\",\r\n        dateClientDied: \"\",\r\n        dateClientReferredOut: \"\",\r\n        facilityReferredTo: \"\",\r\n        interruptionDate: \"\",\r\n        interruptionReason: \"\",\r\n        sourceOfDeathInfo: \"\"\r\n      });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prepStatus, setPrepStatus] = useState([]);\r\n\r\n    useEffect(() => {         \r\n        PREP_STATUS();\r\n    }, []);\r\n    const PREP_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPrepStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.interruptionDate = objValues.interruptionDate ? \"\" : \"This field is required\"\r\n        temp.interruptionType = objValues.interruptionType ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n         //console.log(objValues)\r\n         if(validate()){\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}prep/interruption`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    \r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n        }\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div>                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2> PrEP Discontinuations & Interruptions</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">PrEP Interruptions </Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"interruptionType\"\r\n                            id=\"interruptionType\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.interruptionType}\r\n                            required\r\n                        >\r\n                         <option value=\"\">Select</option>\r\n\r\n                        {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        </Input>\r\n                        {errors.interruptionType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionType}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of Interruption </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"interruptionDate\"\r\n                            id=\"interruptionDate\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.interruptionDate}\r\n                            required\r\n                        />\r\n                        {errors.interruptionDate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.interruptionDate}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    {objValues.interruptionType==='PREP_STATUS_TRANSFER_OUT' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateClientReferredOut\"\r\n                            id=\"dateClientReferredOut\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientReferredOut}\r\n                            required\r\n                        />\r\n                        {errors.dateClientReferredOut !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientReferredOut}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Facility referred to </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"facilityReferredTo\"\r\n                            id=\"facilityReferredTo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityReferredTo}\r\n                            required\r\n                        />\r\n                        {errors.facilityReferredTo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.facilityReferredTo}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {objValues.interruptionType==='PREP_STATUS_DEAD' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client died </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateClientDied\"\r\n                            id=\"dateClientDied\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientDied}\r\n                            required\r\n                        />\r\n                        {errors.dateClientDied !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientDied}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Cause of death</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"causeOfDeath\"\r\n                            id=\"causeOfDeath\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.causeOfDeath}\r\n                            required\r\n                        />\r\n                        {errors.causeOfDeath !==\"\" ? (\r\n                            <span className={classes.error}>{errors.causeOfDeath}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Source of death information  </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"sourceOfDeathInfo\"\r\n                            id=\"sourceOfDeathInfo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.sourceOfDeathInfo}\r\n                            required\r\n                        />\r\n                        {errors.sourceOfDeathInfo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.sourceOfDeathInfo}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"why\"\r\n                            id=\"why\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.why}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div> */}\r\n                     {objValues.interruptionType==='PREP_STATUS_RESTART' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date of restart if placed back on medication</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateRestartPlacedBackMedication\"\r\n                            id=\"dateRestartPlacedBackMedication\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateRestartPlacedBackMedication}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateRestartPlacedBackMedication !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateRestartPlacedBackMedication}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                     )}\r\n                     {objValues.interruptionType==='PREP_STATUS_SEROCONVERTED' && (\r\n                     <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateSeroconverted\"\r\n                            id=\"dateSeroconverted\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateSeroconverted}\r\n                            required\r\n                        />\r\n                        {errors.dateSeroconverted !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateSeroconverted}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                     )}\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Link to ART</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"linkToArt\"\r\n                            id=\"linkToArt\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.linkToArt}  \r\n                        >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"Yes\">Yes </option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        {errors.linkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.linkToArt}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date link to ART</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateLinkToArt\"\r\n                            id=\"dateLinkToArt\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateLinkToArt}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateLinkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateLinkToArt}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n\r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    style={{backgroundColor:'#992E62'}}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card>                    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from 'moment';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    //let patientAge=\"\"\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    let temp = { ...errors }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n    const [objValues, setObjValues]= useState(\r\n            {\r\n                counselingType: \"\",\r\n                drugUseHistory: {},\r\n                extra: {},\r\n                firstTimeVisit: true,\r\n                hivRisk: {},\r\n                numChildrenLessThanFive: \"\",\r\n                numWives: \"\",\r\n                personId: \"\",\r\n                personalHivRiskAssessment: {},\r\n                sexPartner: \"TARGET_GROUP_GEN_POP\",\r\n                sexPartnerRisk: {},\r\n                stiScreening: {},\r\n                targetGroup: \"TARGET_GROUP_GEN_POP\",\r\n                uniqueId: \"\",\r\n                visitDate:\"\"\r\n            }\r\n    )\r\n    useEffect(() => { \r\n        \r\n        //console.log(props.extra.riskAssessment)\r\n        CounselingType();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEligibility(props.activeContent.id)\r\n        }\r\n    }, [props.patientObj]);\r\n    const GetPatientPrepEligibility =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               //setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{        \r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        props.handleItemClick(page)\r\n    }\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            unprotectedVaginalSexCasual:\"\",\r\n            unprotectedVaginalSexRegular:\"\",\r\n            uprotectedAnalSexWithCasual:\"\",\r\n            uprotectedAnalSexWithRegular:\"\", \r\n            stiHistory:\"\",  \r\n            sharedNeedles:\"\",   \r\n            moreThan1SexPartner:\"\",\r\n            analSexWithPartner :\"\",\r\n            unprotectedAnalSexWithPartner:\"\",\r\n            haveYouPaidForSex:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            experienceCondomBreakage:\"\",\r\n            takenPartInSexualOrgy:\"\",\r\n                          \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                           \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            haveSexWithHIVPositive:\"\",\r\n            haveSexWithPartnerInjectDrug:\"\",\r\n            haveSexWithPartnerWhoHasSexWithMen :\"\",\r\n            haveSexWithPartnerTransgender :\"\",\r\n            sexWithPartnersWithoutCondoms:\"\",             \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\r\n                    \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n            analDischarge:\"\",\r\n            analItching:\"\",\r\n            analpain:\"\",\r\n            swollenIguinal:\"\", \r\n            genitalScore:\"\",\r\n                \r\n        }\r\n    )\r\n    const handleInputChangeStiScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});   \r\n                \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    const [drugHistory, setDrugHistory]= useState(\r\n        {\r\n            useAnyOfTheseDrugs:\"\",\r\n            inject:\"\",\r\n            sniff:\"\", \r\n            smoke:\"\", \r\n            Snort:\"\", \r\n            useDrugSexualPerformance:\"\",\r\n            hivTestedBefore:\"\",\r\n            hivNegative:\"\",\r\n            hivPositive:\"\",\r\n            recommendHivRetest:\"\",\r\n            clinicalSetting:\"\", \r\n            reportHivRisk:\"\",\r\n            hivExposure:\"\",\r\n        }\r\n    )\r\n    const handleInputChangeDrugHistory = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setDrugHistory ({...drugHistory,  [e.target.name]: e.target.value});         \r\n    }\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //PREP FORM VALIDATION\r\n        //    temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \r\n\r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            objValues.htsClientId= clientId\r\n            objValues.drugUseHistory= drugHistory\r\n            objValues.personalHivRiskAssessment= riskAssessment\r\n            objValues.sexPartnerRisk= riskAssessmentPartner\r\n            objValues.stiScreening= stiScreening\r\n            objValues.personId= patientID\r\n            objValues.uniqueId= patientID\r\n            axios.post(`${baseUrl}prep/eligibility`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.patientObj.prepEligibilityCount=1\r\n                //props.setPatientObj(response.data)\r\n                toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                      toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n            \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <h2>PrEP Eligibilty Screening Form</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Visit Date *</Label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    value={objValues.visitDate}\r\n                                    onChange={handleInputChange}\r\n                                    min={props.patientObj.personResponseDto.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.visitDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.visitDate}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Sex partners *</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"sexPartners\"\r\n                                    id=\"sexPartners\"\r\n                                    value={objValues.sexPartners}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                    <option value=\"Both\">Both</option>\r\n                                </select>\r\n                                {errors.sexPartners !==\"\" ? (\r\n                                <span className={classes.error}>{errors.sexPartners}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        {props.patientObj.personResponseDto.maritalStatus.display==='Married'   && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label> Number of own children {\"<\"}5 years</Label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"numChildrenLessThanFive\"\r\n                                    id=\"numChildrenLessThanFive\"\r\n                                    value={objValues.numChildrenLessThanFive}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.numChildrenLessThanFive !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numChildrenLessThanFive}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        {props.patientObj.personResponseDto.sex==='Male' || props.patientObj.personResponseDto.sex==='male'  && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Number of wives </Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"numWives\"\r\n                                    id=\"numWives\"\r\n                                    value={objValues.numWives}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                {errors.numWives !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numWives}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Type of counseling *</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"counselingType\"\r\n                                    id=\"counselingType\"\r\n                                    value={objValues.counselingType}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                     <option value={\"\"}>Select</option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                                {errors.counselingType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.counselingType}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexCasual\"\r\n                                        id=\"unprotectedVaginalSexCasual\"\r\n                                        value={riskAssessment.unprotectedVaginalSexCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with regular partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexRegular\"\r\n                                        id=\"unprotectedVaginalSexRegular\"\r\n                                        value={riskAssessment.unprotectedVaginalSexRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with casual partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithCasual\"\r\n                                        id=\"uprotectedAnalSexWithCasual\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with regualar partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithRegular\"\r\n                                        id=\"uprotectedAnalSexWithRegular\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>History of STI</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiHistory\"\r\n                                        id=\"stiHistory\"\r\n                                        value={riskAssessment.stiHistory}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiHistory !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Shared needles/injecting materials</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sharedNeedles\"\r\n                                        id=\"sharedNeedles\"\r\n                                        value={riskAssessment.sharedNeedles}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sharedNeedles !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sharedNeedles}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThan1SexPartner\"\r\n                                        id=\"moreThan1SexPartner\"\r\n                                        value={riskAssessment.moreThan1SexPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThan1SexPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThan1SexPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal sex with Male/Female partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analSexWithPartner\"\r\n                                        id=\"analSexWithPartner\"\r\n                                        value={riskAssessment.analSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with male/female partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedAnalSexWithPartner\"\r\n                                        id=\"unprotectedAnalSexWithPartner\"\r\n                                        value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedAnalSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedAnalSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you paid for sex in the last 6 months?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveYouPaidForSex\"\r\n                                        id=\"haveYouPaidForSex\"\r\n                                        value={riskAssessment.haveYouPaidForSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveYouPaidForSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveYouPaidForSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been paid for sex in the last 6 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you experience condom breakage *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experienceCondomBreakage\"\r\n                                        id=\"experienceCondomBreakage\"\r\n                                        value={riskAssessment.experienceCondomBreakage}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experienceCondomBreakage !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experienceCondomBreakage}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you taken part in sexual orgy *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"takenPartInSexualOrgy\"\r\n                                        id=\"takenPartInSexualOrgy\"\r\n                                        value={riskAssessment.takenPartInSexualOrgy}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.takenPartInSexualOrgy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.takenPartInSexualOrgy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            \r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithHIVPositive\"\r\n                                        id=\"haveSexWithHIVPositive\"\r\n                                        value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithHIVPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithHIVPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            {/* {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who inject drug?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerInjectDrug\"\r\n                                        id=\"haveSexWithPartnerInjectDrug\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerInjectDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerInjectDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with men ?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerWhoHasSexWithMen !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerWhoHasSexWithMen}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is a transgender person</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerTransgender\"\r\n                                        id=\"haveSexWithPartnerTransgender\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerTransgender !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerTransgender}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with multiple partners without condoms</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexWithPartnersWithoutCondoms\"\r\n                                        id=\"sexWithPartnersWithoutCondoms\"\r\n                                        value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexWithPartnersWithoutCondoms !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexWithPartnersWithoutCondoms}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                         \r\n                            {/* </>)} */}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Drug Use History</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you use any of these drugs/substances*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useAnyOfTheseDrugs\"\r\n                                        id=\"useAnyOfTheseDrugs\"\r\n                                        value={drugHistory.useAnyOfTheseDrugs}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useAnyOfTheseDrugs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useAnyOfTheseDrugs}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <h3>Route of Administration</h3>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Inject </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"inject\"\r\n                                        id=\"inject\"\r\n                                        value={drugHistory.inject}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.inject !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.inject}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Sniff </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sniff\"\r\n                                        id=\"sniff\"\r\n                                        value={drugHistory.sniff}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sniff !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sniff}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Snort</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"Snort\"\r\n                                        id=\"Snort\"\r\n                                        value={drugHistory.fever}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.Snort !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.Snort}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Smoke</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"smoke\"\r\n                                        id=\"smoke\"\r\n                                        value={drugHistory.smoke}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.smoke !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.smoke}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you used drugs to enhance sexual performance ? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useDrugSexualPerformance\"\r\n                                        id=\"useDrugSexualPerformance\"\r\n                                        value={drugHistory.useDrugSexualPerformance}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useDrugSexualPerformance !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useDrugSexualPerformance}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had HIV testing before & When was your last test? {\"<\"}1mth 1-3mths 4-6mths {\">\"}6mths </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestedBefore\"\r\n                                        id=\"hivTestedBefore\"\r\n                                        value={drugHistory.hivTestedBefore}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivTestedBefore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivTestedBefore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                            <h3>HIV test result at visit</h3>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Negative</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivNegative\"\r\n                                        id=\"hivNegative\"\r\n                                        value={drugHistory.hivNegative}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivNegative !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivNegative}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Positive</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivPositive\"\r\n                                        id=\"hivPositive\"\r\n                                        value={drugHistory.hivPositive}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Recommended for HIV Retest ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"recommendHivRetest\"\r\n                                        id=\"recommendHivRetest\"\r\n                                        value={drugHistory.recommendHivRetest}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.recommendHivRetest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.recommendHivRetest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Tested in certain Clinical settings, such as STI clinics?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clinicalSetting\"\r\n                                        id=\"clinicalSetting\"\r\n                                        value={drugHistory.clinicalSetting}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clinicalSetting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clinicalSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"reportHivRisk\"\r\n                                        id=\"reportHivRisk\"\r\n                                        value={drugHistory.reportHivRisk}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.reportHivRisk !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.reportHivRisk}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report a specific HIV exposure within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivExposure\"\r\n                                        id=\"hivExposure\"\r\n                                        value={drugHistory.hivExposure}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivExposure !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivExposure}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Genital score +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"genitalScore\"\r\n                                        id=\"genitalScore\"\r\n                                        value={stiScreening.genitalScore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.genitalScore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"swollenIguinal\"\r\n                                        id=\"swollenIguinal\"\r\n                                        value={stiScreening.swollenIguinal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.swollenIguinal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.swollenIguinal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal pain on stooling?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analpain\"\r\n                                        id=\"analpain\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analpain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analpain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal itching?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analItching\"\r\n                                        id=\"analItching\"\r\n                                        value={stiScreening.analItching}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analItching !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analItching}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analDischarge\"\r\n                                        id=\"analDischarge\"\r\n                                        value={stiScreening.analDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                           \r\n                            <Button content='Save' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPVisit = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n        <div>                  \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2>PrEP Visit</h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"uniqueId\"\r\n                                id=\"uniqueId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.uniqueId}\r\n                                required\r\n                            />\r\n                            \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Noted Side Effects</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"entryPointId\"\r\n                                id=\"entryPointId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.entryPointId}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n                \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                            </Input>\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">HTS Result</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <h3>PrEP Drugs</h3>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        </div>\r\n                    \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Level of Adherence</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Why Poor/Fair Adherence?</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPVisit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPRegistrationForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateReferred: \"\",\r\n        extra: {},\r\n        personId: 0,\r\n        prepEligibilityUuid: \"\",\r\n        riskType: \"\",\r\n        supporterName: \"\",\r\n        supporterPhone: \"\",\r\n        supporterRelationshipType: \"\",\r\n        uniqueId: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [relatives, setRelatives] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n\r\n    useEffect(() => {         \r\n        GetPatientDTOObj();\r\n        RELATIONSHIP();\r\n        //console.log(props)\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEnrollment(props.activeContent.id)\r\n        }\r\n        //GetPatientPrepEnrollment\r\n      }, []);\r\n      const RELATIONSHIP =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setRelatives(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //const patientDTO= response.data.enrollment\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientPrepEnrollment =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    } \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"This field is required\"\r\n        temp.dateReferred = objValues.dateReferred ? \"\" : \"This field is required\"\r\n        temp.riskType = objValues.riskType ? \"\" : \"This field is required\"\r\n        temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\r\n        temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\r\n        temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\r\n        temp.uniqueId = objValues.uniqueId ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate) {   \r\n          objValues.personId=props.patientObj.personId\r\n          objValues.prepEligibilityUuid=patientDto.uuid \r\n          setSaving(true);\r\n          axios.post(`${baseUrl}prep/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.prepEnrollmentCount=1\r\n                  toast.success(\"Prep Enrollment save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n        }\r\n    }\r\n\r\n  return (      \r\n      <div >                  \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n            <div className=\"row\">\r\n                            <h2>PrEP Enrollment </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueId\"\r\n                                    id=\"uniqueId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUniqueArtNo\"\r\n                                    id=\"ancUniqueArtNo\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUniqueArtNo}\r\n                                    required\r\n                                />\r\n                                {errors.ancUniqueArtNo !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUniqueArtNo}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"riskType\"\r\n                                    id=\"riskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.riskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> Select</option>\r\n                    \r\n                                {relatives.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.riskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.riskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                {props.patientObj.hivPositive===true && (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={\"Positive\"}\r\n                                    disabled\r\n                                />\r\n                               \r\n                                </FormGroup>\r\n                                </div>\r\n                                )}\r\n                                {props.patientObj.dateHivPositive!==null && (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={props.patientObj.dateHivPositive}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        disabled\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferred\"\r\n                                        id=\"dateReferred\"\r\n                                        value={objValues.dateReferred}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    />\r\n                                    {errors.dateReferred !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferred}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterName\"\r\n                                        id=\"supporterName\"\r\n                                        value={objValues.supporterName}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.supporterName !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterName}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Relationship</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"select\"\r\n                                        name=\"supporterRelationshipType\"\r\n                                        id=\"supporterRelationshipType\"\r\n                                        value={objValues.supporterRelationshipType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    >\r\n                                        <option value=\"\"> Select</option>\r\n                    \r\n                                        {relatives.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                    {errors.supporterRelationshipType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterRelationshipType}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter Phone Number</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.supporterPhone !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterPhone}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                onClick={props.toggle}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {/* {activeContent==='child-consultation' &&( <ChildConsultation patientObj={patientObj} setActiveContent={setActiveContent}/>)} */}\r\n          {activeContent.route==='prep-commencement' &&( <PrEPCommencementForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-interruptions' &&( <PrEPDiscontinuationsInterruptions patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-screening' &&( <PrEPEligibiltyScreeningForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-visit' &&( <PrEPVisit />)}\r\n          {activeContent.route==='prep-registration' &&( <PrEPRegistrationForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)} \r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    //const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n                                    dateEnrolled: \"\",\r\n                                    dateOfLastHivNegativeTest: \"\",\r\n                                    dateReferredForPrep: \"\",\r\n                                    extra: {},\r\n                                    hivTestingPoint: \"\",\r\n                                    prepRiskType: \"\",\r\n                                    personDto:{},\r\n                                    personId: 0,\r\n                                    prepSupporter: \"\",\r\n                                    uniqueClientId: \"\",\r\n                                    ancUnique:\"\"\r\n                                });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Registeration save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...errors, [e.target.name]: \"\"})         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                   \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n\r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    \r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Prep /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}