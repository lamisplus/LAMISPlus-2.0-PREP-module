{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtByAge.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtBySex.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Index.js","main/webapp/jsx/components/Visualisation/Index.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Consultation/ADR/Index.js","main/webapp/jsx/components/Consultation/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/Allergies/AddAllergy.js","main/webapp/jsx/components/Consultation/Conditions/AddCondition.js","main/webapp/jsx/components/Consultation/PostPatient/Index.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ViewUpdate/ADR/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/TBScreening/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/History/ConsultationPage.js","main/webapp/jsx/components/Consultation/ViewUpdate/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","setPatientList","setLoading","axios","baseUrl","headers","then","response","data","catch","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","icons","title","columns","field","filtering","query","Promise","resolve","reject","pageSize","page","result","records","map","row","name","personResponseDto","firstName","surname","hospital_number","clientCode","uniqueId","gender","sex","age","dateOfBirth","undefined","moment","format","count","Label","size","prepEnrollmentCount","actions","to","pathname","state","patientObj","ButtonGroup","variant","style","backgroundColor","Button","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","Highcharts","setOptions","colors","getOptions","radialGradient","cx","cy","r","stops","brighten","ReceivingArtByAge","chart","plotBackgroundColor","plotBorderWidth","plotShadow","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","connectorColor","showInLegend","series","sliced","y","ReceivingArtBySex","align","verticalAlign","distance","startAngle","endAngle","center","innerSize","useStyles","SummaryView","activeItem","React","anchorEl","Boolean","padding","md","lg","sm","xs","className","CardBody","highcharts","subtitle","legend","layout","xAxis","categories","labels","x","yAxis","allowDecimals","responsive","rules","condition","maxWidth","chartOptions","credits","options2","Widget","class","divStyle","borderRadius","Home","key","setKey","startIcon","textTransform","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","secondary","icon","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","classes","patientObjs","setBiometricStatus","setDevices","setHivStatus","PatientCurrentStatus","CheckBiometric","console","log","ExpansionPanel","ExpansionPanelSummary","root2","phoneNumber","contactPoint","getPhoneNumber","address","city","getAddress","Divider","navItemText","SubMenu","Observation","observation","filter","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","prepEligibilityCount","commenced","RecentHistory","vitaLoad","setViralLoad","setRefillList","setClinicVisitList","recentActivities","setRecentActivities","history","useHistory","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","LaboratoryHistory","PharmacyList","ClinicVisitList","RecentActivities","LabObject","forEach","index","array","dataOrders","labOrder","tests","push","LoadViewPage","action","path","actionType","activeTab","Accordion","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","viewable","deletable","delete","toast","errorMessage","apierror","message","length","test","status","labTestOrderStatus","orderDate","labTestGroupName","labTestName","viralLoadIndicationName","labTestOrderStatusName","Alert","PatientnHistory","loading","PatientHistory","personId","isLoading","position","item","ADR","AddAllergy","saving","setSaving","allergy","show","showModal","toggle","Header","FormGroup","Input","required","Spinner","e","preventDefault","post","patientsVitalsSigns","AddCondition","newDate","PostPatient","selectedOption","setSelectedOption","services","setServices","filterService","moduleServiceCode","Object","entries","label","moduleServiceName","ServicesPost","encounterDate","facilityId","serviceCode","visitId","postServices","onChange","isMulti","noOptionsMessage","serviceArr","ClinicVisit","dropdownOpen","setDropdownOpen","toggleDropDown","errors","setErrors","clinicVisitList","temp","getPatientObj","setGetPatientObj","setClinicalStage","setFunctionalStatus","adherenceLevel","setAdherenceLevel","setTbStatus","setTBForms","addConditionModal","setAddConditionModal","addAllergyModal","setAddAllergyModal","postPatientModal","setPostPatientModal","currentVitalSigns","setcurrentVitalSigns","showCurrentVitalSigns","setShowCurrentVitalSigns","illnessInfection","ondateInfection","infectionList","adr","adrOnsetDate","adrList","bodyWeight","diastolic","systolic","pulse","temperature","respiratoryRate","vitalClinicalSupport","setVitalClinicalSupport","adheres","adrScreened","adverseDrugReactions","artStatusId","cd4","cd4Percentage","clinicalNote","clinicalStageId","functionalStatusId","hivEnrollmentId","nextAppointment","lmpDate","oiScreened","opportunisticInfections","tbScreen","stiIds","stiTreated","uuid","visitDate","whoStagingId","objValues","setObjValues","serviceTypeId","vital","setVitalSignDto","currentOnIpt","coughing","antiTBDrug","nightSweat","fever","contactWithTBCase","lethergy","tbStatusId","tbObj","FunctionalStatus","WhoStaging","AdherenceLevel","TBStatus","VitalSigns","GetPatientObj","PatientDetaild","lastVitalSigns","patObJ","handleInputChange","target","handleInputChangeVitalSignDto","Grid","Column","Segment","ribbon","visit","List","celled","vitalSignDto","paddingBottom","paddingTop","borderTop","Math","round","border","min","artCommence","max","checked","htmlFor","InputGroup","onKeyUp","InputGroupText","addonType","isOpen","toFixed","disabled","labTestGroupId","values","every","enrollment","RelativeList","relative","removeRelativeLocation","IconButton","prepSideEffect","setPrepSideEffect","PrepSideEffect","handAdrleInputChange","setAdrObj","adrObj","splice","setAdrList","enableUpdate","artStartDate","Icon","Table","striped","InfectionList","removeInfection","handleInfectionInputChange","setInfection","infection","setInfectionList","TBScreeningForm","tbStatus","TBForms","setTbObj","setVisitId","enableUpdateButton","setEnableUpdateButton","setEnableUpdate","clinicalStage","functionalStatus","isCommencement","ClinicVisitListHistory","GetVisitById","visitID","content","basic","pointing","put","hidden","ClinicVisitHistory","ConsultationPage","ClinicVisitPage","ClinicHistory","flexGrow","PrEPCommencementForm","dateInitialAdherenceCounseling","datePrepStart","prepClientId","prepId","regimenId","urinalysisResult","prepEligibilityUuid","weight","drugAllergies","reffered","datereferred","extra","pregnant","prepEnrollmentUuid","setpregnant","patientDto","setPatientDto","PREGANACY_STATUS","GetPatientDTOObj","for","dateEnrolled","dateOfRegistration","code","breastFeeding","validate","POSITION","BOTTOM_CENTER","subErrors","PrEPEligibiltyScreeningForm","dateInterruption","why","interruptionType","dateRestartPlacedBackMedication","demo","background","default","inline","BasicInfo","patientID","clientId","counselingType","setCounselingType","CounselingType","drugUseHistory","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","stiScreening","targetGroup","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessment","setRiskAssessment","handleInputChangeRiskAssessment","riskCount","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","riskAssessmentPartner","setRiskAssessmentPartner","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","setStiScreening","handleInputChangeStiScreening","stiCount","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","hivNegative","hivPositive","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","drugHistory","setDrugHistory","handleInputChangeDrugHistory","sexPartners","maritalStatus","moreThanOneSexPartnerLastThreeMonths","Message","warning","labelPosition","htsClientId","PrEPVisit","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","targetGroupId","ovc_enrolled","ovcNumber","carePoints","hivStatus","setTransferIn","enrolled","PrEPRegistrationForm","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","relatives","setRelatives","RELATIONSHIP","ancUniqueArtNo","dateHivPositive","dateOfLastHivNegativeTest","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","finger","newStoredBiometrics","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","severity","AlertTitle","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","horizontal","paddingLeft","Content","capturedObj","biometricStatus","art","setArt","CardContent","Biometric","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","UserRegistration","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","lastName","middleName","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","useLocation","setfemaleStatus","dateReferredForPrep","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","setCarePoints","setSourceReferral","setEnrollSetting","setKP","setPregnancyStatus","hospitalNumStatus","setHospitalNumStatus","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","KP","PregnancyStatus","GetCountry","alert","useCallback","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","newConatctsInfo","contactInfo","line","fullName","patientForm","landmark","checkPhoneNumberBasic","inputName","slice","autoClose","hideProgressBar","margingRight","Form","defaultChecked","currentDate","setDate","setMonth","dobNew","abs","maritalStatusOption","occupationOption","educationOption","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","getCountryId","setStateByCountryId","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","centered","backdrop","Title","Footer","setOvcEnrolled","getSex","identifiers","altphone","employmentStatus","education","getStateId","patientAge","getSexId","dateOfRegistration1","TOP_RIGHT","patientDTO","femaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","kP","pregnancyStatus","transferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","getCharacters","person","hivEnrollment","handleCheckBox","floor","random","App","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"uXAAcA,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAASC,IAAI,OAC3DC,EAAM,W,sZCuCnBC,KAAOC,OAAO,MACdC,OAEA,IAAMC,GAAa,CACnBC,IAAKC,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAChBC,MAAOH,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBE,MAAOJ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBG,OAAQL,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAmBD,GAAnB,IAA0BC,IAAKA,IAA/C,IACnBI,YAAaN,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACxBK,KAAMP,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAUD,GAAV,IAAiBC,IAAKA,IAAtC,IACjBM,OAAQR,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAaD,GAAb,IAAoBC,IAAKA,IAAzC,IACnBO,OAAQT,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,IACnBQ,UAAWV,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAeD,GAAf,IAAsBC,IAAKA,IAA3C,IACtBS,SAAUX,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAcD,GAAd,IAAqBC,IAAKA,IAA1C,IACrBU,SAAUZ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACrBW,aAAcb,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IAA7C,IACzBY,YAAad,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IACxBa,OAAQf,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IACnBc,UAAWhB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IAA7C,IACtBe,gBAAiBjB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAC5BgB,WAAYlB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,KAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,KAoMRiB,IAjMGC,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QAvCgB,IA4CjB,SAACxC,GACd,MAAsC0C,mBAAS,IAA/C,mBAAoBC,GAApB,WACA,EAA8BD,oBAAS,GAAvC,mBAAgBE,GAAhB,WAFwB,sDAOpB,wFACIA,GAAW,GACXC,IACKrD,IADL,UACYsD,EADZ,gBAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GACHL,GAAW,GACXD,EAAeM,EAASC,KAE3B,IACAC,OAAM,SAACb,GACJM,GAAW,EACd,IAbT,4CAPoB,sBAGxBQ,qBAAU,YAHc,mCAIpBC,EACD,GAAE,IAiBL,IAAMC,EAAgB,SAAAC,GAClB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,EAAU,UACxB,EAECK,EAAoB,SAACC,GACvB,IACMC,EADcD,EACeA,WAAWE,MAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,IAAR,IACtD,OAAOH,EAAiBA,EAAeI,MAAQ,EAClD,EAEH,OACE,+BACI,eAAC,IAAD,CACAC,MAAO7E,GACH8E,MAAM,gBACNC,QAAS,CAET,CACID,MAAO,eACPE,MAAO,QAEX,CAAEF,MAAO,kBAAmBE,MAAO,kBAAmBC,WAAW,GACjE,CAAEH,MAAO,YAAaE,MAAO,aAAcC,WAAW,GACtD,CAAEH,MAAO,MAAOE,MAAO,SAAUC,WAAW,GAC5C,CAAEH,MAAO,MAAOE,MAAO,MAAOC,WAAW,GAGzC,CAAEH,MAAO,aAAcE,MAAO,QAASC,WAAW,GAClD,CAAEH,MAAO,UAAWE,MAAO,UAAWC,WAAW,IAGjD5B,KAAM,SAAA6B,GAAK,OACP,IAAIC,SAAQ,SAACC,EAASC,GAAV,OACRrC,IAAMrD,IAAN,UAAasD,EAAb,iCAA6CiC,EAAMI,SAAnD,mBAAsEJ,EAAMK,KAA5E,wBAAgGL,EAAMxF,QAAU,CAAEwD,QAAS,CAAC,+BAA4B5D,MACnJ6D,MAAK,SAAAC,GAAQ,OAAIA,CAAJ,IACbD,MAAK,SAAAqC,GAEFJ,EAAQ,CACJ/B,KAAMmC,EAAOnC,KAAKoC,QAAQC,KAAI,SAACC,GAAD,MAAU,CACpCC,KAAKD,EAAIE,kBAAkBC,UAAY,IAAMH,EAAIE,kBAAkBE,QACnEC,gBAAiB1B,EAAkBqB,EAAIE,kBAAkBtB,YACzD0B,WAAYN,EAAIO,SAEhBC,OAAOR,GAAOA,EAAIE,kBAAkBO,IAAMT,EAAIE,kBAAkBO,IAAM,GACtEC,IAA4C,IAAtCV,EAAIE,kBAAkBS,kBACcC,IAAtCZ,EAAIE,kBAAkBS,aACgB,OAAtCX,EAAIE,kBAAkBS,aACgB,KAAtCX,EAAIE,kBAAkBS,YAChB,EACA7C,EAAc+C,KAAOb,EAAIE,kBAAkBS,aAAaG,OAAO,eAEzEC,MAAQ,eAACC,GAAA,EAAD,CAAOjE,MAAM,OAAOkE,KAAK,OAAzB,SAAiCjB,EAAIkB,sBAEjDC,QACQ,+BACI,eAAC,IAAD,CACIC,GAAI,CACAC,SAAU,mBACVC,MAAO,CAACC,WAAYvB,IAH5B,SAOI,gBAACwB,GAAA,EAAD,CAAaC,QAAQ,YACjB,aAAW,eACXC,MAAO,CAACC,gBAAgB,mBAAoBjF,OAAO,OAAON,MAAM,SAChE6E,KAAK,QAHT,UAKA,eAACW,GAAA,EAAD,CACA7E,MAAM,UACNkE,KAAK,QACL,aAAW,wBACX,gBAAc,OACdS,MAAO,CAACC,gBAAgB,oBALxB,SAOI,eAAC,KAAD,MAEJ,eAACC,GAAA,EAAD,CACAF,MAAO,CAACC,gBAAgB,oBADxB,SAGI,uBAAMD,MAAO,CAAC1E,SAAS,OAAQD,MAAM,OAAQ8E,WAAW,UAAxD,wCAzCU,IAgD9BjC,KAAML,EAAMK,KACZkC,WAAYjC,EAAOnC,KAAKqE,cAG/B,GA1DG,GADL,EA8DXC,QAAS,CACLC,YAAa,CACTN,gBAAiB,UACjB5E,MAAO,QAEXmF,iBAAkB,CACd9F,MAAQ,OACR+F,YAAa,SAEjB7C,WAAW,EACX8C,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvB3C,SAAS,GACT4C,iBAAkB,QAMjC,G,2GC3PDC,KAAWC,WAAW,CAClBC,OAAQF,KAAWzC,IAAIyC,KAAWG,aAAaD,QAAQ,SAAU3F,GAC7D,MAAO,CACH6F,eAAgB,CACZC,GAAI,GACJC,GAAI,GACJC,EAAG,IAEPC,MAAO,CACH,CAAC,EAAGjG,GACJ,CAAC,EAAGyF,KAAWzF,MAAMA,GAAOkG,UAAU,IAAKjJ,IAAI,SAG1D,MAGE,IAAMkJ,GAAoB,CAC7BC,MAAO,CAEHC,oBAAqB,KACrBC,gBAAiB,KACjBC,YAAY,EACZtE,KAAM,OAEVG,MAAO,CACHoE,KAAM,gEAEVC,QAAS,CACLC,YAAa,iDAEjBC,cAAe,CACXC,MAAO,CACHC,YAAa,MAGrBC,YAAa,CACTC,IAAK,CACDC,kBAAkB,EAClBC,OAAQ,UACRC,WAAY,CACRC,SAAS,EACTpD,OAAQ,gDACRqD,eAAgB,SAEpBC,cAAc,IAGtBC,OAAQ,CAAC,CACLpE,KAAM,iCACNvC,KAAM,CACF,CAAEuC,KAAM,QAAUqE,QAAQ,EAAMC,EAAG,OACnC,CAAEtE,KAAM,SAAUsE,EAAG,OACrB,CAAEtE,KAAM,SAAUsE,EAAG,OACrB,CAAEtE,KAAM,YAAQsE,EAAG,UCxDlBC,GAAoB,CAC7BrB,MAAO,CACHC,oBAAqB,KACrBC,gBAAiB,EACjBC,YAAY,GAEhBnE,MAAO,CACHoE,KAAM,6DACNkB,MAAO,SACPC,cAAe,SACfH,GAAI,KAERf,QAAS,CACLC,YAAa,iDAEjBC,cAAe,CACXC,MAAO,CACHC,YAAa,MAGrBC,YAAa,CACTC,IAAK,CAEDG,WAAY,CACRC,SAAS,EACTS,UAAW,GACX7D,OAAQ,gDACRY,MAAO,CACHG,WAAY,OACZ9E,MAAO,UAGf6H,YAAa,GACbC,SAAU,GACVC,OAAQ,CAAC,MAAO,OAChB7D,KAAM,OACNmD,cAAc,IAGtBC,OAAQ,CAAC,CACLrF,KAAM,MACNiB,KAAM,yBACN8E,UAAW,MACXrH,KAAM,CACF,CAAC,OAAQ,MACT,CAAC,SAAU,WC3BjBsH,GAAYrJ,cAAW,SAACC,GAAD,MAAY,CACvCgB,KAAM,CACJ,uBAAwB,CACpBd,OAAQF,EAAMG,QAAQ,GACtBK,MAAO,MAGbP,KAAM,CACJC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAXa,IA2Ed+I,GA5DK,SAACzK,GACHwK,KAAhB,IACA,EAAoC9H,mBAAS,IAA7C,mBACA,GADA,UACwCA,oBAAS,IAAjD,mBAGA,GAHA,UAG0BA,mBAAS,CAAEgI,WAAY,aAAjD,mBAAO5D,EAAP,KAUA,GAVA,KAGuBA,EAAf4D,WAOwBC,IAAMjI,SAAS,OAA/C,mBAAOkI,EAAP,UACaC,QAAQD,GAYrB,OACE,sBAAMrJ,QAAS,EAAG2F,MAAO,CAAE4D,QAAS,IAApC,SACE,eAAC,KAAD,UACE,eAAC,KAAD,CAAKC,GAAI,GAAT,SAEA,gBAAC,KAAD,WAEU,eAAC,KAAD,CAAMC,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAIC,GAAI,GAAIC,UAAU,OAA9C,SACA,eAAC,KAAD,UAAM,eAACC,GAAA,EAAD,UACJ,eAAC,KAAD,CAAiBC,WAAYrD,KAAYR,QAASwC,WAGpD,eAAC,KAAD,CAAMgB,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAIC,GAAI,GAAIC,UAAU,OAA9C,SACA,eAAC,KAAD,UAAM,eAACC,GAAA,EAAD,UACJ,eAAC,KAAD,CAAiBC,WAAYrD,KAAYR,QAASkB,mBAerE,EC/EKlB,GAAU,CACdmB,MAAO,CACLnE,KAAM,UAGVG,MAAO,CACHoE,KAAM,iEAGVuC,SAAU,CACNvC,KAAM,IAGVwC,OAAQ,CACJtB,MAAO,QACPC,cAAe,SACfsB,OAAQ,YAGZC,MAAO,CACHC,WAAY,CAAC,iBAAkB,6BAA8B,gBAAiB,qBAC9EC,OAAQ,CACJC,GAAI,KAIZC,MAAO,CACHC,eAAe,EACfnH,MAAO,CACHoE,KAAM,WAIdc,OAAQ,CAAC,CACLpE,KAAM,iBACNvC,KAAM,CAAC,GAAI,GAAI,GAAI,IACpB,CACCuC,KAAM,6BACNvC,KAAM,CAAC,GAAI,GAAI,GAAI,KACpB,CACCuC,KAAM,gBACNvC,KAAM,CAAC,IAAK,GAAI,GAAG,KACpB,CACDuC,KAAM,oBACNvC,KAAM,CAAC,GAAI,GAAI,GAAI,MAGrB6I,WAAY,CACRC,MAAO,CAAC,CACJC,UAAW,CACPC,SAAU,KAEdC,aAAc,CACVZ,OAAQ,CACJtB,MAAO,SACPC,cAAe,SACfsB,OAAQ,cAEZK,MAAO,CACHF,OAAQ,CACJ1B,MAAO,OACP2B,EAAG,EACH7B,GAAI,GAERpF,MAAO,CACHoE,KAAM,OAGduC,SAAU,CACNvC,KAAM,MAEVqD,QAAS,CACL1C,SAAS,QAMnB2C,GAAW,CACf1D,MAAO,CACLnE,KAAM,UAGVG,MAAO,CACHoE,KAAM,iGAGVuC,SAAU,CACNvC,KAAM,IAGVwC,OAAQ,CACJtB,MAAO,QACPC,cAAe,SACfsB,OAAQ,YAGZC,MAAO,CACHC,WAAY,CAAC,iBAAkB,6BAA8B,gBAAiB,qBAC9EC,OAAQ,CACJC,GAAI,KAIZC,MAAO,CACHC,eAAe,EACfnH,MAAO,CACHoE,KAAM,WAIdc,OAAQ,CAAC,CACLpE,KAAM,iBACNvC,KAAM,CAAC,IAAK,GAAI,GAAI,IACrB,CACCuC,KAAM,6BACNvC,KAAM,CAAC,GAAI,GAAI,GAAI,KACpB,CACCuC,KAAM,gBACNvC,KAAM,CAAC,IAAM,IAAK,IAAI,MACvB,CACDuC,KAAM,oBACNvC,KAAM,CAAC,GAAI,GAAI,IAAK,MAGtB6I,WAAY,CACRC,MAAO,CAAC,CACJC,UAAW,CACPC,SAAU,KAEdC,aAAc,CACVZ,OAAQ,CACJtB,MAAO,SACPC,cAAe,SACfsB,OAAQ,cAEZK,MAAO,CACHF,OAAQ,CACJ1B,MAAO,OACP2B,EAAG,EACH7B,GAAI,GAERpF,MAAO,CACHoE,KAAM,OAGduC,SAAU,CACNvC,KAAM,MAEVqD,QAAS,CACL1C,SAAS,QA6FV4C,GAvFA,WACb,OACE,eAAC,WAAD,UACE,uBAAKnB,UAAU,MAAf,UACC,sBAAKA,UAAU,uCAAf,SACG,sBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,uBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,+BAAhB,SACA,oBAAGoB,MAAM,kBAAkB,cAAY,WAEvC,uBAAKpB,UAAU,aAAf,UACE,oBAAGA,UAAU,OAAb,kCACA,qBAAIA,UAAU,OAAd,8BAMV,sBAAKA,UAAU,uCAAf,SACE,sBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,uBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,gCAAhB,SACA,oBAAGoB,MAAM,kBAAkB,cAAY,WAEvC,uBAAKpB,UAAU,aAAf,UACE,oBAAGA,UAAU,OAAb,4BACA,qBAAIA,UAAU,OAAd,8BAOV,sBAAKA,UAAU,uCAAf,SACE,sBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,iBAAf,SACE,uBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,8BAAhB,SACA,oBAAGoB,MAAM,iBAAiB,cAAY,WAEtC,uBAAKpB,UAAU,aAAf,UACE,oBAAGA,UAAU,OAAb,gCACA,qBAAIA,UAAU,OAAd,4BAOV,sBAAKA,UAAU,uCAAf,SACE,sBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,uBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,gCAAhB,SACA,oBAAGoB,MAAM,cAAc,cAAY,WAEnC,uBAAKpB,UAAU,aAAf,UACE,oBAAGA,UAAU,OAAb,8BACA,qBAAIA,UAAU,OAAd,8BAQV,eAAC,GAAD,IACA,sBAAKA,UAAU,uCAAf,SACE,eAAC,KAAD,CACEE,WAAYrD,KACZR,QAASA,OAGb,sBAAK2D,UAAU,uCAAf,SACE,eAAC,KAAD,CACEE,WAAYrD,KACZR,QAAS6E,WAOpB,E,UCrPKG,GAAW,CACfC,aAAc,MACdjK,SAAU,IA0DGkK,GAvDF,WACT,MAAsBhK,mBAAS,QAA/B,mBAAOiK,EAAP,KAAYC,EAAZ,KAGF,OACE,gBAAC,WAAD,WACE,sBAAKzB,UAAU,uBAAuBjE,MAAO,CAACrF,UAAU,MAAOG,aAAa,SAA5E,SACH,qBAAImJ,UAAU,aAAd,SACC,qBAAIA,UAAU,yBAAd,SAAuC,6CAGrC,eAAC,IAAD,CAAMvE,GAAI,mBAAV,SACM,eAACQ,GAAA,EAAD,CACIH,QAAQ,YACR1E,MAAM,UACN4I,UAAU,mBACV0B,UAAW,eAAC,KAAD,CAAYpG,KAAK,OAC5BS,MAAO,CAACC,gBAAgB,WAL5B,SAOI,uBAAMD,MAAO,CAAE4F,cAAe,cAA9B,6BAGR,wBAAK,wBACP,wBACA,eAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,eAACC,EAAA,EAAD,CAAMhG,MAAOsF,GAAb,SACE,eAACU,EAAA,EAAKC,KAAN,UAEE,sBAAKhC,UAAU,eAAf,SACE,gBAACiC,EAAA,EAAD,CACIC,GAAG,yBACHC,UAAWX,EACXY,SAAU,SAACC,GAAD,OAAOZ,EAAOY,EAAd,EACVrC,UAAU,OAJd,UAOE,eAACsC,EAAA,EAAD,CAAKC,SAAS,OAAO/I,MAAM,gBAA3B,SACE,eAAC,GAAD,MAGF,eAAC8I,EAAA,EAAD,CAAKC,SAAS,gBAAgB/I,MAAM,qBAApC,SACE,eAAC,GAAD,qBAWnB,E,kSClCiBxD,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,UAlCW,ICL7B9C,KAAOC,OAAO,MACdC,OAuOe+N,qBArOA,SAAAvM,GAAK,MAAK,CACvBgB,KAAM,CACJR,MAAO,QAETgM,QAAS,CACPpL,SAAUpB,EAAMyM,WAAWC,QAAQ,KAErCC,iBAAkB,CAChBvL,SAAUpB,EAAMyM,WAAWC,QAAQ,IACnCvL,MAAOnB,EAAM4M,QAAQjF,KAAKkF,WAE5BC,KAAM,CACJhE,cAAe,SACfhI,OAAQ,GACRN,MAAO,IAETuM,QAAS,CACPzM,WAAY,UAEd0M,OAAQ,CACNC,UAAW,UAEbC,OAAQ,CACNC,WAAW,aAAD,OAAenN,EAAM4M,QAAQQ,SACvC1D,QAAQ,GAAD,OAAK1J,EAAMG,QAAQkN,KAAnB,cAAkD,EAArBrN,EAAMG,QAAQkN,KAA3C,OAETC,KAAM,CACJnM,MAAOnB,EAAM4M,QAAQW,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,cA9BF,GAqOLlB,EAlMf,SAAqB3N,GACnB,IAAQ8O,EAAY9O,EAAZ8O,QACFC,EAAc/O,EAAM+G,WAAa/G,EAAM+G,WAAWrB,kBAAoB,CAAC,EAC7E,EAAoChD,mBAASqM,GAA7C,mBAAOhI,EAAP,KACA,GADA,KAC8CrE,oBAAS,IAAvD,mBAAwBsM,GAAxB,WACA,EAA8BtM,mBAAS,IAAvC,mBAAgBuM,GAAhB,WACA,EAA4CvM,oBAAS,GAArD,mBAEA,GAFA,UAEkCA,sBAAlC,mBAAkBwM,GAAlB,WAEA9L,qBAAU,YAVgB,mCAWxB+L,GACAC,GACD,GAAE,CAACpP,EAAM+G,aAGV,IAAMqI,EAAgB,WAClBvM,IACGrD,IADH,UACUsD,EADV,sCAEM,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH+L,EAAmB/L,EAASC,OACT,IAAhBD,EAASC,MACVL,IACKrD,IADL,UACYsD,EADZ,sBAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHgM,EAAWhM,EAASC,KAEvB,IACAC,OAAM,SAACb,GACJ+M,QAAQC,IAAIhN,EACf,GAGV,IACAa,OAAM,SAACb,GAEP,GAEN,EA1CyB,sDA4CxB,wFACIO,IACKrD,IADL,UACYsD,EADZ,sCACiDiE,EAAWsG,IACxD,CAAEtK,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GAELiM,EAAajM,EAASC,KACvB,IACAC,OAAM,SAACb,GACP,IAVT,4CA5CwB,sBAoH1B,OACE,sBAAK6I,UAAW2D,EAAQ1M,KAAxB,SACG,gBAACmN,GAAA,EAAD,WACS,eAACC,GAAA,EAAD,UACA,eAAC,KAAD,UACI,eAAC,KAAD,CAAKzE,GAAI,GAAT,SACA,gBAAC,KAAD,CAAKI,UAAW,OAAhB,UACA,gBAAC,KAAD,CAAKJ,GAAI,GAAII,UAAW2D,EAAQW,MAAhC,UACA,oBAAGvI,MAAO,CAAC1E,SAAU,OAAQD,MAAM,oBAAnC,SACKwE,EAAWpB,UAAY,IAAMoB,EAAWnB,UAEzC,eAAC,IAAD,CAAMgB,GAAI,IAAV,SACA,eAACQ,GAAA,EAAD,CACIH,QAAQ,YACR1E,MAAM,UACN4I,UAAU,4BAEV0B,UAAW,eAAC,KAAD,IACX3F,MAAO,CAACC,gBAAgB,mBAAoB5E,MAAM,OAAQL,OAAO,QANrE,SASI,uBAAMgF,MAAO,CAAE4F,cAAe,cAA9B,yBAIR,eAAC,KAAD,CAAK/B,GAAI,EAAGI,UAAW2D,EAAQW,MAA/B,SACA,kCACK,IADL,gBAEiB,oBAAGvI,MAAO,CAAC3E,MAAM,WAAjB,SA7CP,SAAC6B,GACzB,IACMC,EADcD,EACeA,WAAWE,MAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,IAAR,IACtD,OAAOH,EAAiBA,EAAeI,MAAQ,EAChD,CAyC8DN,CAAkB4C,EAAW3C,mBAI5E,eAAC,KAAD,CAAK2G,GAAI,EAAGI,UAAW2D,EAAQW,MAA/B,SACA,qDACoB,oBAAGvI,MAAO,CAAC3E,MAAM,WAAjB,SAA8BwE,EAAWZ,mBAG7D,eAAC,KAAD,CAAK4E,GAAI,EAAGI,UAAW2D,EAAQW,MAA/B,SACA,kCACK,IADL,SAEU,oBAAGvI,MAAO,CAAC3E,MAAM,WAAjB,SArFJ,SAAAgB,GACpB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,EAAU,UAC1B,CAuEuDR,CAAc+C,KAAOU,EAAWZ,aAAaG,OAAO,sBAG5F,eAAC,KAAD,CAAKyE,GAAI,EAAT,SACA,kCACK,IADL,WAEa,IACT,oBAAG7D,MAAO,CAAC3E,MAAM,WAAjB,SAA8BwE,EAAWd,KAAwB,OAAjBc,EAAWd,IAAcc,EAAWd,IAAM,UAG9F,eAAC,KAAD,CAAK8E,GAAI,EAAGI,UAAW2D,EAAQW,MAA/B,SACA,kCACK,IADL,kBAEmB,oBAAGvI,MAAO,CAAC3E,MAAM,WAAjB,SAjEZ,SAAC6B,GACtB,IACMsL,EADctL,EACYuL,aAAarL,MAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,IAAR,IACrD,OAAOkL,EAAcA,EAAYjL,MAAQ,EAC1C,CA6DgEmL,CAAe7I,EAAW4I,qBAG3E,eAAC,KAAD,CAAK5E,GAAI,EAAGI,UAAW2D,EAAQW,MAA/B,SACA,kCACK,IADL,aAEc,qBAAGvI,MAAO,CAAC3E,MAAM,WAAjB,UAlEX,SAAC6B,GAClB,IACMyL,EADczL,EACQyL,QAAQvL,MAAK,SAAAC,GAAG,OAAIA,EAAIuL,IAAR,IAC5C,OAAOD,EAAUA,EAAQC,KAAO,EACjC,CA8D2DC,CAAWhJ,EAAW8I,SAApD,qBAQlB,eAACG,GAAA,EAAD,QAKf,I,WCtPKxF,GAAYrJ,cAAW,SAACC,GAAD,MAAY,CACrC6O,YAAa,CACTnF,QAAS1J,EAAMG,QAAQ,IAFF,IAqGd2O,OA/Ff,SAAiBlQ,GACGwK,KAAhB,IAEMuE,EAAc/O,EAAM+G,WAAa/G,EAAM+G,WAAa,CAAC,EAE3D,EAAoCrE,mBAASqM,GAA7C,mBAAOhI,EAAP,KACA,GADA,KACoCrE,sBAApC,6BACA2M,QAAQC,IAAIvI,GACZ3D,qBAAU,WACN+M,GACH,GAAE,CAACnQ,EAAM+G,aAET,IAAMoJ,EAAa,WAChBtN,IACKrD,IADL,UACYsD,EADZ,8BACyC9C,EAAM+G,WAAWsG,IAClD,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH,IAAMmN,EAAcnN,EAASC,KACfkN,EAAYC,QAAO,SAACzE,GAAD,MAAe,kBAATA,EAAEpH,IAAR,IACf4L,EAAYC,QAAO,SAACzE,GAAD,MAAe,uBAATA,EAAEpH,IAAR,GAGxC,IACArB,OAAM,SAACb,GAEP,GAEJ,EA4CL,OACK,+BACG,gBAACgO,GAAA,EAAD,CAAM7J,KAAK,OAAOlE,MAAO,QAASgO,UAAQ,EAA1C,UACI,eAACD,GAAA,EAAKE,KAAN,CAAWC,QAAS,WAX5BzQ,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,mBAW1B,EAApB,mBACC7J,EAAW8J,sBAAsB,GAAK9J,EAAWL,qBAAqB,IAA4B,IAAvBK,EAAW+J,UACtF,uCACI/J,EAAW8J,sBAAsB,GAAM,eAACP,GAAA,EAAKE,KAAN,CAAWC,QAAS,WAvBxEzQ,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,mBAuBkB,EAApB,4CACvC7J,EAAW8J,qBAAsB,GAAK9J,EAAWL,qBAAqB,GAAM,eAAC4J,GAAA,EAAKE,KAAN,CAAWC,QAAS,WA9B7GzQ,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,sBA8BuD,EAApB,6BAC5E7J,EAAW8J,qBAAsB,GAAK9J,EAAWL,oBAAoB,IAA4B,IAAvBK,EAAW+J,WAAqB,eAACR,GAAA,EAAKE,KAAN,CAAWC,QAAS,WA5B3IzQ,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,sBA4BqF,EAApB,kCAG9G,uCACG,eAACN,GAAA,EAAKE,KAAN,CAAWC,QAAS,WAvBhCzQ,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,iBAuBtB,EAApB,yBACA,eAACN,GAAA,EAAKE,KAAN,CAAWC,QAAS,WAvChCzQ,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,uBAuCtB,EAApB,sDAEJ,eAACN,GAAA,EAAKE,KAAN,CAAWC,QAAS,WAnB5BzQ,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,oBAmB1B,EAApB,yBAIf,E,iCCxFKpG,GAAYrJ,cAAW,SAACC,GAAD,MAAY,CACvCgB,KAAM,CACFR,MAAO,QAEXgM,QAAS,CACLpL,SAAUpB,EAAMyM,WAAWC,QAAQ,IACnCzG,WAAY,UANW,IA8iBd0J,GAriBO,SAAC/Q,GACLwK,KAAhB,IACA,EAA+B9H,mBAAS,IAAxC,mBAAOsO,EAAP,KAAiBC,EAAjB,KACA,EAAoCvO,mBAAS,IAA7C,mBAAmBwO,GAAnB,WACA,EAA8CxO,mBAAS,IAAvD,mBAAwByO,GAAxB,WACA,EAAgDzO,mBAAS,IAAzD,mBAAO0O,EAAP,KAAyBC,EAAzB,KACA,EAA8B3O,oBAAS,GAAvC,mBAAgBE,GAAhB,WACI0O,EAAUC,cACd,EAGI7O,mBAAS,GAHb,mBACE8O,EADF,KAEEC,EAFF,KAKArO,qBAAU,WACRsO,IAd6B,mCAe7BC,GAf6B,mCAgB7BC,GACAC,GACD,GAAE,CAAC7R,EAAM+G,WAAWsG,KAGrB,IAAMwE,EAAkB,WACtBhP,IACIrD,IADJ,UACWsD,EADX,wBACkC9C,EAAM+G,WAAWsG,GADnD,0BAEO,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACJoO,EAAoBpO,EAASC,KAC/B,IACAC,OAAM,SAACb,GAEP,GAEL,EAEKoP,EAAmB,WACvB7O,IACIrD,IADJ,UACWsD,EADX,sCACgD9C,EAAM+G,WAAWsG,IAC1D,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH,IAAI6O,EAAW,GACV7O,EAASC,KAAK6O,SAAQ,SAAStN,EAAOuN,EAAOC,GACzC,IAAMC,EAAazN,EAAM0N,SAASC,MAC/BF,EAAWF,IACVE,EAAWH,SAAQ,SAAStN,EAAOuN,EAAOC,GACtCH,EAAUO,KAAK5N,EAClB,GAER,IACHwM,EAAaa,EACnB,IACA3O,OAAM,SAACb,GAEP,GAEL,EAxD8B,sDA0D9B,wFACCM,GAAW,GACXC,IACKrD,IADL,UACYsD,EADZ,kEAC6E9C,EAAM+G,WAAWsG,IAC1F,CAAEtK,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GACHL,GAAW,GACXsO,EAAcjO,EAASC,KAC1B,IACAC,OAAM,SAACb,GACJM,GAAW,EACd,IAZN,4CA1D8B,4EAyE9B,wFACCA,GAAW,GACXC,IACKrD,IADL,UACYsD,EADZ,qEACgF9C,EAAM+G,WAAWsG,IAC7F,CAAEtK,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GACHL,GAAW,GACXuO,EAAmBlO,EAASC,KAC/B,IACAC,OAAM,SAACb,GACJM,GAAW,EACd,IAZN,4CAzE8B,sBAuF/B,IAwCM0P,EAAc,SAAC9M,EAAI+M,GAET,kBAAX/M,EAAIgN,KACHxS,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,qBAAsBvD,GAAG7H,EAAI6H,GAAIoF,WAAWF,KAElF,iBAAX/M,EAAIgN,KACTxS,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,wBAAyBvD,GAAG7H,EAAI6H,GAAIoF,WAAWF,KAErF,wBAAX/M,EAAIgN,KACTxS,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,+BAAgCvD,GAAG7H,EAAI6H,GAAIoF,WAAWF,KAE5F,SAAX/M,EAAIgN,KACTxS,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,oBAAqBvD,GAAG7H,EAAI6H,GAAIoF,WAAWF,KAElF,SAAX/M,EAAIgN,KACRxS,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,qBAAsBvD,GAAG7H,EAAI6H,GAAIoF,WAAWF,KAEnF,SAAX/M,EAAIgN,KACRxS,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,wBAAyBvD,GAAG7H,EAAI6H,GAAIoF,WAAWF,KACrF,mBAAX/M,EAAIgN,KACTlB,EAAQe,KAAK,CACTxL,SAAU,kBACVC,MAAO,CAAEuG,GAAI7H,EAAI6H,GAAItG,WAAW/G,EAAM+G,WAAY0L,WAAWF,KAGjD,aAAX/M,EAAIgN,KAETxS,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,kBAAmBvD,GAAG7H,EAAI6H,GAAIqF,UAAU,UAAWD,WAAWF,EAAQhO,IAAIiB,KAEhH,eAAXA,EAAIgN,KACTxS,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,wBAAyBvD,GAAG7H,EAAI6H,GAAIoF,WAAWF,KAErF,iBAAX/M,EAAIgN,MACXxS,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,eAAgBvD,GAAG7H,EAAI6H,GAAIqF,UAAU,UAAUD,WAAWF,IAMrH,EA8LC,OACE,eAAC,WAAD,UAGE,uBAAKpH,UAAU,MAAf,UACA,sBAAKA,UAAU,8BAAf,SACI,uBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,6BAAf,SACE,qBAAIA,UAAU,aAAd,kCAEF,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CACEjE,MAAO,CAAEhF,OAAQ,SACjBmL,GAAG,aACHlC,UAAU,yCAHZ,SAKE,eAACwH,GAAA,EAAD,CACIxH,UAAU,2EACVyH,iBAAiB,IAFrB,SAII,qCACCxB,EAAiB7L,KAAI,SAACrC,EAAM2P,GAAP,OACtB,uBAAK1H,UAAU,iBAAf,UACE,gBAACwH,GAAA,EAAUG,OAAX,CACIC,GAAI7F,IAAK8F,KACTtF,SAAQ,UAAKmF,GACb1H,UAAS,2BACyB,IAAhCqG,EAAoC,GAAK,YADlC,0BAGTf,QAAS,kBACPgB,EACkC,IAAhCD,GAAqC,EAAIqB,EAFpC,EANb,UAYA,uBAAM1H,UAAU,0BAChB,wBAAMA,UAAU,wBAAhB,0BAAqD,uBAAMA,UAAU,GAAhB,SAAoBjI,EAAK+P,OAA9E,OACA,uBAAM9H,UAAU,kCAElB,eAACwH,GAAA,EAAUO,SAAX,CACExF,SAAQ,UAAKmF,GACb1H,UAAU,kBAFZ,SAIE,sBAAKA,UAAU,sBAAf,SACA,qBAAIA,UAAU,WAAd,SACGjI,EAAKiQ,YAAcjQ,EAAKiQ,WAAW5N,KAAI,SAAC6N,EAASpB,GAAV,OAEtC,qCACE,8BACE,uBAAK7G,UAAU,iBAAf,UACA,sBAAKA,UAAW6G,EAAQ,GAAK,EAAI,wBAA0B,2BAA3D,UA9SPvM,EA8S4G2N,EAAS3N,KA7S5H,mBAAPA,EACM,KACO,oBAAPA,EACA,KACO,wBAAPA,EACA,KACO,2BAAPA,EACA,KACO,qBAAPA,EACA,KAEA,QAmSe,uBAAK0F,UAAU,aAAf,UACE,qBAAIA,UAAU,OAAd,SAAsBiI,EAAS3N,OAC/B,wBAAO0F,UAAU,UAAjB,SACCiI,EAASH,UAGZ,gBAACI,GAAA,EAAD,CAAUlI,UAAU,WAApB,UACE,eAACkI,GAAA,EAASP,OAAV,CACA7L,QAAQ,SACRkE,UAAU,6BAFV,SAIA,sBACEvJ,MAAM,OACNM,OAAO,OACPoR,QAAQ,YACRC,QAAQ,MAJV,SAME,qBACAC,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,UAJT,UAMA,uBAAM/H,EAAE,IAAI7B,EAAE,IAAInI,MAAM,KAAKM,OAAO,OACpC,yBAAQwR,KAAK,UAAUrL,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACxC,yBAAQmL,KAAK,UAAUrL,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACzC,yBAAQmL,KAAK,UAAUrL,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAI3C,gBAAC8K,GAAA,EAAS/C,KAAV,CAAenF,UAAU,gBAAzB,UACCiI,EAASQ,UAAc,eAACP,GAAA,EAAS7C,KAAV,CACtBrF,UAAU,gBACVsF,QAAS,kBAAI6B,EAAac,EAAS,OAA1B,EAFa,kBAOvBA,EAASQ,UAAc,eAACP,GAAA,EAAS7C,KAAV,CACtBrF,UAAU,gBACVsF,QAAS,kBAAI6B,EAAac,EAAS,SAA1B,EAFa,oBAOrBA,EAASS,WAAc,eAACR,GAAA,EAAS7C,KAAV,CACxBrF,UAAU,gBACVvE,GAAG,gBACH6J,QAAS,WAhSrB,IAACjL,EAEL,mBAFKA,EAgSuC4N,GA9RnDZ,KAEH3P,IACCiR,OADD,UACWhR,EADX,uBACiC0C,EAAI6H,IACjC,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8Q,IAAMtR,QAAQ,+BACdoP,GACH,IACA1O,OAAM,SAACb,GACJ,GAAGA,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAEnB,IACe,iBAAXkD,EAAIgN,KAET3P,IACCiR,OADD,UACWhR,EADX,gCAC0C0C,EAAI6H,IAC1C,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8Q,IAAMtR,QAAQ,+BACdoP,GACH,IACA1O,OAAM,SAACb,GACJ,GAAGA,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAEnB,IAEe,wBAAXkD,EAAIgN,KAET3P,IACCiR,OADD,UACWhR,EADX,uBACiC0C,EAAI6H,IACjC,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8Q,IAAMtR,QAAQ,+BACdoP,GACH,IACA1O,OAAM,SAACb,GACJ,GAAGA,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAEnB,IAEe,SAAXkD,EAAIgN,KAET3P,IACCiR,OADD,UACWhR,EADX,2BACqC0C,EAAI6H,IACrC,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8Q,IAAMtR,QAAQ,+BACdoP,GACH,IACA1O,OAAM,SAACb,GACJ,GAAGA,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAEnB,IAEc,SAAXkD,EAAIgN,KAER3P,IACCiR,OADD,UACWhR,EADX,2BACqC0C,EAAI6H,IACrC,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8Q,IAAMtR,QAAQ,+BACdoP,GACH,IACA1O,OAAM,SAACb,GACJ,GAAGA,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAEnB,IAEc,SAAXkD,EAAIgN,KAER3P,IACCiR,OADD,UACWhR,EADX,2BACqC0C,EAAI6H,IACrC,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8Q,IAAMtR,QAAQ,+BACdoP,GACH,IACA1O,OAAM,SAACb,GACJ,GAAGA,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAEnB,IACe,mBAAXkD,EAAIgN,KACT3P,IACCiR,OADD,UACWhR,EADX,0BACoC0C,EAAI6H,IACpC,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8Q,IAAMtR,QAAQ,+BACdoP,GACH,IACA1O,OAAM,SAACb,GACJ,GAAGA,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAEnB,IAEe,aAAXkD,EAAIgN,KAGT3P,IACCiR,OADD,UACWhR,EADX,wBACkC0C,EAAI6H,IAClC,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8Q,IAAMtR,QAAQ,+BACdoP,GACH,IACA1O,OAAM,SAACb,GACJ,GAAGA,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAEnB,IAEe,iBAAXkD,EAAIgN,MAET3P,IACCiR,OADD,UACWhR,EADX,gCAC0C0C,EAAI6H,IAC1C,CAAEtK,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8Q,IAAMtR,QAAQ,+BACdoP,GACH,IACA1O,OAAM,SAACb,GACJ,GAAGA,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAEnB,GA8GkC,EAHe,iCA5VpC,IAACmD,CAySyC,YAvBPoN,EADf,iBAqGpC,sBAAK1H,UAAU,8BAAf,SACE,uBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,4BAAf,SACE,qBAAIA,UAAU,aAAd,2BAEF,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CACEjE,MAAO,CAAEhF,OAAQ,SACjBmL,GAAG,gBACHlC,UAAU,sDAHZ,SAKE,qBAAIA,UAAU,WAAd,SACG6F,EAASmD,OAAQ,EAChB,qCACGnD,EAASzL,KAAI,SAAC6O,EAAKpC,GAAN,OACd,qCACE,gCACA,sBAAK7G,WAxZPkJ,EAwZ4BD,EAAKE,mBAvZnC,IAATD,EACM,sBACS,IAATA,EACA,yBACS,IAATA,EACA,yBACS,IAATA,EACA,wBACS,IAATA,EACA,yBACS,IAATA,EACA,sBAEA,8BA2YO,wBACElJ,UAAU,4BACVsF,QAAS,WAlJ/BzQ,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,mBAkJvB,EAFX,UAKE,sBAAIzF,UAAU,OAAd,4BACkB,IAAI,wBACpB,yBAAQA,UAAU,eAAlB,SAAkCiJ,EAAKG,eAEhB,WAAxBH,EAAKI,kBAA+B,sBAAIrJ,UAAU,OAAd,uBACxB,IAAI,wBACf,yBAAQA,UAAU,eAAlB,SAAkCiJ,EAAKI,iBAAmB,MAAQJ,EAAKK,cAFpC,OAKV,WAAxBL,EAAKI,kBAA+B,sBAAIrJ,UAAU,OAAd,uBAC1B,IAAI,wBACf,yBAAQA,UAAU,eAAlB,SAAkCiJ,EAAKK,YAAc,MAAQL,EAAKM,0BAF7B,OAMvC,sBAAIvJ,UAAU,OAAd,mBACS,IAAI,wBACX,yBAAQA,UAAU,eAAlB,SAAkCiJ,EAAKO,yBAFzC,YAtBO3C,KAvZZ,IAACqC,CAqZc,MAsChB,eAACO,GAAA,EAAD,CACE3N,QAAQ,OACRkE,UAAU,oCAFZ,SAIE,+DAanB,E,sBCzhBKtL,GAAa,CACnBC,IAAKC,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAChBC,MAAOH,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBE,MAAOJ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBG,OAAQL,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAmBD,GAAnB,IAA0BC,IAAKA,IAA/C,IACnBI,YAAaN,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACxBK,KAAMP,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAUD,GAAV,IAAiBC,IAAKA,IAAtC,IACjBM,OAAQR,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAaD,GAAb,IAAoBC,IAAKA,IAAzC,IACnBO,OAAQT,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,IACnBQ,UAAWV,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAeD,GAAf,IAAsBC,IAAKA,IAA3C,IACtBS,SAAUX,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAcD,GAAd,IAAqBC,IAAKA,IAA1C,IACrBU,SAAUZ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACrBW,aAAcb,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IAA7C,IACzBY,YAAad,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IACxBa,OAAQf,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IACnBc,UAAWhB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IAA7C,IACtBe,gBAAiBjB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAC5BgB,WAAYlB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,KAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,KA6WR4U,IA1WG1T,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QAvCgB,IA6CV,SAACxC,GACrB,MAAgD0C,mBAAS,IAAzD,mBAAO0O,EAAP,KAAyBC,EAAzB,KACA,EAA8B3O,oBAAS,GAAvC,mBAAOoS,EAAP,KAAgBlS,EAAhB,KACc2O,cAEdnO,qBAAU,WACN2R,GACD,GAAE,CAAC/U,EAAM+G,WAAWsG,KAEnB,IAAM0H,EAAgB,WAClBnS,GAAW,GACXC,IACIrD,IADJ,UACWsD,EADX,oCAC8C9C,EAAM+G,WAAWiO,SAD/D,eAEO,CAAEjS,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACNL,GAAW,GAEPyO,EAAoBpO,EAASC,KAAK,GAAGiQ,WACxC,IAEDhQ,OAAM,SAACb,GAEP,GAEL,EAoOT,OACE,iCAEA,wBAEQ,eAAC,IAAD,CACAoC,MAAO7E,GACL8E,MAAM,mBACNC,QAAS,CACP,CAAED,MAAO,OAAQE,MAAO,QACxB,CACEF,MAAO,iBACPE,MAAO,QAGT,CAAEF,MAAO,UAAWE,MAAO,UAAWC,WAAW,IAEnDmQ,UAAWH,EACX5R,KAAMkO,GAAoBA,EAAiB7L,KAAI,SAACC,GAAD,MAAU,CACpDC,KAAMD,EAAIC,KACVwN,KAAMzN,EAAIyN,KACVtM,QAEC,+BACI,eAAC2J,GAAA,EAAKA,KAAN,CAAW4E,SAAS,QAApB,SACA,eAAC5E,GAAA,EAAKE,KAAN,UACI,eAAC,KAAD,CAAQtJ,MAAO,CAACC,gBAAgB,kBAAmBwH,SAAO,EAA1D,SACA,eAAC,KAAD,CAAUwG,MAAI,EAACpM,KAAK,mBATa,IAwBrCvB,QAAS,CACPC,YAAa,CACTN,gBAAiB,UACjB5E,MAAO,QAEXmF,iBAAkB,CACd9F,MAAQ,OACR+F,YAAa,SAEjB7C,WAAW,EACX8C,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvB3C,SAAS,GACT4C,iBAAkB,SAM3C,G,4GClZiB5G,cAAW,SAAAC,GAAK,MAAK,CACrCkB,MAAO,CACLC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QAPoB,ICHhBrB,cAAW,SAAAC,GAAK,MAAK,CACrCkB,MAAO,CACLC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QAPoB,IAoJnB4S,I,6DC/IT5K,GAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QAvCgB,IAuKnB6S,GA5HI,SAACrV,GAEFuR,cAAd,IACMzC,EAAUtE,KAEhB,EAA4B9H,oBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAA4B7S,mBAAS,CAAC,GAAtC,mBACA,GADA,UAC6BA,mBAAS,CAAC8S,QAAS,MAAhD,mBAAOA,EAAP,UA0CF,OACI,+BAEQ,gBAAC,KAAD,CAAOC,KAAMzV,EAAM0V,UAAWC,OAAQ3V,EAAM2V,OAAQxK,UAAU,OAAO1E,KAAK,KAA1E,UACD,gBAAC,KAAMmP,OAAP,CAAcD,OAAQ3V,EAAM2V,OAAQzO,MAAO,CAACC,gBAAgB,WAA5D,wBAEI,eAAC,KAAD,CACGF,QAAQ,GACRkE,UAAU,YACVsF,QAASzQ,EAAM2V,YAGnB,eAAC,KAAMxI,KAAP,UACQ,eAAC,KAAD,UACI,eAAC/B,GAAA,EAAD,UACA,kCACI,sBAAKD,UAAU,MAAf,SAEI,sBAAKA,UAAU,4BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,wBACA,eAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,UACL4H,GAAG,UAGH0I,UAAQ,EANZ,SAQI,yBAAQtR,MAAM,GAAd,8BASX6Q,EAAS,eAACU,GAAA,EAAD,IAAc,GACxB,wBAEA,eAAC,KAAD,CACAxR,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAvEH,SAACwF,GAClBA,EAAEC,iBAEFX,GAAU,GACV1S,IAAMsT,KAAN,UAAcrT,EAAd,uBAA4C0S,EAC5C,CAAEzS,QAAS,CAAC,+BAA4B5D,MAGrC6D,MAAK,SAAAC,GACFsS,GAAU,GAEVxB,IAAMtR,QAAQ,+BACdzC,EAAM2V,SACN3V,EAAMoW,qBAET,IACAjT,OAAM,SAAAb,GACHiT,GAAU,GACVxB,IAAMzR,MAAM,uBAEf,GAEN,EA2CuB,SAQEgT,EAGF,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,uBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,oBAMJ,eAAC,KAAD,CACI7F,QAAQ,YACRkE,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IAHf,SAMI,uBAAM3F,MAAO,CAAE4F,cAAe,cAA9B,mCAW/B,ECrKKtC,GAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QAvCgB,IAuKnB6T,GA5HM,SAACrW,GACCA,EAAM+G,WACXwK,cADd,IAEMzC,EAAUtE,KAEhB,EAA4B9H,oBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAA4B7S,mBAAS,CAAC,GAAtC,mBACA,GADA,UAC6BA,mBAAS,CAAC8S,QAAS,MAAhD,mBAAOA,EAAP,UA0CF,OACI,+BAEQ,gBAAC,KAAD,CAAOC,KAAMzV,EAAM0V,UAAWC,OAAQ3V,EAAM2V,OAAQxK,UAAU,OAAO1E,KAAK,KAA1E,UACD,gBAAC,KAAMmP,OAAP,CAAcD,OAAQ3V,EAAM2V,OAAQzO,MAAO,CAACC,gBAAgB,WAA5D,2BAEI,eAAC,KAAD,CACGF,QAAQ,GACRkE,UAAU,YACVsF,QAASzQ,EAAM2V,YAGnB,eAAC,KAAMxI,KAAP,UACQ,eAAC,KAAD,UACI,eAAC/B,GAAA,EAAD,UACA,kCACI,sBAAKD,UAAU,MAAf,SAEI,sBAAKA,UAAU,4BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,yBACA,eAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,UACL4H,GAAG,UAGH0I,UAAQ,EANZ,SAQI,yBAAQtR,MAAM,GAAd,8BASX6Q,EAAS,eAACU,GAAA,EAAD,IAAc,GACxB,wBAEA,eAAC,KAAD,CACAxR,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAvEH,SAACwF,GAClBA,EAAEC,iBAEFX,GAAU,GACV1S,IAAMsT,KAAN,UAAcrT,EAAd,uBAA4C0S,EAC5C,CAAEzS,QAAS,CAAC,+BAA4B5D,MAGrC6D,MAAK,SAAAC,GACFsS,GAAU,GACVvV,EAAM+G,WAAW+J,WAAU,EAC3BiD,IAAMtR,QAAQ,+BACdzC,EAAM2V,SACN3V,EAAMoW,qBAET,IACAjT,OAAM,SAAAb,GACHiT,GAAU,GACVxB,IAAMzR,MAAM,uBAEf,GAEN,EA2CuB,SAQEgT,EAGF,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,uBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,oBAMJ,eAAC,KAAD,CACI7F,QAAQ,YACRkE,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IAHf,SAMI,uBAAM3F,MAAO,CAAE4F,cAAe,cAA9B,mCAW/B,E,qBCnKKtC,GAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QAvCgB,IA0C9B8T,GAAU,IAAI7S,KAkIH8S,GAhIK,SAACvW,GACjB,IAAM+G,EAAa/G,EAAM+G,WACzB,EAA4CrE,qBAA5C,mBAAO8T,EAAP,KAAuBC,EAAvB,KACM3H,EAAUtE,KAChB,EAA+B9H,mBAAS,IAAxC,mBAAOgU,EAAP,KAAiBC,EAAjB,KAEA,EAA4BjU,oBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAA4B7S,mBAAS,CAAC,GAAtC,6BAP2B,sDAavB,wFACIG,IACKrD,IADL,UACYsD,EADZ,mCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GACH,IAAM2T,EAAgB3T,EAASC,KAAKmN,QAAO,SAACzE,GAAD,MAA6B,sBAAtBA,EAAEiL,mBAAiE,aAAtBjL,EAAEiL,iBAAtD,IAC3CF,EACIG,OAAOC,QAAQH,GAAerR,KAAI,mCAAOd,GAAP,iBAAmB,CACnDuS,MAAOvS,EAAMwS,kBACbxS,MAAOA,EAAMoS,kBAFmB,IAKzC,IACA1T,OAAM,SAACb,GACP,IAfT,4CAbuB,sBAS3Bc,qBAAU,YATiB,mCAUvB8T,EACD,GAAE,IAoBL,MAAuCxU,mBAAS,CACIyU,cAAc7Q,aAAO,IAAI7C,KAAK6S,IAAU,cACxCc,WAAY,EACZpC,SAAS,GACTqC,YAAY,GACZC,QAAS,KAL7D,mBAAOC,EAAP,UAyCF,OACI,+BAEQ,gBAAC,KAAD,CAAO9B,KAAMzV,EAAM0V,UAAWC,OAAQ3V,EAAM2V,OAAQxK,UAAU,OAAO1E,KAAK,KAA1E,UACD,gBAAC,KAAMmP,OAAP,CAAcD,OAAQ3V,EAAM2V,OAAQzO,MAAO,CAACC,gBAAgB,WAA5D,yBAEI,eAAC,KAAD,CACGF,QAAQ,GACRkE,UAAU,YACVsF,QAASzQ,EAAM2V,YAGnB,eAAC,KAAMxI,KAAP,UACQ,eAAC,KAAD,UACI,eAAC/B,GAAA,EAAD,UACA,kCACI,sBAAKD,UAAU,MAAf,SAEG,eAAC,KAAD,CACKqM,SAAUf,EACVhS,MAAO+R,EACPhP,QAASkP,EACTe,QAAQ,OACRC,iBAAiB,WAKxBpC,EAAS,eAACU,GAAA,EAAD,IAAc,GACxB,wBAEA,eAAC,KAAD,CACIxR,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QApEP,SAACwF,GAClBA,EAAEC,iBAEFX,GAAU,GACV,IAAIoC,EAAa,GACjBnB,EAAezE,SAAQ,SAAUtN,EAAOuN,EAAOC,GAC3C0F,EAAWtF,KAAK5N,EAAK,MACxB,IACD8S,EAAavC,SAASjO,EAAWsG,GACjCkK,EAAaD,QAAQvQ,EAAWuQ,QAChCC,EAAaF,YAAYM,EACzB9U,IAAMsT,KAAN,UAAcrT,EAAd,gBAAqCyU,EACrC,CAAExU,QAAS,CAAC,+BAA4B5D,MAGrC6D,MAAK,SAAAC,GACFsS,GAAU,GACVvV,EAAM+G,WAAW+J,WAAU,EAC3BiD,IAAMtR,QAAQ,+BACdzC,EAAM2V,QAGT,IACAxS,OAAM,SAAAb,GACHiT,GAAU,GACVxB,IAAMzR,MAAM,uBAEf,GAEN,EAiCuB,SAQMgT,EAGF,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,uBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,iCAcnC,EClKKtC,GAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,KAAM,CACJC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE3BO,OAAQ,CACNR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAE9BQ,WAAY,CACVC,aAAc,IAEhBC,OAAQ,CACNC,OAAQ,GACRN,MAAO,KAETO,OAAQ,CACNb,OAAQF,EAAMG,QAAQ,IAGxBa,KAAM,CACJ,QAAS,CACPd,OAAQF,EAAMG,QAAQ,KAG1Bc,MAAO,CACLb,QAAS,QAEXc,MAAO,CACLC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QAvCoB,IAw8BnBoV,GA75BK,SAAC5X,GACnB,IAAI+G,EAAa/G,EAAM+G,WAAa/G,EAAM+G,WAAa,CAAC,EACxD,EAAwC4D,IAAMjI,UAAS,GAAvD,mBAAOmV,EAAP,KAAqBC,EAArB,KACA,EAA8CnN,IAAMjI,UAAS,GAA7D,mBACMqV,GADN,UACuB,kBAAMD,GAAiBD,EAAvB,GAEvB,EAAqCnV,mBAAS,MAA9C,mBACA,GADA,UAC4BA,mBAAS,CAAC,IAAtC,mBAAOsV,EAAP,KAAeC,EAAf,KACA,EAA8CvV,mBAAS,IAAvD,mBAAOwV,EAAP,KAAwB/G,EAAxB,KACA,EAA8BzO,oBAAS,GAAvC,mBAAgBE,GAAhB,WACA,EAGIF,mBAAS,GAHb,mBACE8O,EADF,KAEEC,EAFF,KAII0G,EAAI,eAAQH,GACVlJ,EAAUtE,KAChB,EAA0C9H,mBAAS,CAAC,GAApD,mBAAO0V,EAAP,KAAsBC,EAAtB,KACA,EAA4B3V,oBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAA0C7S,mBAAS,IAAnD,mBAAsB4V,GAAtB,WACA,EAAgD5V,mBAAS,IAAzD,mBAAyB6V,GAAzB,WACA,EAA4C7V,mBAAS,IAArD,mBAAO8V,GAAP,KAAuBC,GAAvB,KACA,GAAgC/V,mBAAS,IAAzC,qBAAiBgW,IAAjB,aACA,GAA8BhW,oBAAS,GAAvC,qBAAgBiW,IAAhB,aAGA,GAAkDjW,oBAAS,GAA3D,qBAAOkW,GAAP,MAA0BC,GAA1B,MAEA,GAA8CnW,oBAAS,GAAvD,qBAAOoW,GAAP,MAAwBC,GAAxB,MAEA,GAAgDrW,oBAAS,GAAzD,qBAAOsW,GAAP,MAAyBC,GAAzB,MAEA,GAAkDvW,mBAAS,CAAC,GAA5D,qBAAOwW,GAAP,MAA0BC,GAA1B,MACA,GAA0DzW,oBAAS,GAAnE,qBAAO0W,GAAP,MAA8BC,GAA9B,MAEA,GAAkC3W,mBAAS,CAAE4W,iBAAkB,GAAIC,gBAAiB,KAApF,qBACA,IADA,YAC0C7W,mBAAS,KAAnD,qBAAO8W,GAAP,MAEA,IAFA,MAE4B9W,mBAAS,CAAE+W,IAAK,GAAIC,aAAc,MAA9D,qBACA,IADA,YAC8BhX,mBAAS,KAAvC,qBAAOiX,GAAP,MAEA,IAFA,MAEwDjX,mBAAS,CACCkX,WAAY,GACZC,UAAW,GACX3X,OAAQ,GACR4X,SAAU,GACVC,MAAM,GACNC,YAAY,GACZC,gBAAgB,MAPlF,qBAAOC,GAAP,MAA6BC,GAA7B,MASA,GAAkCzX,mBAAS,CACzC8V,eAAgB,GAChB4B,QAAS,CAAC,EACVC,YAAa,GACbC,qBAAsB,CAAC,EACvBC,YAAa,GACbC,IAAK,GACLC,cAAe,GACfC,aAAc,GACdC,gBAAiB,GACjBvD,WAAY,EACZwD,mBAAoB,GACpBC,gBAAiB,GACjBC,gBAAiB,GACjBC,QAAS,GACTC,WAAY,GACZC,wBAAyB,CAAC,EAC1BjG,SAAUjO,EAAWsG,GACrB6N,SAAU,CAAC,EACXC,OAAQ,GACRC,WAAY,GACZC,KAAM,GACNC,UAAW,GACXC,aAAc,KAvBhB,qBAAOC,GAAP,MAAkBC,GAAlB,MAyBA,GAAiC/Y,mBAAS,CACxCkX,WAAY,GACZC,UAAW,GACX1C,cAAe,GACfC,WAAY,EACZlV,OAAQ,GACR8S,SAAUhV,EAAM+G,WAAWsG,GAC3BqO,cAAe,EACf5B,SAAU,GACVC,MAAM,GACNC,YAAY,GACZC,gBAAgB,KAXlB,qBAAO0B,GAAP,MAAcC,GAAd,MAaA,GAA0BlZ,mBAAS,CACjCmZ,aAAc,GACdC,SAAU,GACVC,WAAY,GACZC,WAAY,GACZC,MAAO,GACPC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,KARd,qBAAOC,GAAP,YAvF6B,wDA8G1B,wFACCzZ,GAAW,GACXC,IACKrD,IADL,UACYsD,EADZ,qEACgF9C,EAAM+G,WAAWsG,IAC7F,CAAEtK,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GACHL,GAAW,GACXuO,EAAmBlO,EAASC,KAC/B,IACAC,OAAM,SAACb,GACJM,GAAW,EACd,IAZN,4CA9G0B,sBAkG7BQ,qBAAU,YAlGmB,oCAmG3BkZ,GACAC,KApG2B,oCAqG3BC,GACAC,KACAC,KACAC,KAxG2B,oCAyG3B/K,GACAgL,IAED,GAAE,IAiBD,IAAMF,GAAa,WACnB7Z,IACGrD,IADH,UACUsD,EADV,qCAC8C9C,EAAM+G,WAAWsG,IAC3D,CAAEtK,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAEL,IAAM4Z,EAAiB5Z,EAASC,KAAKD,EAASC,KAAKiR,OAAS,GACxD0I,EAAe1F,gBAAkB9Q,KAAO,IAAI5C,MAAQ6C,OAAO,iBAAkB,IAC/E6S,GAAqB0D,GACrBxD,IAAyB,GAE5B,IACAlW,OAAM,SAACb,GAEP,GACF,EAEKsa,GAAiB,WACrB/Z,IACGrD,IADH,UACUsD,EADV,uBACgC9C,EAAM+G,WAAWsG,IAC7C,CAAEtK,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GACH8D,EAAW9D,EAASC,IACvB,IACAC,OAAM,SAACb,GAEP,GACF,EAEGqa,GAAgB,WACpB9Z,IACGrD,IADH,UACUsD,EADV,gBAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GACL,IAAM6Z,EAAQ7Z,EAASC,KAAKmN,QAAO,SAACzE,GAAD,OAAMA,EAAEyB,KAAKrN,EAAM+G,WAAWsG,EAA9B,IAEnCgL,EAAiByE,EAAO,GACzB,IACA3Z,OAAM,SAACb,GAEP,GACJ,EAGGia,GAAa,WACjB1Z,IACGrD,IADH,UACUsD,EADV,0CAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAELqV,EAAiBrV,EAASC,KAC3B,IACAC,OAAM,SAACb,GAEP,GAEJ,EAGKma,GAAW,WACf5Z,IACGrD,IADH,UACUsD,EADV,qCAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAELyV,GAAYzV,EAASC,KACtB,IACAC,OAAM,SAACb,GAEP,GAEJ,EAzM4B,wDA2M7B,wFACEO,IACGrD,IADH,UACUsD,EADV,gDAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAELsV,EAAoBtV,EAASC,KAE9B,IACAC,OAAM,SAACb,GACP,IAXL,4CA3M6B,8EAyN7B,wFACEO,IACGrD,IADH,UACUsD,EADV,mDAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GACLwV,GAAkBxV,EAASC,KAE5B,IACAC,OAAM,SAACb,GACP,IAVL,4CAzN6B,sBAqO7B,IAAMya,GAAoB,SAAA9G,GACxBwF,GAAa,2BAAKD,IAAN,mBAAkBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,SACjC,iBAAlBwR,EAAE+G,OAAOvX,OACY,OAAnBwQ,EAAE+G,OAAOvY,MACXkU,IAAW,GAEXA,IAAW,GAGhB,EACKsE,GAAgC,SAAAhH,GACpC2F,GAAgB,2BAAKD,IAAN,mBAAc1F,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QACvD,EAoJD,OACE,iCACA,sBAAK0G,UAAU,MAAf,SAEE,sBAAKA,UAAU,WAAf,SACE,6DAIF,gBAAC+R,GAAA,EAAD,CAAMtY,QAAQ,QAAd,UACC,eAACsY,GAAA,EAAKC,OAAN,CAAavb,MAAO,EAApB,SAEK,gBAACwb,GAAA,EAAD,WACE,eAAC5W,GAAA,EAAD,CAAOuM,GAAG,IAAIxQ,MAAM,OAAO2E,MAAO,CAACtF,MAAM,OAAQM,OAAO,QAASmb,QAAM,EAAvE,SACA,qBAAInW,MAAO,CAAC3E,MAAM,QAAlB,2BAEA,wBAEC,gBAAC,KAAD,CACC2E,MAAO,CAAEhF,OAAQ,SACjBmL,GAAG,aACHlC,UAAU,yCAHX,UAKC,wBACI,qBAAIA,UAAU,WAAd,SACE+M,EAAgB/D,OAAS,EAE3B,eAACxB,GAAA,EAAD,CACIxH,UAAU,2EACVyH,iBAAiB,IAFrB,SAKI,qCACCsF,EAAgB3S,KAAI,SAAC+X,EAAOzK,GAAR,OACrB,uBAAK1H,UAAU,iBAAf,UACE,gBAACwH,GAAA,EAAUG,OAAX,CACIC,GAAI7F,KAAK8F,KACTtF,SAAQ,UAAKmF,GACb1H,UAAS,2BACyB,IAAhCqG,EAAoC,GAAK,YADlC,0BAGTf,QAAS,kBACPgB,EACkC,IAAhCD,GAAqC,EAAIqB,EAFpC,EAKT3L,MAAO,CAACtF,MAAM,QAXlB,UAaA,uBAAMuJ,UAAU,0BAChB,wBAAMA,UAAU,oCAAhB,0BAAiE,uBAAMA,UAAU,GAAhB,SAAoBmS,EAAMhC,YAA3F,OACA,uBAAMnQ,UAAU,kCAElB,eAACwH,GAAA,EAAUO,SAAX,CACExF,SAAQ,UAAKmF,GACb1H,UAAU,kBAFZ,SAIE,sBAAKA,UAAU,sBAAf,SAEI,gBAACoS,GAAA,EAAD,CAAMC,QAAM,EAACtW,MAAO,CAACtF,MAAM,QAA3B,UACK0b,EAAMG,cAA2C,OAA3BH,EAAMG,aAAa1D,OAAiB,gBAACwD,GAAA,EAAK/M,KAAN,CAAWtJ,MAAO,CAACwW,cAAc,OAAQC,WAAW,OAAOC,UAAU,iBAAkB/b,UAAU,QAAjG,mBAAiH,uBAAMqF,MAAO,CAAC3E,MAAM,oBAAqB4I,UAAU,YAAnD,SAA+D,+BAAImS,EAAMG,aAAa1D,MAAvB,eAC1OuD,EAAMG,cAAqD,OAArCH,EAAMG,aAAaxD,iBAA2B,gBAACsD,GAAA,EAAK/M,KAAN,CAAWtJ,MAAO,CAACwW,cAAc,OAAQC,WAAW,QAApD,8BAA8E,uBAAMxS,UAAU,YAAhB,SAA4B,qBAAGjE,MAAO,CAAC3E,MAAM,oBAAjB,UAAuC+a,EAAMG,aAAaxD,gBAA1D,eAC9KqD,EAAMG,cAAiD,OAAjCH,EAAMG,aAAazD,aAAuB,gBAACuD,GAAA,EAAK/M,KAAN,CAAWtJ,MAAO,CAACwW,cAAc,OAAQC,WAAW,QAApD,yBAAyE,uBAAMxS,UAAU,YAAhB,SAA4B,qBAAGjE,MAAO,CAAC3E,MAAM,oBAAjB,UAAuC+a,EAAMG,aAAazD,YAA1D,IAAuE,qCAAvE,YACrKsD,EAAMG,cAA8C,OAA9BH,EAAMG,aAAa3D,UAAkD,OAA/BwD,EAAMG,aAAa5D,WAAqB,gBAAC0D,GAAA,EAAK/M,KAAN,CAAWtJ,MAAO,CAACwW,cAAc,OAAQC,WAAW,QAApD,4BAA4E,uBAAOxS,UAAU,YAAjB,SAA6B,qBAAGjE,MAAO,CAAC3E,MAAM,oBAAjB,UAAuC+a,EAAMG,aAAa3D,SAA1D,IAAqEwD,EAAMG,aAAa5D,kBACrSyD,EAAMG,cAA4C,OAA5BH,EAAMG,aAAavb,QAAkB,gBAACqb,GAAA,EAAK/M,KAAN,CAAWtJ,MAAO,CAACwW,cAAc,OAAQC,WAAW,QAApD,oBAAoE,uBAAOxS,UAAU,YAAjB,SAA6B,qBAAGjE,MAAO,CAAC3E,MAAM,oBAAjB,UAAuC+a,EAAMG,aAAavb,OAA1D,cAC5Job,EAAMG,cAAgD,OAAhCH,EAAMG,aAAa7D,YAAsB,gBAAC2D,GAAA,EAAK/M,KAAN,CAAWtJ,MAAO,CAACwW,cAAc,OAAQC,WAAW,QAApD,oBAAoE,uBAAOxS,UAAU,YAAjB,SAA6B,qBAAGjE,MAAO,CAAC3E,MAAM,oBAAjB,UAAuC+a,EAAMG,aAAa7D,WAA1D,cAChK0D,EAAMG,cAAgD,OAAhCH,EAAMG,aAAa7D,YAAiD,OAA5B0D,EAAMG,aAAavb,QAAkB,gBAACqb,GAAA,EAAK/M,KAAN,CAAWtJ,MAAO,CAACwW,cAAc,OAAQC,WAAW,QAApD,iBAAiE,uBAAOxS,UAAU,YAAjB,SAA6B,qBAAGjE,MAAO,CAAC3E,MAAM,oBAAjB,UAAuCsb,KAAKC,MAAMR,EAAMG,aAAa7D,YAAY0D,EAAMG,aAAavb,OAAO,MAA3G,uBA/BvK2Q,EADhB,QA4C3B,uCACA,wBACA,eAAC+B,GAAA,EAAD,CACI3N,QAAQ,OACRkE,UAAU,oCAFd,SAII,+DAUd,eAAC+R,GAAA,EAAKC,OAAN,CAAavb,MAAO,GAApB,SACE,gBAACwb,GAAA,EAAD,WACE,eAAC5W,GAAA,EAAD,CAAOuM,GAAG,IAAIxQ,MAAM,OAAQ2E,MAAO,CAACtF,MAAM,OAAQM,OAAO,QAASmb,QAAM,EAAxE,SACE,qBAAInW,MAAO,CAAC3E,MAAM,QAAlB,4BAEF,wBAAM,wBACN,uBAAK4I,UAAU,MAAf,UACE,sBAAKA,UAAU,2BAAf,SACE,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,8BACA,eAACC,GAAA,EAAD,CACEtR,KAAK,OACLiB,KAAK,gBACL4H,GAAG,gBACH5I,MAAOkX,GAAMxE,cACbjQ,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClD+K,SAAUyF,GACVe,IAAKhe,EAAM+G,YAAc/G,EAAM+G,WAAWkX,YAAcje,EAAM+G,WAAWkX,YAAY3C,UAAY,KACjG4C,IAAK7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAC/ByP,UAAQ,IAEc,KAAxBiC,EAAOb,cACH,uBAAMhM,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOb,gBACxC,QAIR,sBAAKhM,UAAU,2BAAf,SACGiO,IACC,uBAAKjO,UAAU,mCAAf,UACE,wBACE3G,KAAK,WACL2G,UAAU,mBACV1F,KAAK,oBACL4H,GAAG,oBACHmK,SArQG,SAAAvB,GACjBA,EAAE+G,OAAOmB,QAEXvC,GAAgB,eAAK1C,KAErB0C,GAAgB,CACdhC,WAAY,GACZC,UAAW,GACX1C,cAAe,GACfC,WAAY,GACZlV,OAAQ,GACR8S,SAAUhV,EAAM+G,WAAWsG,GAC3BqO,cAAe,GACf5B,SAAU,GACVC,MAAM,GACNC,YAAY,GACZC,gBAAgB,IAGrB,IAqPiB,wBACE9O,UAAU,mBACViT,QAAQ,mBAFV,0CASN,uBAAKjT,UAAU,MAAf,UACM,sBAAKA,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,oBACA,gBAACwI,GAAA,EAAD,WACI,eAACvI,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,QACL4H,GAAG,QACHmK,SAAUyF,GACVe,IAAI,KACJE,IAAI,MACJzZ,MAAOkX,GAAM5B,MACbuE,QAzOI,SAACrI,GACjC,GAAmB,UAAhBA,EAAE+G,OAAOvX,OAAmBwQ,EAAE+G,OAAOvY,MAAQ,IAAMwR,EAAE+G,OAAOvY,MAAM,KAAK,CAE1E0V,GAAwB,2BAAID,IAAL,IAA2BH,MADnC,wDAEd,MACDI,GAAwB,2BAAID,IAAL,IAA2BH,MAAM,KAE3D,EAmO+B7S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,eAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,oBAI2B,KAA9ByN,GAAqBH,MACd,uBAAM5O,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBH,QAC1D,GACa,KAAhB/B,EAAO+B,MACJ,uBAAM5O,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO+B,QACxC,QAGR,sBAAK5O,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,gCACA,gBAACwI,GAAA,EAAD,WACI,eAACvI,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,kBACL4H,GAAG,kBACHmK,SAAUyF,GACVe,IAAI,KACJE,IAAI,KACJzZ,MAAOkX,GAAM1B,gBACbqE,QA5PY,SAACrI,GACzC,GAAmB,oBAAhBA,EAAE+G,OAAOvX,OAA6BwQ,EAAE+G,OAAOvY,MAAQ,IAAMwR,EAAE+G,OAAOvY,MAAM,IAAI,CAEnF0V,GAAwB,2BAAID,IAAL,IAA2BD,gBADnC,kEAEd,MACDE,GAAwB,2BAAID,IAAL,IAA2BD,gBAAgB,KAErE,EAsP+B/S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,eAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,oBAIqC,KAAxCyN,GAAqBD,gBACd,uBAAM9O,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBD,kBAC1D,GACuB,KAA1BjC,EAAOiC,gBACJ,uBAAM9O,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOiC,kBACxC,QAGR,sBAAK9O,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,gBAACwI,GAAA,EAAD,WACI,eAACvI,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,cACL4H,GAAG,cACHmK,SAAUyF,GACVe,IAAI,KACJE,IAAI,KACJzZ,MAAOkX,GAAM3B,YACbsE,QA/QQ,SAACrI,GACrC,GAAmB,gBAAhBA,EAAE+G,OAAOvX,OAAyBwQ,EAAE+G,OAAOvY,MAAQ,IAAMwR,EAAE+G,OAAOvY,MAAM,IAAI,CAE/E0V,GAAwB,2BAAID,IAAL,IAA2BF,YADnC,6DAEd,MACDG,GAAwB,2BAAID,IAAL,IAA2BF,YAAY,KAEjE,EAyQ+B9S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,gBAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,UACI,qCADJ,UAIiC,KAApCyN,GAAqBF,YACd,uBAAM7O,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBF,cAC1D,GACmB,KAAtBhC,EAAOgC,YACJ,uBAAM7O,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOgC,cACxC,QAIR,sBAAK7O,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,gBAACwI,GAAA,EAAD,WACI,eAACvI,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACHmK,SAAUyF,GACVe,IAAI,IACJE,IAAI,MACJzZ,MAAOkX,GAAM/B,WACb0E,QAnVS,SAACrI,GACtC,GAAmB,eAAhBA,EAAE+G,OAAOvX,OAAwBwQ,EAAE+G,OAAOvY,MAAQ,GAAKwR,EAAE+G,OAAOvY,MAAM,KAAK,CAE5E0V,GAAwB,2BAAID,IAAL,IAA2BN,WADnC,6DAEhB,MACCO,GAAwB,2BAAID,IAAL,IAA2BN,WAAW,KAEhE,EA6U6B1S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,eAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,mBAIgC,KAAnCyN,GAAqBN,WACd,uBAAMzO,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBN,aAC1D,GACkB,KAArB5B,EAAO4B,WACJ,uBAAMzO,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO4B,aACxC,QAGR,sBAAKzO,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,qBACA,gBAACwI,GAAA,EAAD,WACA,eAACE,GAAA,EAAD,CACQC,UAAU,SACVC,OAAQ5G,EACRlC,OAAQoC,EACR7Q,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAJpG,gBAQI,eAACqJ,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,SACL4H,GAAG,SACHmK,SAAUyF,GACVxY,MAAOkX,GAAMzZ,OACb8b,IAAI,QACJE,IAAI,UACJI,QA9XK,SAACrI,GAClC,GAAmB,WAAhBA,EAAE+G,OAAOvX,OAAoBwQ,EAAE+G,OAAOvY,MAAQ,OAASwR,EAAE+G,OAAOvY,MAAM,SAAS,CAEhF0V,GAAwB,2BAAID,IAAL,IAA2BhY,OADnC,8DAEhB,MACCiY,GAAwB,2BAAID,IAAL,IAA2BhY,OAAO,KAE5D,EAwX6BgF,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAElD,eAAC8R,GAAA,EAAD,CACAC,UAAU,SACVC,OAAQ5G,EACRlC,OAAQoC,EACR7Q,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAJ5F,SAMgB,KAAfkP,GAAMzZ,QAAeyZ,GAAMzZ,OAAO,KAAKwc,QAAQ,GAAK,IAAM,SAGnC,KAA/BxE,GAAqBhY,OAClB,uBAAMiJ,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBhY,SACtD,GACc,KAAjB8V,EAAO9V,OACJ,uBAAMiJ,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO9V,SACxC,QAGR,sBAAKiJ,UAAU,gCAAf,SACwB,KAAnBwQ,GAAM/B,YAAkC,KAAf+B,GAAMzZ,QAC5B,gBAAC2T,GAAA,EAAD,WACA,gBAACrP,GAAA,EAAD,eAAU,OACV,eAAC6X,GAAA,EAAD,UACA,gBAACE,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,mBACWoR,KAAKC,MAAMnC,GAAM/B,YAAa+B,GAAMzZ,OAASyZ,GAAMzZ,OAAQ,mBAQpF,sBAAKiJ,UAAU,MAAf,SACA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,gBAACwI,GAAA,EAAD,WACA,eAACE,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,4BAGI,eAACqJ,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,WACL4H,GAAG,WACH2Q,IAAI,KACJE,IAAI,MACJ1G,SAAUyF,GACVxY,MAAOkX,GAAM7B,SACbwE,QAhaa,SAACrI,GACpC,GAAmB,aAAhBA,EAAE+G,OAAOvX,OAAsBwQ,EAAE+G,OAAOvY,MAAQ,IAAMwR,EAAE+G,OAAOvY,MAAM,KAAK,CAE3E0V,GAAwB,2BAAID,IAAL,IAA2BJ,SADnC,0EAEhB,MACCK,GAAwB,2BAAID,IAAL,IAA2BJ,SAAS,KAE9D,EA0ZuB5S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,eAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,6BAGI,eAACqJ,GAAA,EAAD,CACAtR,KAAK,SACLiB,KAAK,YACL4H,GAAG,YACH2Q,IAAK,EACLE,IAAK,IACL1G,SAAUyF,GACVxY,MAAOkX,GAAM9B,UACbyE,QAtac,SAACrI,GACrC,GAAmB,cAAhBA,EAAE+G,OAAOvX,OAAuBwQ,EAAE+G,OAAOvY,MAAQ,IAAMwR,EAAE+G,OAAOvY,MAAM,KAAK,CAE5E0V,GAAwB,2BAAID,IAAL,IAA2BL,UADnC,2EAEhB,MACCM,GAAwB,2BAAID,IAAL,IAA2BL,UAAU,KAE/D,EAgauB3S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,aAKxB,KAAjCyN,GAAqBJ,SACtB,uBAAM3O,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBJ,WAClD,GACgB,KAAnB9B,EAAO8B,SACJ,uBAAM3O,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO8B,WACxC,GAC+B,KAAlCI,GAAqBL,UACtB,uBAAM1O,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBL,YAClD,GACiB,KAApB7B,EAAO6B,UACJ,uBAAM1O,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO6B,YACxC,aAMV,eAACrT,GAAA,EAAD,CAAOuM,GAAG,IAAIxQ,MAAM,QAAS2E,MAAO,CAACtF,MAAM,OAAQM,OAAO,QAASmb,QAAM,EAAzE,SACE,qBAAInW,MAAO,CAAC3E,MAAM,YAEpB,wBAAM,wBAEN,uBAAK4I,UAAU,MAAf,UAGE,sBAAKA,UAAU,iBAAf,SACE,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,+BACA,gBAACC,GAAA,EAAD,CACEtR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAO+W,GAAUD,aACjB/D,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDsJ,UAAQ,EAPV,UASE,yBAAQtR,MAAM,SAAd,qBACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAKN,sBAAK0G,UAAU,iBAAf,SACE,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,wCACA,gBAACC,GAAA,EAAD,CACEtR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAO+W,GAAUD,aACjB/D,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDsJ,UAAQ,EAPV,UASE,yBAAQtR,MAAM,GAAd,qBACA,yBAAQA,MAAM,UAAd,sBACA,yBAAQA,MAAM,UAAd,8BAKN,sBAAK0G,UAAU,iBAAf,SACE,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,mCACA,gBAACC,GAAA,EAAD,CACEtR,KAAK,SACLiB,KAAK,iBACL4H,GAAG,iBACH5I,MAAO+W,GAAUhD,eACjBhB,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDsJ,UAAQ,EAPV,UASE,yBAAQtR,MAAM,SAAd,qBAEC+T,GAAejT,KAAI,SAACd,GAAD,OAClB,yBAAuBA,MAAOA,EAAM4I,GAApC,SACG5I,EAAMjD,SADIiD,EAAM4I,GADD,YAS1B,sBAAKlC,UAAU,iBAAf,SACE,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,4BACA,gBAACC,GAAA,EAAD,CACEtR,KAAK,SACLiB,KAAK,iBACL4H,GAAG,iBACH5I,MAAO+W,GAAUhD,eACjBhB,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDsJ,UAAQ,EAPV,UASE,yBAAQtR,MAAM,SAAd,qBAEC+T,GAAejT,KAAI,SAACd,GAAD,OAClB,yBAAuBA,MAAOA,EAAM4I,GAApC,SACG5I,EAAMjD,SADIiD,EAAM4I,GADD,YAS1B,sBAAKlC,UAAU,iBAAf,SACE,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,yBACA,gBAACC,GAAA,EAAD,CACEtR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAO+W,GAAUD,aACjB/D,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDsJ,UAAQ,EAPV,UASE,yBAAQtR,MAAM,SAAd,qBACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAKN,sBAAK0G,UAAU,iBAAf,SACE,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,+BACA,eAACC,GAAA,EAAD,CACEtR,KAAK,OACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAO+W,GAAUD,aACjB/D,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDsJ,UAAQ,SAMd,sBAAK5K,UAAU,iBAAf,SACE,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,0BACA,gBAACC,GAAA,EAAD,CACEtR,KAAK,SACLiB,KAAK,qBACL4H,GAAG,qBACH5I,MAAO+W,GAAUZ,mBACjBpD,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDsJ,UAAQ,EAPV,UASE,yBAAQtR,MAAM,SAAd,qBACA,yBAAQA,MAAM,OAAd,mBACA,yBAAQA,MAAM,WAAd,uBACA,yBAAQA,MAAM,WAAd,kCAMR,wBAGA,wBACA,eAAC,KAAD,CACED,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,EAAQ3M,OACnBwc,SAAUrJ,EACVzI,UAAW,eAAC,KAAD,IACX3F,MAAO,CAACC,gBAAgB,WACxBsJ,QAziBS,SAACwF,GACpBA,EAAEC,iBAnBFiC,EAAKhB,cAAgBwE,GAAMxE,cAAgB,GAAK,yBAChDgB,EAAK2C,gBAAkBU,GAAUV,gBAAkB,GAAK,yBACxD3C,EAAKoD,aAAeC,GAAUD,aAAe,GAAK,yBAClDpD,EAAKuC,aAAec,GAAUd,aAAe,GAAK,yBAClDvC,EAAKyC,mBAAqBY,GAAUZ,mBAAqB,GAAK,yBAC9DzC,EAAKK,eAAiBgD,GAAUhD,eAAiB,GAAK,yBACtDL,EAAKyG,eAAiBjD,GAAM9B,UAAY,GAAK,yBAC7C1B,EAAK2B,SAAW6B,GAAM7B,SAAW,GAAK,yBACtC3B,EAAKjW,OAASyZ,GAAMzZ,OAAS,GAAK,yBAClCiW,EAAKyB,WAAa+B,GAAM/B,WAAa,GAAK,yBAC1C3B,EAAU,eACHE,IAEArB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,MAQlC2J,GAAU,GACViG,GAAUF,UAAYK,GAAMxE,cAC5BqE,GAAUlB,qBAAuBX,GACjC6B,GAAUjB,YAAcnC,EAAc6F,YAAY5Q,GAClDmO,GAAUX,gBAAkBzC,EAAc2G,WAAW1R,GACrDmO,GAAUP,wBAA0BzB,GACpCgC,GAAUN,SAAWmB,GACrBb,GAAS,aAAmBG,GAC5B9Y,IAAMsT,KAAN,UAAcrT,EAAd,yBAA8C0Y,GAC5C,CAAEzY,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAGvC6D,MAAK,SAAAC,GACJ2Z,KACArH,GAAU,GACVxB,IAAMtR,QAAQ,gCACdzC,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,mBACvD,IACAzN,OAAM,SAAAb,GAEL,GADAiT,GAAU,GACPjT,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACvC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAGf,IAEJ,EAggBS,SAUIgT,EAGA,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,uBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,4BASV,eAAC,GAAD,CAAY6I,OA13BS,kBAAMoD,IAAoBD,GAA1B,EA03BiBpD,UAAWoD,KACjD,eAAC,GAAD,CAAcnD,OA73BS,kBAAMkD,IAAsBD,GAA5B,EA63BmBlD,UAAWkD,KACrD,eAAC,GAAD,CAAajD,OA13BS,kBAAMsD,IAAqBD,GAA3B,EA03BkBtD,UAAWsD,OAGxD,ECl9BKxO,GAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACrCkB,MAAO,CACLC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QAPoB,IA0JlC,SAASwc,GAAT,GAII,IAHFC,EAGC,EAHDA,SACAjN,EAEC,EAFDA,MACAkN,EACC,EADDA,uBAIA,OACQ,gCACI,8BAAKD,EAASxF,MACd,8BAAKwF,EAASvF,eACd,wBACA,8BACI,eAACyF,GAAA,EAAD,CAAY,aAAW,SAAS1Y,KAAK,QAAQlE,MAAM,QAAQkO,QAAS,kBAAKyO,EAAuBlN,EAA5B,EAApE,SACI,eAAC,KAAD,CAAYxP,SAAS,kBAM1C,CAGc4S,OAtKH,SAACpV,GACX,MAA4B0C,mBAAS,CAAC,GAAtC,mBAAOsV,EAAP,KAAeC,EAAf,KACMnJ,EAAUtE,KACZ2N,EAAI,eAAQH,GAChB,EAA4CtV,mBAAS,IAArD,mBAAO0c,EAAP,KAAuBC,EAAvB,KAEAjc,qBAAU,WACRkc,GACD,GAAE,IAEE,IAAMA,EAAgB,WACrBzc,IACIrD,IADJ,UACWsD,EADX,6CAEO,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHoc,EAAkBpc,EAASC,KAC9B,IACAC,OAAM,SAACb,GAEP,GAEH,EACDid,EAAuB,SAAAtJ,GAC3BjW,EAAMwf,UAAN,2BAAqBxf,EAAMyf,QAA3B,mBAAqCxJ,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAC/D,EAmBKya,EAAyB,SAAAlN,GAC3BhS,EAAM2Z,QAAQ+F,OAAO1N,EAAO,GAC5BhS,EAAM2f,WAAN,aAAqB3f,EAAM2Z,SAE9B,EAGD,OACE,+BACI,uBAAKxO,UAAU,MAAf,UACCnL,EAAM4f,cACP,uCACA,sBAAKzU,UAAU,2BAAf,SAEI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,mBAEE,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,MACL4H,GAAG,MACH5I,MAAOzE,EAAMyf,OAAOhG,IACpBjC,SAAU+H,EACVrY,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDsJ,UAAQ,EAPZ,UASM,yBAAQtR,MAAM,GAAd,qBACG2a,EAAe7Z,KAAI,SAACd,GAAD,OAChB,yBAAuBA,MAAOA,EAAMjD,QAApC,SACKiD,EAAMjD,SADEiD,EAAM4I,GADH,OAMX,KAAd2K,EAAOyB,IACJ,uBAAMtO,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOyB,MACxC,QAGZ,sBAAKtO,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAOzE,EAAMyf,OAAO/F,aACpBsE,IAAKhe,EAAM6f,aACXrI,SAAU+H,EACVrY,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDyR,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChCyP,UAAQ,IAGY,KAAvBiC,EAAO0B,aACJ,uBAAMvO,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO0B,eACxC,QAIR,sBAAKvO,UAAU,2BAAf,SACE,gBAAC3E,GAAA,EAAD,CAAUuM,GAAG,IAAIxQ,MAAM,QAASkO,QApEzB,SAAAwF,GARbkC,EAAKsB,IAAMzZ,EAAMyf,OAAOhG,IAAM,GAAK,yBACnCtB,EAAKuB,aAAe1Z,EAAMyf,OAAO/F,aAAe,GAAK,yBAErDzB,EAAU,eACHE,IAEArB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,IAI9B5L,EAAM2f,WAAN,uBAAqB3f,EAAM2Z,SAA3B,CAAoC3Z,EAAMyf,UAE5C1L,IAAMzR,MAAM,uBAEf,EA8DyDmE,KAAK,OAAOS,MAAO,CAAErF,UAAU,IAAjF,UACI,eAACie,GAAA,EAAD,CAAMra,KAAK,SADf,eAKDzF,EAAM2Z,QAAQxF,OAAQ,EAEnB,eAACoJ,GAAA,EAAD,UACA,gBAACwC,GAAA,EAAD,CAAQC,SAAO,EAACjU,YAAU,EAA1B,UACM,iCACI,gCACI,sCACA,4CACA,6BAGR,iCACD/L,EAAM2Z,QAAQpU,KAAI,SAAC0Z,EAAUjN,GAAX,OAEjB,eAAC,GAAD,CAEIA,MAAOA,EACPiN,SAAUA,EACVC,uBAAwBA,GAHnBlN,EAHQ,WAavB,OAMX,EC3JKxH,GAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACrCkB,MAAO,CACLC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QAPoB,IAgIlC,SAASyd,GAAT,GAIM,IAHFhB,EAGC,EAHDA,SACAjN,EAEC,EAFDA,MACAkO,EACC,EADDA,gBAIA,OACQ,gCAEI,8BAAKjB,EAAS3F,mBACd,8BAAK2F,EAAS1F,kBACd,wBACA,8BACI,eAAC4F,GAAA,EAAD,CAAY,aAAW,SAAS1Y,KAAK,QAAQlE,MAAM,QAAQkO,QAAS,kBAAKyP,EAAgBlO,EAArB,EAApE,SACI,eAAC,KAAD,CAAYxP,SAAS,kBAM1C,CAEY4S,OA5IH,SAACpV,GACX,MAA4B0C,mBAAS,CAAC,GAAtC,mBAAOsV,EAAP,KAAeC,EAAf,KACMnJ,EAAUtE,KACZ2N,EAAI,eAAQH,GACVmI,EAA6B,SAAAlK,GACnCjW,EAAMogB,aAAN,2BAAwBpgB,EAAMqgB,WAA9B,mBAA2CpK,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QACnE,EAoBOyb,EAAkB,SAAAlO,GACxBhS,EAAMwZ,cAAckG,OAAO1N,EAAO,GAClChS,EAAMsgB,iBAAN,aAA2BtgB,EAAMwZ,eAEhC,EAGH,OACE,+BACG,uBAAKrO,UAAU,MAAf,UACCnL,EAAM4f,cACN,uCACE,sBAAKzU,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,kBACL4H,GAAG,kBACH5I,MAAOzE,EAAMqgB,UAAU9G,gBACvB/B,SAAU2I,EACVjC,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChCY,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDsJ,UAAQ,IAGe,KAA1BiC,EAAOuB,gBACJ,uBAAMpO,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOuB,kBACxC,QAGR,sBAAKpO,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,mBACL4H,GAAG,mBACH5I,MAAOzE,EAAMqgB,UAAU/G,iBACvB9B,SAAU2I,EACVjZ,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDsJ,UAAQ,IAGgB,KAA3BiC,EAAOsB,iBACJ,uBAAMnO,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOsB,mBACxC,QAGR,sBAAKnO,UAAU,2BAAf,SACA,gBAAC3E,GAAA,EAAD,CAAUuM,GAAG,IAAIxQ,MAAM,QAASkO,QA3DjB,SAAAwF,GARrBkC,EAAKoB,gBAAkBvZ,EAAMqgB,UAAU9G,gBAAkB,GAAK,yBAC9DpB,EAAKmB,iBAAmBtZ,EAAMqgB,UAAU/G,iBAAmB,GAAK,yBAEhErB,EAAU,eACHE,IAEArB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,IAI9B5L,EAAMsgB,iBAAN,uBAA2BtgB,EAAMwZ,eAAjC,CAAgDxZ,EAAMqgB,aAEtDtM,IAAMzR,MAAM,uBAGf,EAoD6DmE,KAAK,OAAOS,MAAO,CAAErF,UAAU,IAAvF,UACI,eAACie,GAAA,EAAD,CAAMra,KAAK,SADf,eAMDzF,EAAMwZ,cAAcrF,OAAQ,EAEzB,eAACoJ,GAAA,EAAD,UACA,sBAAKrW,MAAO,CAAC4D,QAAQ,WAArB,SACA,gBAACiV,GAAA,EAAD,CAAQC,SAAO,EAACjU,YAAU,EAACtF,KAAK,KAAhC,UACM,iCACI,gCACI,0CACA,4CACA,6BAGR,iCACDzG,EAAMwZ,cAAcjU,KAAI,SAAC0Z,EAAUjN,GAAX,OAEvB,eAAC,GAAD,CAEIA,MAAOA,EACPiN,SAAUA,EACViB,gBAAiBA,GAHZlO,EAHc,aAczB,OAMf,ECwRcuO,GAxZS,SAACvgB,GACvB,MAAgC0C,mBAAS,IAAzC,mBAAO8d,EAAP,KAAiB9H,EAAjB,KACA,EAA8BhW,oBAAS,GAAvC,mBAAO+d,EAAP,KAAgB9H,EAAhB,KAEAvV,qBAAU,WACRqZ,IAC6B,OAA1Bzc,EAAMqc,MAAMN,WACbpD,GAAW,GAEXA,GAAW,EAEZ,GAAE,CAAC3Y,EAAMqc,QAIV,IAAMI,EAAU,WAChB5Z,IACKrD,IADL,UACYsD,EADZ,qCAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHyV,EAAYzV,EAASC,KACxB,IACAC,OAAM,SAACb,GAEP,GAEJ,EAEKya,EAAoB,SAAA9G,GACxBjW,EAAM0gB,SAAN,2BAAoB1gB,EAAMqc,OAA1B,mBAAmCpG,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,SACtC,eAAjBwR,EAAE+G,OAAOvX,OACU,OAAjBwQ,EAAE+G,OAAOvY,MACRkU,GAAW,GAEXA,GAAW,GAGlB,EAEL,OACE,+BACG,uBAAKxN,UAAU,MAAf,UAEG,sBAAKA,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,wCACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOzE,EAAMqc,MAAMN,WACnBvE,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aACjB7J,UAAQ,EARZ,UAUM,yBAAQtR,MAAM,GAAd,qBACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,0BAMC,IAAVgc,EACC,uCACE,sBAAKtV,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,wCACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAOzE,EAAMqc,MAAMR,aACnBrE,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aACjB7J,UAAQ,EARZ,UAUM,yBAAQtR,MAAM,GAAd,qBACA,yBAAQA,MAAM,MAAd,kBACE,yBAAQA,MAAM,KAAd,yBAIV,sBAAK0G,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,wBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAOzE,EAAMqc,MAAMP,SACnBtE,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aACjB7J,UAAQ,EARZ,UAUM,yBAAQtR,MAAM,GAAd,qBACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAIR,sBAAK0G,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,2BACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOzE,EAAMqc,MAAML,WACnBxE,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aACjB7J,UAAQ,EARZ,UAUM,yBAAQtR,MAAM,GAAd,qBACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAIR,sBAAK0G,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,oBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,QACL4H,GAAG,QACH5I,MAAOzE,EAAMqc,MAAMJ,MACnBzE,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aACjB7J,UAAQ,EARZ,UAUM,yBAAQtR,MAAM,GAAd,qBACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAIR,sBAAK0G,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,oCACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,oBACL4H,GAAG,oBACH5I,MAAOzE,EAAMqc,MAAMH,kBACnB1E,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aACjB7J,UAAQ,EARZ,UAUM,yBAAQtR,MAAM,GAAd,qBACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAIR,sBAAK0G,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,uBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAOzE,EAAMqc,MAAMF,SACnB3E,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aACjB7J,UAAQ,EARZ,UAUM,yBAAQtR,MAAM,GAAd,qBACA,yBAAQA,MAAM,MAAd,kBACF,yBAAQA,MAAM,KAAd,yBA2BuB,OAA3BzE,EAAMqc,MAAMR,cAA8C,OAAvB7b,EAAMqc,MAAMP,UAA6C,OAA1B9b,EAAMqc,MAAML,YAA0C,OAApBhc,EAAMqc,MAAMJ,OAAgD,OAAhCjc,EAAMqc,MAAMH,mBAAmD,OAAvBlc,EAAMqc,MAAMF,UACnL,qCACC,sBAAKhR,UAAU,2BAAf,SACJ,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,wBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOzE,EAAMqc,MAAMD,WACnB5E,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aAPrB,UASM,yBAAQnb,MAAM,GAAd,qBAEI+b,EAASnQ,QAAO,SAACzE,GAAD,MAAkB,6CAAZA,EAAEpK,SAAoE,iCAAZoK,EAAEpK,SAAyD,8BAAZoK,EAAEpK,OAAjH,IAAyJ+D,KAAI,SAACd,GAAD,OAC3K,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADwJ,cAW5J,QAA3BrN,EAAMqc,MAAMR,cAA+C,OAAvB7b,EAAMqc,MAAMP,UAA6C,OAA1B9b,EAAMqc,MAAML,YAA0C,OAApBhc,EAAMqc,MAAMJ,OAAgD,OAAhCjc,EAAMqc,MAAMH,mBAAmD,OAAvBlc,EAAMqc,MAAMF,UACpL,qCACC,sBAAKhR,UAAU,2BAAf,SACJ,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,wBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOzE,EAAMqc,MAAMD,WACnB5E,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aAPrB,UASM,yBAAQnb,MAAM,GAAd,qBAEI+b,EAASnQ,QAAO,SAACzE,GAAD,MAAkB,6CAAZA,EAAEpK,SAAoE,8BAAZoK,EAAEpK,OAAlE,IAA0G+D,KAAI,SAACd,GAAD,OAC5H,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADyG,cAY7G,QAA3BrN,EAAMqc,MAAMR,cAA+C,QAAvB7b,EAAMqc,MAAMP,UAA8C,OAA1B9b,EAAMqc,MAAML,YAA0C,OAApBhc,EAAMqc,MAAMJ,OAAgD,OAAhCjc,EAAMqc,MAAMH,mBAAmD,OAAvBlc,EAAMqc,MAAMF,UACrL,qCACC,sBAAKhR,UAAU,2BAAf,SACJ,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,wBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOzE,EAAMqc,MAAMD,WACnB5E,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aAPrB,UASM,yBAAQnb,MAAM,GAAd,qBAEI+b,EAASnQ,QAAO,SAACzE,GAAD,MAAkB,8BAAZA,EAAEpK,SAAqD,8BAAZoK,EAAEpK,OAAnD,IAA2F+D,KAAI,SAACd,GAAD,OAC7G,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GAD0F,cAW9F,QAA3BrN,EAAMqc,MAAMR,cAA+C,OAAvB7b,EAAMqc,MAAMP,UAA6C,QAA1B9b,EAAMqc,MAAML,YAA2C,OAApBhc,EAAMqc,MAAMJ,OAAgD,OAAhCjc,EAAMqc,MAAMH,mBAAmD,OAAvBlc,EAAMqc,MAAMF,UACrL,qCACC,sBAAKhR,UAAU,2BAAf,SACJ,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,wBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOzE,EAAMqc,MAAMD,WACnB5E,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aAPrB,UASM,yBAAQnb,MAAM,GAAd,qBAEI+b,EAASnQ,QAAO,SAACzE,GAAD,MAAkB,8BAAZA,EAAEpK,SAAqD,8BAAZoK,EAAEpK,OAAnD,IAA2F+D,KAAI,SAACd,GAAD,OAC7G,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GAD0F,cAW9F,QAA3BrN,EAAMqc,MAAMR,cAA+C,OAAvB7b,EAAMqc,MAAMP,UAA6C,OAA1B9b,EAAMqc,MAAML,YAA0C,QAApBhc,EAAMqc,MAAMJ,OAAiD,OAAhCjc,EAAMqc,MAAMH,mBAAmD,OAAvBlc,EAAMqc,MAAMF,UACrL,qCACC,sBAAKhR,UAAU,2BAAf,SACJ,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,wBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOzE,EAAMqc,MAAMD,WACnB5E,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aAPrB,UASM,yBAAQnb,MAAM,GAAd,qBAEI+b,EAASnQ,QAAO,SAACzE,GAAD,MAAkB,8BAAZA,EAAEpK,SAAqD,8BAAZoK,EAAEpK,OAAnD,IAA2F+D,KAAI,SAACd,GAAD,OAC7G,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GAD0F,cAW9F,QAA3BrN,EAAMqc,MAAMR,cAA+C,OAAvB7b,EAAMqc,MAAMP,UAA6C,OAA1B9b,EAAMqc,MAAML,YAA0C,OAApBhc,EAAMqc,MAAMJ,OAAgD,QAAhCjc,EAAMqc,MAAMH,mBAAoD,OAAvBlc,EAAMqc,MAAMF,UACrL,qCACC,sBAAKhR,UAAU,2BAAf,SACJ,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,wBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOzE,EAAMqc,MAAMD,WACnB5E,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aAPrB,UASM,yBAAQnb,MAAM,GAAd,qBAEI+b,EAASnQ,QAAO,SAACzE,GAAD,MAAkB,8BAAZA,EAAEpK,SAAqD,8BAAZoK,EAAEpK,OAAnD,IAA2F+D,KAAI,SAACd,GAAD,OAC7G,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GAD0F,cAW9F,QAA3BrN,EAAMqc,MAAMR,cAA+C,OAAvB7b,EAAMqc,MAAMP,UAA6C,OAA1B9b,EAAMqc,MAAML,YAA0C,OAApBhc,EAAMqc,MAAMJ,OAAgD,OAAhCjc,EAAMqc,MAAMH,mBAAmD,QAAvBlc,EAAMqc,MAAMF,UACpL,qCACC,sBAAKhR,UAAU,2BAAf,SACJ,gBAAC0K,GAAA,EAAD,WACE,eAAC,KAAD,wBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOzE,EAAMqc,MAAMD,WACnB5E,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAW3e,EAAM4f,aAPrB,UASM,yBAAQnb,MAAM,GAAd,qBAEI+b,EAASnQ,QAAO,SAACzE,GAAD,MAAkB,8BAAZA,EAAEpK,SAAqD,8BAAZoK,EAAEpK,OAAnD,IAA2F+D,KAAI,SAACd,GAAD,OAC7G,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GAD0F,iBAc/H,OAMT,EC7XK7C,GAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,KAAM,CACJC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE3BO,OAAQ,CACNR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAE9BQ,WAAY,CACVC,aAAc,IAEhBC,OAAQ,CACNC,OAAQ,GACRN,MAAO,KAETO,OAAQ,CACNb,OAAQF,EAAMG,QAAQ,IAGxBa,KAAM,CACJ,QAAS,CACPd,OAAQF,EAAMG,QAAQ,KAG1Bc,MAAO,CACLb,QAAS,QAEXc,MAAO,CACLC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QAvCoB,IAk5BnBoV,GAr2BK,SAAC5X,GACnB,IAAM+G,EAAa/G,EAAM+G,WAAa/G,EAAM+G,WAAa,CAAC,EAC1D,EAAwC4D,IAAMjI,UAAS,GAAvD,mBAAOmV,EAAP,KAAqBC,EAArB,KACA,EAA8CnN,IAAMjI,UAAS,GAA7D,mBACMqV,GADN,UACuB,kBAAMD,GAAiBD,EAAvB,GAEvB,EAA6BnV,qBAA7B,mBAAO4U,EAAP,KAAgBqJ,EAAhB,KACA,EAAkDje,oBAAS,GAA3D,mBAAOke,EAAP,KAA2BC,EAA3B,KACA,EAAqCne,mBAAS,MAA9C,mBACA,GADA,UACuCA,oBAAS,IAAhD,mBAAOkd,EAAP,KAAqBkB,EAArB,KACA,EAA4Bpe,mBAAS,CAAC,GAAtC,mBAAOsV,EAAP,KAAeC,EAAf,KACA,EAA8CvV,mBAAS,IAAvD,mBAAOwV,EAAP,KAAwB/G,EAAxB,KACA,EAA8BzO,oBAAS,GAAvC,mBAAgBE,GAAhB,WACIuV,EAAI,eAAQH,GACVlJ,EAAUtE,KAGhB,EAA0C9H,mBAAS,CAAC,GAApD,mBAAO0V,EAAP,KAAsBC,EAAtB,KACA,EAA4B3V,oBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,GAA0C7S,mBAAS,IAAnD,qBAAOqe,GAAP,MAAsBzI,GAAtB,MACA,GAAgD5V,mBAAS,IAAzD,qBAAOse,GAAP,MAAyBzI,GAAzB,MACA,GAA4C7V,mBAAS,IAArD,qBAAO8V,GAAP,MAAuBC,GAAvB,MACA,GAAgC/V,mBAAS,IAAzC,qBAAiBgW,IAAjB,aACA,GAA8BhW,oBAAS,GAAvC,qBAAgBiW,IAAhB,aACA,GAAkDjW,mBAAS,CAAC,GAA5D,qBAA0ByW,IAA1B,aACA,GAA0DzW,oBAAS,GAAnE,qBAA8B2W,IAA9B,aAEA,GAAkC3W,mBAAS,CAAE4W,iBAAkB,GAAIC,gBAAiB,KAApF,qBAAO8G,GAAP,MAAkBD,GAAlB,MACA,GAA0C1d,mBAAS,IAAnD,qBAAO8W,GAAP,MAAsB8G,GAAtB,MAEA,GAA4B5d,mBAAS,CAAE+W,IAAK,GAAIC,aAAc,KAA9D,qBAAO+F,GAAP,MAAeD,GAAf,MACA,GAA8B9c,mBAAS,IAAvC,qBAAOiX,GAAP,MAAgBgG,GAAhB,MAEA,GAAwDjd,mBAAS,CACCkX,WAAY,GACZC,UAAW,GACX3X,OAAQ,GACR4X,SAAU,GACVC,MAAM,GACNC,YAAY,GACZC,gBAAgB,KAPlF,qBAAOC,GAAP,MAA6BC,GAA7B,MASA,GAAkCzX,mBAAS,CACzC8V,eAAgB,GAChB4B,QAAS,CAAC,EACVC,YAAa,GACbC,qBAAsB,CAAC,EACvBC,YAAa,GACbC,IAAK,GACLC,cAAe,GACfC,aAAc,GACdC,gBAAiB,GACjBvD,WAAY,EACZwD,mBAAoB,GACpBC,gBAAiB,GACjBC,gBAAiB,GACjBC,QAAS,GACTC,WAAY,GACZC,wBAAyB,CAAC,EAC1BjG,SAAUjO,EAAWsG,GACrB6N,SAAU,CAAC,EACXC,OAAQ,GACRC,WAAY,GACZC,KAAM,GACNC,UAAW,GACXC,aAAc,KAvBhB,qBAAOC,GAAP,MAAkBC,GAAlB,MAyBA,GAAiC/Y,mBAAS,CACxCkX,WAAY,GACZC,UAAW,GACX1C,cAAe,GACfC,WAAY,EACZlV,OAAQ,GACR8S,SAAUhV,EAAM+G,WAAWsG,GAC3BqO,cAAe,EACf5B,SAAU,GACVC,MAAM,GACNC,YAAY,GACZC,gBAAgB,KAXlB,qBAAO0B,GAAP,MAAcC,GAAd,MAaA,GAA0BlZ,mBAAS,CACjCmZ,aAAc,GACdC,SAAU,GACVC,WAAY,GACZC,WAAY,GACZC,MAAO,GACPC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,KARd,qBAAOC,GAAP,MAAcqE,GAAd,MAhF6B,wDA0G1B,wFACC9d,GAAW,GACXC,IACKrD,IADL,UACYsD,EADZ,qEACgF9C,EAAM+G,WAAWsG,IAC7F,CAAEtK,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GACHL,GAAW,GACXuO,EAAmBlO,EAASC,KAAKmN,QAAO,SAACzE,GAAD,OAAyB,IAAnBA,EAAEqV,cAAR,IAC3C,IACA9d,OAAM,SAACb,GACJM,GAAW,EACd,IAZN,4CA1G0B,sBA2F7BQ,qBAAU,YA3FmB,oCA4F3BkZ,GACAC,KA7F2B,oCA8F3BC,GACAC,KACAC,KACAC,KAjG2B,oCAkG3BuE,GAC4B,OAAzBlhB,EAAM2Q,cAActD,KAErB8T,GAAanhB,EAAM2Q,cAActD,IACjCsT,EAAW3gB,EAAM2Q,cAActD,IAElC,GAAE,IAiBH,IAAMqP,GAAa,WACjB7Z,IACGrD,IADH,UACUsD,EADV,qCAC8C9C,EAAM+G,WAAWsG,IAC3D,CAAEtK,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAEL,IAAM4Z,EAAiB5Z,EAASC,KAAKD,EAASC,KAAKiR,OAAS,GACxD0I,EAAe1F,gBAAkB9Q,KAAO,IAAI5C,MAAQ6C,OAAO,iBAAkB,IAC/E6S,GAAqB0D,GACrBxD,IAAyB,GAE5B,IACAlW,OAAM,SAACb,GAEP,GACJ,EAEOqa,GAAgB,WACpB9Z,IACGrD,IADH,UACUsD,EADV,gBAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GACL,IAAM6Z,EAAQ7Z,EAASC,KAAKmN,QAAO,SAACzE,GAAD,OAAMA,EAAEyB,KAAKrN,EAAM+G,WAAWsG,EAA9B,IAEnCgL,EAAiByE,EAAO,GACzB,IACA3Z,OAAM,SAACb,GAEP,GACJ,EAGGia,GAAa,WACjB1Z,IACGrD,IADH,UACUsD,EADV,0CAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAELqV,GAAiBrV,EAASC,KAC3B,IACAC,OAAM,SAACb,GAEP,GAEJ,EAGKma,GAAW,WACf5Z,IACGrD,IADH,UACUsD,EADV,qCAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAELyV,GAAYzV,EAASC,KACtB,IACAC,OAAM,SAACb,GAEP,GAEJ,EAxL4B,wDA0L7B,wFACEO,IACGrD,IADH,UACUsD,EADV,gDAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAELsV,GAAoBtV,EAASC,KAE9B,IACAC,OAAM,SAACb,GACP,IAXL,4CA1L6B,8EAwM7B,wFACEO,IACGrD,IADH,UACUsD,EADV,mDAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GACLwV,GAAkBxV,EAASC,KAE5B,IACAC,OAAM,SAACb,GACP,IAVL,4CAxM6B,sBAoN7B,IAAMya,GAAoB,SAAA9G,GACxBwF,GAAa,2BAAKD,IAAN,mBAAkBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,SACjC,iBAAlBwR,EAAE+G,OAAOvX,OACY,OAAnBwQ,EAAE+G,OAAOvY,MACXkU,IAAW,GAEXA,IAAW,GAGhB,EACKsE,GAAgC,SAAAhH,GACpC2F,GAAgB,2BAAKD,IAAN,mBAAc1F,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QACvD,EAhO4B,SAuXd0c,GAvXc,2FAuX7B,WAA4BC,GAA5B,2EACEve,IACGrD,IADH,UACUsD,EADV,gCACyCse,GACrC,CAAEre,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GACH,IAAMgT,EAAIhT,EAASC,KACnB0Y,GAAgB,eAAK3F,EAAEwH,eACvBjC,GAAUd,aAAezE,EAAEyE,aAC3Bc,GAAUZ,mBAAoB3E,EAAE2E,mBAChCY,GAAUD,aAActF,EAAEsF,aAC1BC,GAAUV,gBAAiB7E,EAAE6E,gBAC7BU,GAAUhD,eAAiBvC,EAAEuC,eAC7BkI,GAAS,eAAIzK,EAAEiF,WACfyE,GAAW,aAAI1J,EAAEqE,uBACjBgG,GAAiB,aAAIrK,EAAEgF,yBAE1B,IACA9X,OAAM,SAACb,GACP,IAnBL,4CAvX6B,sBAuZ7B,OACE,+BACI,uBAAK6I,UAAU,MAAf,UACI,sBAAKA,UAAU,8BAAf,SACI,uBAAKA,UAAU,OAAOjE,MAAO,CAAEhF,OAAQ,SAAvC,UACI,sBAAKiJ,UAAU,6BAA6BjE,MAAO,CAACC,gBAAgB,WAApE,SACA,qBAAIgE,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,8BAEA,sBAAK4I,UAAU,YAAf,SACA,eAAC,KAAD,CACIjE,MAAO,CAAEhF,OAAQ,SACjBmL,GAAG,aACHlC,UAAU,yCAHd,SAKC+M,EAAgB3S,KAAI,SAAC+X,EAAMtL,GAAP,OACrB,sBAAK7G,UAAU,mDAAf,SACE,sBAAKA,UAAU,aAAf,SACM,eAAC,KAAD,CACI5I,MAAM,QACN8e,QAAQ,aACRnT,KAAK,qBACLuC,QAAS,kBAhCjBwF,EAgCoCqH,EA/BtDuD,GAAsB,GACtBF,EAAW1K,EAAE5I,SACb8T,GAAalL,EAAE5I,IAHE,IAAC4I,CAgCiB,EACTe,MAAO,CAAEsK,OAAO,EAAM/e,MAAO,OAAQgf,SAAU,OAAQF,QAAQ,GAAD,OAAK/D,EAAMhC,iBAPdtJ,EADlD,aAkB7B,sBAAK7G,UAAU,8BAAf,SACI,uBAAKA,UAAU,OAAf,UACI,uBAAKA,UAAU,6BAA6BjE,MAAO,CAACC,gBAAgB,WAApE,UACA,qBAAIgE,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,eACCqe,GACD,gBAAC,KAAD,CAAYre,MAAM,WAAWkO,QAAS,WAzCpDqQ,GAAgB,EAyCoC,EAAtC,UACE,eAAChB,GAAA,EAAD,CAAMra,KAAK,SADb,oBAKA,sBAAK0F,UAAU,YAAf,SACA,eAAC+R,GAAA,EAAD,CAAMtY,QAAQ,QAAd,SACA,eAACsY,GAAA,EAAKC,OAAN,UACA,gBAACC,GAAA,EAAD,WACA,eAAC5W,GAAA,EAAD,CAAOuM,GAAG,IAAIxQ,MAAM,QAAQ2E,MAAO,CAACtF,MAAM,OAAQM,OAAO,QAASmb,QAAM,EAAxE,SACI,sBAAInW,MAAO,CAAC3E,MAAM,QAAlB,2BAA0CoZ,GAAMxE,mBAEhD,uBAAKhM,UAAU,MAAf,UACA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,8BACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,gBACL4H,GAAG,gBACH5I,MAAOkX,GAAMxE,cACbjQ,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClD+K,SAAUyF,GACViB,IAAK7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAC/BqY,UAAWiB,EACX7J,UAAQ,IAEa,KAAxBiC,EAAOb,cACJ,uBAAMhM,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOb,gBACxC,QAIR,sBAAKhM,UAAU,6BAGf,uBAAKA,UAAU,MAAf,UACJ,sBAAKA,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,oBACA,gBAACwI,GAAA,EAAD,WACI,eAACvI,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,QACL4H,GAAG,QACHmK,SAAUyF,GACVe,IAAI,KACJE,IAAI,MACJzZ,MAAOkX,GAAM5B,MACbuE,QArNI,SAACrI,GACjC,GAAmB,UAAhBA,EAAE+G,OAAOvX,OAAmBwQ,EAAE+G,OAAOvY,MAAQ,IAAMwR,EAAE+G,OAAOvY,MAAM,KAAK,CAE1E0V,GAAwB,2BAAID,IAAL,IAA2BH,MADnC,wDAEd,MACDI,GAAwB,2BAAID,IAAL,IAA2BH,MAAM,KAE3D,EA+M+B7S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,eAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,oBAI2B,KAA9ByN,GAAqBH,MACd,uBAAM5O,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBH,QAC1D,GACa,KAAhB/B,EAAO+B,MACJ,uBAAM5O,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO+B,QACxC,QAGR,sBAAK5O,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,gCACA,gBAACwI,GAAA,EAAD,WACI,eAACvI,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,kBACL4H,GAAG,kBACHmK,SAAUyF,GACVe,IAAI,KACJE,IAAI,KACJzZ,MAAOkX,GAAM1B,gBACbqE,QAxOY,SAACrI,GACzC,GAAmB,oBAAhBA,EAAE+G,OAAOvX,OAA6BwQ,EAAE+G,OAAOvY,MAAQ,IAAMwR,EAAE+G,OAAOvY,MAAM,IAAI,CAEnF0V,GAAwB,2BAAID,IAAL,IAA2BD,gBADnC,kEAEd,MACDE,GAAwB,2BAAID,IAAL,IAA2BD,gBAAgB,KAErE,EAkO+B/S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,eAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,oBAIqC,KAAxCyN,GAAqBD,gBACd,uBAAM9O,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBD,kBAC1D,GACuB,KAA1BjC,EAAOiC,gBACJ,uBAAM9O,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOiC,kBACxC,QAGR,sBAAK9O,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,gBAACwI,GAAA,EAAD,WACI,eAACvI,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,cACL4H,GAAG,cACHmK,SAAUyF,GACVe,IAAI,KACJE,IAAI,KACJzZ,MAAOkX,GAAM3B,YACbsE,QA3PQ,SAACrI,GACrC,GAAmB,gBAAhBA,EAAE+G,OAAOvX,OAAyBwQ,EAAE+G,OAAOvY,MAAQ,IAAMwR,EAAE+G,OAAOvY,MAAM,IAAI,CAE/E0V,GAAwB,2BAAID,IAAL,IAA2BF,YADnC,6DAEd,MACDG,GAAwB,2BAAID,IAAL,IAA2BF,YAAY,KAEjE,EAqP+B9S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,gBAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,UACI,qCADJ,UAIiC,KAApCyN,GAAqBF,YACd,uBAAM7O,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBF,cAC1D,GACmB,KAAtBhC,EAAOgC,YACJ,uBAAM7O,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOgC,cACxC,QAIR,sBAAK7O,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,gBAACwI,GAAA,EAAD,WACI,eAACvI,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACHmK,SAAUyF,GACVe,IAAI,IACJE,IAAI,MACJzZ,MAAOkX,GAAM/B,WACb0E,QA/TS,SAACrI,GACtC,GAAmB,eAAhBA,EAAE+G,OAAOvX,OAAwBwQ,EAAE+G,OAAOvY,MAAQ,GAAKwR,EAAE+G,OAAOvY,MAAM,KAAK,CAE5E0V,GAAwB,2BAAID,IAAL,IAA2BN,WADnC,6DAEhB,MACCO,GAAwB,2BAAID,IAAL,IAA2BN,WAAW,KAEhE,EAyT6B1S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,eAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,mBAIgC,KAAnCyN,GAAqBN,WACd,uBAAMzO,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBN,aAC1D,GACkB,KAArB5B,EAAO4B,WACJ,uBAAMzO,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO4B,aACxC,QAGR,sBAAKzO,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,qBACA,gBAACwI,GAAA,EAAD,WACA,eAACE,GAAA,EAAD,CACQC,UAAU,SACVC,OAAQ5G,EACRlC,OAAQoC,EACR7Q,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAJpG,gBAQI,eAACqJ,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,SACL4H,GAAG,SACHmK,SAAUyF,GACVxY,MAAOkX,GAAMzZ,OACb8b,IAAI,QACJE,IAAI,UACJI,QA1WK,SAACrI,GAClC,GAAmB,WAAhBA,EAAE+G,OAAOvX,OAAoBwQ,EAAE+G,OAAOvY,MAAQ,OAASwR,EAAE+G,OAAOvY,MAAM,SAAS,CAEhF0V,GAAwB,2BAAID,IAAL,IAA2BhY,OADnC,8DAEhB,MACCiY,GAAwB,2BAAID,IAAL,IAA2BhY,OAAO,KAE5D,EAoW6BgF,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAElD,eAAC8R,GAAA,EAAD,CACAC,UAAU,SACVC,OAAQ5G,EACRlC,OAAQoC,EACR7Q,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAJ5F,SAMgB,KAAfkP,GAAMzZ,QAAeyZ,GAAMzZ,OAAO,KAAKwc,QAAQ,GAAK,IAAM,SAGnC,KAA/BxE,GAAqBhY,OAClB,uBAAMiJ,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBhY,SACtD,GACc,KAAjB8V,EAAO9V,OACJ,uBAAMiJ,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO9V,SACxC,QAGR,sBAAKiJ,UAAU,gCAAf,SACwB,KAAnBwQ,GAAM/B,YAAkC,KAAf+B,GAAMzZ,QAC5B,gBAAC2T,GAAA,EAAD,WACA,gBAACrP,GAAA,EAAD,eAAU,OACV,eAAC6X,GAAA,EAAD,UACA,gBAACE,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,mBACWoR,KAAKC,MAAMnC,GAAM/B,YAAa+B,GAAMzZ,OAASyZ,GAAMzZ,OAAQ,mBAQpF,sBAAKiJ,UAAU,MAAf,SACA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,gBAACwI,GAAA,EAAD,WACA,eAACE,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,4BAGI,eAACqJ,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,WACL4H,GAAG,WACH2Q,IAAI,KACJE,IAAI,MACJ1G,SAAUyF,GACVxY,MAAOkX,GAAM7B,SACbwE,QA5Ya,SAACrI,GACpC,GAAmB,aAAhBA,EAAE+G,OAAOvX,OAAsBwQ,EAAE+G,OAAOvY,MAAQ,IAAMwR,EAAE+G,OAAOvY,MAAM,KAAK,CAE3E0V,GAAwB,2BAAID,IAAL,IAA2BJ,SADnC,0EAEhB,MACCK,GAAwB,2BAAID,IAAL,IAA2BJ,SAAS,KAE9D,EAsYuB5S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,eAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,6BAGI,eAACqJ,GAAA,EAAD,CACAtR,KAAK,SACLiB,KAAK,YACL4H,GAAG,YACH2Q,IAAK,EACLE,IAAK,IACL1G,SAAUyF,GACVxY,MAAOkX,GAAM9B,UACbyE,QAlZc,SAACrI,GACrC,GAAmB,cAAhBA,EAAE+G,OAAOvX,OAAuBwQ,EAAE+G,OAAOvY,MAAQ,IAAMwR,EAAE+G,OAAOvY,MAAM,KAAK,CAE5E0V,GAAwB,2BAAID,IAAL,IAA2BL,UADnC,2EAEhB,MACCM,GAAwB,2BAAID,IAAL,IAA2BL,UAAU,KAE/D,EA4YuB3S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,aAKxB,KAAjCyN,GAAqBJ,SACtB,uBAAM3O,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBJ,WAClD,GACgB,KAAnB9B,EAAO8B,SACJ,uBAAM3O,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO8B,WACxC,GAC+B,KAAlCI,GAAqBL,UACtB,uBAAM1O,UAAW2D,EAAQxM,MAAzB,SAAiC4X,GAAqBL,YAClD,GACiB,KAApB7B,EAAO6B,UACJ,uBAAM1O,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO6B,YACxC,aAME,eAACrT,GAAA,EAAD,CAAOuM,GAAG,IAAIxQ,MAAM,OAAO2E,MAAO,CAACtF,MAAM,OAAQM,OAAO,QAASmb,QAAM,EAAvE,SACA,qBAAInW,MAAO,CAAC3E,MAAM,QAAlB,4BAEA,wBAAM,wBAEN,uBAAK4I,UAAU,QAAf,UACA,eAAC,KAAD,6BACA,2BACI1F,KAAK,eACL0F,UAAU,eACV1G,MAAO+W,GAAUd,aACjBlD,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAWiB,IAES,KAAvB5H,EAAO0C,aACA,uBAAMvP,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO0C,eACxC,MAER,uBAAKvP,UAAU,MAAf,UAEA,sBAAKA,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,4BACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAO+W,GAAUD,aACjB/D,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAWiB,EACX7J,UAAQ,EARZ,UAUI,yBAAQtR,MAAM,SAAd,qBAECsc,GAAcxb,KAAI,SAACd,GAAD,OACnB,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADA,OAMC,KAAvB2K,EAAOuD,aACJ,uBAAMpQ,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOuD,eACxC,QAGR,sBAAKpQ,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,kCACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,qBACL4H,GAAG,qBACH5I,MAAO+W,GAAUZ,mBACjBpD,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAWiB,EACX7J,UAAQ,EARZ,UAUI,yBAAQtR,MAAM,SAAd,qBAECuc,GAAiBzb,KAAI,SAACd,GAAD,OACtB,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADG,OAMI,KAA7B2K,EAAO4C,mBACJ,uBAAMzP,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO4C,qBACxC,QAGR,sBAAKzP,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,iBACL4H,GAAG,iBACH5I,MAAO+W,GAAUhD,eACjBhB,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDkS,UAAWiB,EACX7J,UAAQ,EARZ,UAUI,yBAAQtR,MAAM,GAAd,qBAEC+T,GAAejT,KAAI,SAACd,GAAD,OACpB,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADC,OAME,KAAzB2K,EAAOQ,eACJ,uBAAMrN,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOQ,iBACxC,WAKR,wBACA,eAAChS,GAAA,EAAD,CAAOuM,GAAG,IAAIxQ,MAAM,MAAM2E,MAAO,CAACtF,MAAM,OAAQM,OAAO,QAASmb,QAAM,EAAtE,SACA,qBAAInW,MAAO,CAAC3E,MAAM,QAAlB,uCAEA,wBAAM,wBACN,eAAC,GAAD,CAAwB6d,aAAcA,GAAcC,UAAWA,GAAWC,iBAAkBA,GAAkB9G,cAAeA,GAAeoG,aAAcA,IAC1J,wBACA,eAACpZ,GAAA,EAAD,CAAOuM,GAAG,IAAIxQ,MAAM,OAAO2E,MAAO,CAACtF,MAAM,OAAQM,OAAO,QAASmb,QAAM,EAAvE,SACA,qBAAInW,MAAO,CAAC3E,MAAM,QAAlB,mBAEA,wBAAM,wBACN,eAAC,GAAD,CAAKid,UAAWA,GAAWC,OAAQA,GAAQE,WAAYA,GAAYhG,QAASA,GAAUiG,aAAcA,IACpG,wBACA,eAACpZ,GAAA,EAAD,CAAOuM,GAAG,IAAIxQ,MAAM,OAAO2E,MAAO,CAACtF,MAAM,OAAQM,OAAO,QAASmb,QAAM,EAAvE,SACA,qBAAInW,MAAO,CAAC3E,MAAM,QAAlB,4BAEA,wBAAM,wBAEN,eAAC,GAAD,CAAa8Z,MAAOA,GAAOqE,SAAUA,GAAUd,aAAcA,IAC7D,wBACA,eAACpZ,GAAA,EAAD,CAAOuM,GAAG,IAAIxQ,MAAM,OAAO2E,MAAO,CAACtF,MAAM,OAAQM,OAAO,QAASmb,QAAM,EAAvE,SACA,qBAAInW,MAAO,CAAC3E,MAAM,QAAlB,8CAEA,wBAAM,wBAEN,eAACuT,GAAA,EAAD,CACQtR,KAAK,OACLiB,KAAK,kBACL4H,GAAG,kBACHlC,UAAU,WACV1G,MAAO+W,GAAUV,gBACjBtD,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,WAClDuR,IAAK3X,KAAO,IAAI5C,MAAQ6C,OAAO,cAC/BqY,UAAWiB,EACX7J,UAAQ,IAEW,KAA1BiC,EAAO8C,gBACA,uBAAM3P,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO8C,kBACxC,GACR,wBACA,eAAC,KAAD,CACAtW,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,EAAQ3M,OACnBwc,SAAUrJ,EACVzI,UAAW,eAAC,KAAD,IACX3F,MAAO,CAACC,gBAAgB,WACxBsJ,QA3fD,SAACwF,GACpBA,EAAEC,iBAnCFiC,EAAKhB,cAAgBwE,GAAMxE,cAAgB,GAAK,yBAChDgB,EAAK2C,gBAAkBU,GAAUV,gBAAkB,GAAK,yBACxD3C,EAAKoD,aAAeC,GAAUD,aAAe,GAAK,yBAClDpD,EAAKuC,aAAec,GAAUd,aAAe,GAAK,yBAClDvC,EAAKyC,mBAAqBY,GAAUZ,mBAAqB,GAAK,yBAC9DzC,EAAKK,eAAiBgD,GAAUhD,eAAiB,GAAK,yBACtDL,EAAKyG,eAAiBjD,GAAM9B,UAAY,GAAK,yBAC7C1B,EAAK2B,SAAW6B,GAAM7B,SAAW,GAAK,yBACtC3B,EAAKjW,OAASyZ,GAAMzZ,OAAS,GAAK,yBAClCiW,EAAKyB,WAAa+B,GAAM/B,WAAa,GAAK,yBAC1C3B,EAAU,eACHE,IAEArB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,MAwBlC2J,GAAU,GACViG,GAAUF,UAAYK,GAAMxE,cAC5BqE,GAAUlB,qBAAuBX,GACjC6B,GAAUjB,YAAcnC,EAAc6F,YAAY5Q,GAClDmO,GAAUX,gBAAkBzC,EAAc2G,WAAW1R,GACrDmO,GAAUP,wBAA0BzB,GACpCgC,GAAUN,SAAWmB,GACrBb,GAAS,aAAmBG,GAC5B9Y,IAAM2e,IAAN,UAAa1e,EAAb,gCAA4CwU,GAAWkE,GACrD,CAAEzY,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAGvC6D,MAAK,SAAAC,GACJsS,GAAU,GACVxB,IAAMtR,QAAQ,kCAGf,IACAU,OAAM,SAAAb,GAEL,GADAiT,GAAU,GACPjT,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACvC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACvIH,IAAMzR,MAAM0R,EACb,MAECD,IAAMzR,MAAM,4CAGf,IAEJ,EA2dqBmf,QAAS7B,EATT,SAWEtK,EAGE,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,yBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,wCAgB3B,EC35Bc4U,GAdY,SAAC1hB,GAC1B,IAAM+G,EAAa/G,EAAM+G,WAAa/G,EAAM+G,WAAa,CAAC,EAE1D,OACE,+BACK,sBAAKoE,UAAU,MAAf,SAEO,eAACwW,GAAD,CAAkB5a,WAAYA,EAAY4J,cAAe3Q,EAAM2Q,mBAK9E,ECbKnE,GAAW,CACfC,aAAc,MACdjK,SAAU,IA4CGof,GAzCS,SAAC5hB,GACrB,MAAsB0C,mBAAS,QAA/B,mBAAOiK,EAAP,KAAYC,EAAZ,KACM7F,EAAa/G,EAAM+G,WAO3B,OALE3D,qBAAY,WACVwJ,EAAO5M,EAAM2Q,cAAc+B,UAC5B,GAAE,CAAC1S,EAAM2Q,cAActD,KAIxB,eAAC,WAAD,UACE,eAACN,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,eAACC,EAAA,EAAD,CAAMhG,MAAOsF,GAAb,SACE,eAACU,EAAA,EAAKC,KAAN,UAEE,sBAAKhC,UAAU,eAAf,SACE,gBAACiC,EAAA,EAAD,CACIC,GAAG,yBACHC,UAAWX,EACXY,SAAU,SAACC,GAAD,OAAOZ,EAAOY,EAAd,EACVrC,UAAU,OAJd,UAOE,eAACsC,EAAA,EAAD,CAAKC,SAAS,OAAO/I,MAAM,gBAA3B,SACE,eAAC,GAAD,CAAkBoC,WAAYA,EAAY2J,iBAAkB1Q,EAAM0Q,qBAEpE,eAACjD,EAAA,EAAD,CAAKC,SAAS,UAAU/I,MAAM,WAA9B,SACE,eAACkd,GAAD,CAAmB9a,WAAYA,EAAY4J,cAAe3Q,EAAM2Q,cAAeD,iBAAkB1Q,EAAM0Q,mCAW1H,EC5BKlG,I,OAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF0f,SAAU,EACV,gBAAgB,CACZvf,MAAM,OACN8E,WAAW,QAEf,kBAAkB,CACdoF,aAAa,UACbvK,OAAO,QAEX,6BAA8B,CAC1BuK,aAAc,+CAElB,4BAA6B,CACzBjL,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN8E,WAAW,SAGnBhF,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QA7DgB,KAifnBuf,GAhbc,SAAC/hB,GAE1B,IAAM+G,EAAa/G,EAAM+G,WACzBsI,QAAQC,IAAItP,GACEuR,cAAd,IACMzC,EAAUtE,KAChB,EAAkC9H,mBAAS,CACvCsf,+BAAgC,GAChCC,cAAe,GACf/f,OAAQ,GACR8S,SAAUjO,EAAWiO,SACrBkN,aAAcliB,EAAMmiB,OACpBC,UAAW,GACXC,iBAAkB,GAClBC,oBAAoB,GACpBC,OAAO,GACPC,cAAc,GACdC,SAAS,GACTC,aAAa,GACbC,MAAO,CAAC,EACR7H,gBAAiB,GACjB8H,UAAU,EACVC,mBAAoB,KAhBxB,mBAAOrH,EAAP,KAAkBC,EAAlB,KAmBA,EAA4B/Y,oBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAA4B7S,mBAAS,CAAC,GAAtC,mBAAOsV,EAAP,KAAeC,EAAf,KACA,EAAgCvV,mBAAS,IAAzC,mBAAOkgB,EAAP,KAAiBE,EAAjB,KACA,EAAkCpgB,mBAAS,IAA3C,mBAEA,GAFA,UAEoCA,oBAAS,IAA7C,mBAEA,GAFA,UAEoCA,sBAApC,mBAAOqgB,EAAP,KAAmBC,EAAnB,KAEA5f,qBAAU,WACN6f,IACAC,GACH,GAAE,IACH,IAAMD,EAAkB,WACpBpgB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH6f,EAAY7f,EAASC,KACxB,IACAC,OAAM,SAACb,GAEP,GACJ,EACK4gB,EAAkB,WACpBrgB,IACIrD,IADJ,UACWsD,EADX,yCACmD9C,EAAM+G,WAAWiO,UAC7D,CAAEjS,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH+f,EAAc/f,EAASC,KAC1B,IACAC,OAAM,SAACb,GAEP,GACP,EAED,EAAwDI,mBAAS,CAC7DkX,WAAY,GACZ1X,OAAQ,KAFZ,mBAAOgY,EAAP,KAA6BC,EAA7B,KAIM4C,EAAoB,SAAA9G,GAEtBwF,EAAY,2BAAMD,GAAN,mBAAmBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAC3D,EAgEH,OACM,+BACI,eAAC,KAAD,CAAM0G,UAAW2D,EAAQ1M,KAAzB,SACI,eAACgJ,GAAA,EAAD,UACA,kCACI,uBAAKD,UAAU,MAAf,UACI,sDACA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,mDACA,eAACrN,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,iCACL4H,GAAG,iCACH2Q,IAAK+E,GAAcA,EAAWK,aAAcL,EAAWK,aAAc,GACrElF,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChC7B,MAAO+W,EAAUwG,+BACjBxK,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAEZ,KAAzCuL,EAAOgK,+BACJ,uBAAM7W,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOgK,iCACxC,QAGR,sBAAK7W,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,kCACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,gBACL4H,GAAG,gBACH2Q,IAAK+E,GAAcA,EAAWK,aAAcL,EAAWK,aAAc,GACrElF,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChC7B,MAAO+W,EAAU6H,mBACjB7L,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAE5B,KAAxBuL,EAAOiK,cACL,uBAAM9W,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOiK,gBACxC,WAMZ,uBAAK9W,UAAU,MAAf,UACI,sBAAKA,UAAU,iBAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,gBAACwI,GAAA,EAAD,WACI,eAACvI,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,SACL4H,GAAG,SACHmK,SAAUuF,EACViB,IAAI,IACJE,IAAI,MACJzZ,MAAO+W,EAAU+G,OACjBjE,QApGO,SAACrI,GACpC,GAAmB,eAAhBA,EAAE+G,OAAOvX,OAAwBwQ,EAAE+G,OAAOvY,MAAQ,GAAKwR,EAAE+G,OAAOvY,MAAM,KAAK,CAE9E0V,EAAwB,2BAAID,GAAL,IAA2BN,WADnC,6DAEd,MACDO,EAAwB,2BAAID,GAAL,IAA2BN,WAAW,KAEhE,EA8F+B1S,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAEtD,eAAC8R,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,mBAIgC,KAAnCyN,EAAqBN,WACd,uBAAMzO,UAAW2D,EAAQxM,MAAzB,SAAiC4X,EAAqBN,aAC1D,GACc,KAAjB5B,EAAOuK,OACJ,uBAAMpX,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOuK,SACxC,QAGR,sBAAKpX,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,qBACA,gBAACwI,GAAA,EAAD,WACA,eAACE,GAAA,EAAD,CACQC,UAAU,SACVtX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAFpG,gBAMI,eAACqJ,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,SACL4H,GAAG,SACHmK,SAAUuF,EACVtY,MAAO+W,EAAUtZ,OACjB8b,IAAI,QACJE,IAAI,UACJI,QA7IG,SAACrI,GAChC,GAAmB,WAAhBA,EAAE+G,OAAOvX,OAAoBwQ,EAAE+G,OAAOvY,MAAQ,OAASwR,EAAE+G,OAAOvY,MAAM,SAAS,CAElF0V,EAAwB,2BAAID,GAAL,IAA2BhY,OADnC,8DAEd,MACDiY,EAAwB,2BAAID,GAAL,IAA2BhY,OAAO,KAE5D,EAuI+BgF,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAElD,eAAC8R,GAAA,EAAD,CACAC,UAAU,SAEVtX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAH5F,SAKoB,KAAnB+O,EAAUtZ,QAAesZ,EAAUtZ,OAAO,KAAKwc,QAAQ,GAAK,IAAM,SAG3C,KAA/BxE,EAAqBhY,OAClB,uBAAMiJ,UAAW2D,EAAQxM,MAAzB,SAAiC4X,EAAqBhY,SACtD,GACc,KAAjB8V,EAAO9V,OACJ,uBAAMiJ,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO9V,SACxC,QAGR,sBAAKiJ,UAAU,gCAAf,SACwB,KAAnBqQ,EAAU+G,QAAkC,KAAnB/G,EAAUtZ,QAChC,gBAAC2T,GAAA,EAAD,WACA,gBAAC,KAAD,eAAU,OACV,eAACwI,GAAA,EAAD,UACA,gBAACE,GAAA,EAAD,CAAgBC,UAAU,SAAStX,MAAO,CAAEC,gBAAgB,UAAW5E,MAAM,OAAQwb,OAAQ,oBAAqBtR,aAAa,QAA/H,mBACWoR,KAAKC,MAAMtC,EAAU+G,QAAS/G,EAAUtZ,OAASsZ,EAAUtZ,OAAQ,gBAO5C,WAAzClC,EAAM+G,WAAWrB,kBAAkBO,KAA4D,WAAzCjG,EAAM+G,WAAWrB,kBAAkBO,KAA2D,WAAzCjG,EAAM+G,WAAWrB,kBAAkBO,KAC/I,sBAAKkF,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,GAAX,8BACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,WACL4H,GAAG,WACHmK,SAAUuF,EACVtY,MAAO+W,EAAUoH,SALrB,UAQA,yBAAQne,MAAM,IAAd,eACCme,EAASrd,KAAI,SAACd,GAAD,OACV,yBAAuBA,MAAOA,EAAM6e,KAApC,SACK7e,EAAMjD,SADEiD,EAAM4I,GADT,YAWQ,mCAArBmO,EAAUoH,UACX,sBAAKzX,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,GAAX,4BACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,gBACL4H,GAAG,gBACHmK,SAAUuF,EACVtY,MAAO+W,EAAU+H,cALrB,UAQA,yBAAQ9e,MAAM,GAAd,qBACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAOA,sBAAK0G,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,GAAX,uCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,WACLiB,KAAK,gBACL4H,GAAG,gBACHmK,SAAUuF,EACVtY,MAAO+W,EAAUgH,qBAOrB,sBAAKrX,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,GAAX,+BACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,mBACL4H,GAAG,mBACHmK,SAAUuF,EACVtY,MAAO+W,EAAU6G,wBAMrB,sBAAKlX,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,GAAX,sBACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,WACL4H,GAAG,WACHmK,SAAUuF,EACVtY,MAAO+W,EAAUiH,SALrB,UAQA,yBAAQhe,MAAM,GAAd,eACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,oBAEoB,KAAnBuT,EAAOyK,SACA,uBAAMtX,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOyK,WACxC,QAIR,sBAAKtX,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,GAAX,2BACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,eACL4H,GAAG,eACHmK,SAAUuF,EACVtY,MAAO+W,EAAUkH,aACjBxE,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,gBAEZ,KAAvB0R,EAAO0K,aACA,uBAAMvX,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO0K,eACxC,QAIR,sBAAKvX,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,GAAX,0BACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,YACL4H,GAAG,YACHmK,SAAUuF,EACVtY,MAAO+W,EAAU4G,UALrB,UAQA,yBAAQ3d,MAAM,IAAd,0BACA,yBAAQA,MAAM,KAAd,yBACA,yBAAQA,MAAM,KAAd,0BACA,yBAAQA,MAAM,KAAd,4BAGqB,KAApBuT,EAAOoK,UACA,uBAAMjX,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOoK,YACxC,WAMX9M,EAAS,eAACU,GAAA,EAAD,IAAc,GACxB,wBAEA,eAAC,KAAD,CACIxR,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QA9SC,SAACwF,GAClBA,EAAEC,iBAjCW,WACb,IAAIiC,EAAI,eAAQH,GAWhB,OAVAG,EAAK6J,+BAAiCxG,EAAUwG,+BAAiC,GAAK,yBACtF7J,EAAK8J,cAAgBzG,EAAUyG,cAAgB,GAAK,yBACpD9J,EAAKiK,UAAY5G,EAAU4G,UAAY,GAAK,yBAC5CjK,EAAKjW,OAASsZ,EAAUtZ,OAAS,GAAK,yBACtCiW,EAAKoK,OAAS/G,EAAU+G,OAAS,GAAK,yBACtCpK,EAAKsK,SAAWjH,EAAUiH,SAAW,GAAK,yBAC1CtK,EAAKuK,aAAelH,EAAUkH,aAAe,GAAK,yBAClDzK,EAAU,eACHE,IAEArB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,GACrC,CAqBM4X,KACAjO,GAAU,GACViG,EAAUqH,mBAAmBE,EAAW1H,KACzCxY,IAAMsT,KAAN,UAAcrT,EAAd,qBAAyC0Y,EACxC,CAAEzY,QAAS,CAAC,+BAA4B5D,MACvC6D,MAAK,SAAAC,GACCsS,GAAU,GACVvV,EAAM+G,WAAW+J,WAAU,EAC3BiD,IAAMtR,QAAQ,yBAA0B,CAACyS,SAAUnB,IAAM0P,SAASC,gBAClE1jB,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,mBAEzD,IACAzN,OAAM,SAAAb,GAEH,GADAiT,GAAU,GACPjT,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACvC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACpI5R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,SAAgB5R,EAAMW,SAASC,KAAK+Q,UAAgE,KAApD3R,EAAMW,SAASC,KAAK+Q,SAAS0P,UAAU,GAAGzP,QACxJH,IAAMzR,MAAMA,EAAMW,SAASC,KAAK+Q,SAASC,QAAU,MAAQ5R,EAAMW,SAASC,KAAK+Q,SAAS0P,UAAU,GAAG9e,MAAQ,IAAMvC,EAAMW,SAASC,KAAK+Q,SAAS0P,UAAU,GAAGzP,QAAS,CAACgB,SAAUnB,IAAM0P,SAASC,gBAEhM3P,IAAMzR,MAAM0R,EAAc,CAACkB,SAAUnB,IAAM0P,SAASC,eAEzD,MACG3P,IAAMzR,MAAM,4CAA6C,CAAC4S,SAAUnB,IAAM0P,SAASC,eAExF,IAEV,EA4Qe,SAQMpO,EAGF,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,uBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,oBAMR,eAAC,KAAD,CACI7F,QAAQ,YACRkE,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAASzQ,EAAM2V,OAJnB,SAOI,uBAAMzO,MAAO,CAAE4F,cAAe,cAA9B,8BAQnB,EChfKtC,GAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF0f,SAAU,EACV,gBAAgB,CACZvf,MAAM,OACN8E,WAAW,QAEf,kBAAkB,CACdoF,aAAa,UACbvK,OAAO,QAEX,6BAA8B,CAC1BuK,aAAc,+CAElB,4BAA6B,CACzBjL,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN8E,WAAW,SAGnBhF,MAAO,CACHb,QAAS,QArDiB,IAkTnBoiB,GAzPqB,SAAC5jB,GAEjC,IAAM+G,EAAa/G,EAAM+G,WAEnB+H,GADQyC,cACE/G,MAChB,EAAkC9H,mBAAS,CACvCmhB,iBAAkB,GAClBC,IAAK,GACLC,iBAAkB,GAClBC,gCAAiC,GACjChP,SAAUjO,EAAWsG,GACrB6U,aAAcliB,EAAMmiB,SANxB,mBAAO3G,EAAP,KAAkBC,EAAlB,KAQA,EAA4B/Y,oBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAA4B7S,mBAAS,CAAC,GAAtC,6BAEAU,qBAAU,WAEP,GAAE,IACL,IAAM2Z,EAAoB,SAAA9G,GACtBwF,EAAY,2BAAMD,GAAN,mBAAmBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAE3D,EAyCH,OACI,+BACE,eAAC,KAAD,CAAM0G,UAAW2D,EAAQ1M,KAAzB,SACI,eAACgJ,GAAA,EAAD,UACA,kCACI,uBAAKD,UAAU,MAAf,UACI,yEACA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,iCACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,mBACL4H,GAAG,mBACHmK,SAAUuF,EACVtY,MAAO+W,EAAUuI,iBACjBhO,UAAQ,EANZ,UAQC,yBAAQtR,MAAM,GAAd,oBACD,yBAAQA,MAAM,UAAd,qBACA,yBAAQA,MAAM,UAAd,qBACA,yBAAQA,MAAM,UAAd,6BAIJ,sBAAK0G,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,mCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,mBACL4H,GAAG,mBACH6Q,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChCkR,SAAUuF,EACVtY,MAAO+W,EAAUqI,iBACjB9N,UAAQ,SAKhB,sBAAK5K,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,0CACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,mBACL4H,GAAG,mBACH6Q,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChCkR,SAAUuF,EACVtY,MAAO+W,EAAUqI,iBACjB9N,UAAQ,SAKhB,sBAAK5K,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,mCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,mBACL4H,GAAG,mBACH6Q,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChCkR,SAAUuF,EACVtY,MAAO+W,EAAUqI,iBACjB9N,UAAQ,SAKhB,sBAAK5K,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,kCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,mBACL4H,GAAG,mBACH6Q,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChCkR,SAAUuF,EACVtY,MAAO+W,EAAUqI,iBACjB9N,UAAQ,SAKhB,sBAAK5K,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,4BACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,mBACL4H,GAAG,mBACH6Q,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChCkR,SAAUuF,EACVtY,MAAO+W,EAAUqI,iBACjB9N,UAAQ,SAKhB,sBAAK5K,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,2CACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,mBACL4H,GAAG,mBACH6Q,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChCkR,SAAUuF,EACVtY,MAAO+W,EAAUqI,iBACjB9N,UAAQ,SAoBhB,sBAAK5K,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,2DACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,kCACL4H,GAAG,kCAEH6Q,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChC7B,MAAO+W,EAAUwI,gCACjBxM,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,oBAS7D6I,EAAS,eAACU,GAAA,EAAD,IAAc,GACxB,wBAEA,eAAC,KAAD,CACIxR,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QA7LK,SAACwF,GAClBA,EAAEC,iBAEAX,GAAU,GACV1S,IAAM2e,IAAN,UAAa1e,EAAb,gBAA4B9C,EAAMmiB,OAAlC,iCAAwE3G,EACvE,CAAEzY,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAAAC,GACCsS,GAAU,GACVxB,IAAMtR,QAAQ,0BACdzC,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,mBAEzD,IACAzN,OAAM,SAAAb,GAEH,GADAiT,GAAU,GACPjT,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACvC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACpI5R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,SAAgB5R,EAAMW,SAASC,KAAK+Q,UAAgE,KAApD3R,EAAMW,SAASC,KAAK+Q,SAAS0P,UAAU,GAAGzP,QACxJH,IAAMzR,MAAMA,EAAMW,SAASC,KAAK+Q,SAASC,QAAU,MAAQ5R,EAAMW,SAASC,KAAK+Q,SAAS0P,UAAU,GAAG9e,MAAQ,IAAMvC,EAAMW,SAASC,KAAK+Q,SAAS0P,UAAU,GAAGzP,QAAS,CAACgB,SAAUnB,IAAM0P,SAASC,gBAEhM3P,IAAMzR,MAAM0R,EAAc,CAACkB,SAAUnB,IAAM0P,SAASC,eAEzD,MACG3P,IAAMzR,MAAM,4CAA6C,CAAC4S,SAAUnB,IAAM0P,SAASC,eAExF,GAEV,EA4JW,SAQMpO,EAGF,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,uBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,oBAMJ,eAAC,KAAD,CACI7F,QAAQ,YACRkE,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAASzQ,EAAM2V,OAJnB,SAOI,uBAAMzO,MAAO,CAAE4F,cAAe,cAA9B,8BAQnB,E,oBC9SKtC,GAAYrJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,IAE1B,gBAAgB,CACZgB,MAAM,OACN8E,WAAW,QAEf,kBAAkB,CACdoF,aAAa,UACbvK,OAAO,QAEX,6BAA8B,CAC1BuK,aAAc,+CAElB,4BAA6B,CACzBjL,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN8E,WAAW,SAGnB4c,KAAM,CACF9c,gBAAiB/F,EAAM4M,QAAQkW,WAAWC,SAE9CC,OAAQ,CACJ5iB,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UA9DW,IA+xCd6hB,GA5tCG,SAACrkB,GACf,IAAM8O,EAAUtE,KAEV8Z,EAAWtkB,EAAM+G,YAAc/G,EAAM+G,WAAWrB,kBAAoB1F,EAAM+G,WAAWrB,kBAAkB2H,GAAK,GAC5GkX,EAAWvkB,EAAM+G,YAAc/G,EAAM+G,WAAa/G,EAAM+G,WAAWsG,GAAK,GAC9E,EAA4B3K,oBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAA4B7S,mBAAS,CAAC,GAAtC,mBAAOsV,EAAP,KACA,GADA,KAC4CtV,mBAAS,KAArD,mBAAO8hB,EAAP,KAAuBC,EAAvB,KACQ,eAAQzM,GAiBhB5U,qBAAU,WAGNshB,GACH,GAAE,CAAC1kB,EAAM+G,aACV,IAAM2d,EAAgB,WAClB7hB,IACCrD,IADD,UACQsD,EADR,2CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHwhB,EAAkBxhB,EAASC,KAC9B,IACAC,OAAM,SAACb,GAEP,GACJ,EAQD,EAAiCI,mBACzB,CACI8hB,eAAgB,GAChBG,eAAgB,CAAC,EACjBhC,MAAO,CAAC,EACRiC,gBAAgB,EAChBC,QAAS,CAAC,EACVC,wBAAyB,GACzBC,SAAU,GACV/P,SAAU,GACVgQ,0BAA2B,CAAC,EAC5BC,WAAY,uBACZC,eAAgB,CAAC,EACjBC,aAAc,CAAC,EACfC,YAAa,uBACbrf,SAAU,GACVuV,UAAU,KAhBtB,mBAAOE,EAAP,KAAkBC,EAAlB,KAmBMsB,EAAoB,SAAA9G,GAEtBwF,EAAY,2BAAMD,GAAN,mBAAmBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAC3D,EACD,EAA2C/B,mBACvC,CACI2iB,4BAA4B,GAC5BC,6BAA6B,GAC7BC,4BAA4B,GAC5BC,6BAA6B,GAC7BC,WAAW,GACXC,cAAc,GACdC,oBAAoB,GACpBC,mBAAoB,GACpBC,8BAA8B,GAC9BC,kBAAkB,GAClBC,qBAAqB,GACrBC,yBAAyB,GACzBC,sBAAsB,KAd9B,mBAAOC,EAAP,KAAuBC,EAAvB,KAmBMC,EAAkC,SAAAnQ,GAEpCkQ,EAAiB,2BAAMD,GAAN,mBAAwBjQ,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAErE,EAGK4hB,EADoBvP,OAAO+H,OAAOqH,GACJ7V,QAAO,SAACzE,GAAD,MAAU,SAAJA,CAAN,IAC3C,EAAyDlJ,mBACrD,CACI4jB,uBAAuB,GACvBC,6BAA6B,GAC7BC,mCAAoC,GACpCC,8BAA+B,GAC/BC,8BAA8B,KANtC,mBAAOC,EAAP,KAA8BC,EAA9B,KASMC,EAAyC,SAAA5Q,GAE3C2Q,EAAwB,2BAAMD,GAAN,mBAA+B1Q,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAEnF,EAGKqiB,EAD2BhQ,OAAO+H,OAAO8H,GACGtW,QAAO,SAACzE,GAAD,MAAU,SAAJA,CAAN,IACzD,EAAuClJ,mBACnC,CACIqkB,iBAAiB,GACjBC,oBAAqB,GACrBC,kBAAmB,GACnBC,oBAAoB,GACpBC,sBAAwB,GACxBC,cAAc,GACdC,YAAY,GACZC,SAAS,GACTC,eAAe,GACfC,aAAa,KAXrB,mBAAOrC,EAAP,KAAqBsC,EAArB,KAeMC,EAAgC,SAAAzR,GAElCwR,EAAe,2BAAMtC,GAAN,mBAAsBlP,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAEjE,EAGKkjB,EADc7Q,OAAO+H,OAAOsG,GACL9U,QAAO,SAACzE,GAAD,MAAU,SAAJA,CAAN,IACpC,EAAqClJ,mBACjC,CACIklB,mBAAmB,GACnBC,OAAO,GACPC,MAAM,GACNC,MAAM,GACNC,MAAM,GACNC,yBAAyB,GACzBC,gBAAgB,GAChBC,YAAY,GACZC,YAAY,GACZC,mBAAmB,GACnBC,gBAAgB,GAChBC,cAAc,GACdC,YAAY,KAdpB,mBAAOC,EAAP,KAAoBC,EAApB,KAiBMC,EAA+B,SAAA1S,GAEjCyS,EAAc,2BAAMD,GAAN,mBAAqBxS,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAC/D,EAoDD,OACI,qCACI,eAAC,KAAD,CAAM0G,UAAW2D,EAAQ1M,KAAzB,SACI,gBAACgJ,GAAA,EAAD,WACA,iEACI,gCACI,uBAAKD,UAAU,MAAf,UACA,uBAAKA,UAAU,MAAf,UACA,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,2BACA,wBACIrR,KAAK,OACL2G,UAAU,eACV1F,KAAK,YACL4H,GAAG,YACH5I,MAAO+W,EAAUF,UACjB9D,SAAUuF,EACViB,IAAKhe,EAAM+G,WAAWrB,kBAAkB2d,mBACxCnF,IAAM7X,GAAO,IAAI5C,MAAQ6C,OAAO,cAChCY,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGjC,KAApBuL,EAAOsD,UACR,uBAAMnQ,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOsD,YACpC,QAGZ,sBAAKnQ,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACI1K,UAAU,eACV1F,KAAK,cACL4H,GAAG,cACH5I,MAAO+W,EAAUoN,YACjBpR,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,kBACA,yBAAQA,MAAM,SAAd,oBACA,yBAAQA,MAAM,OAAd,qBAEmB,KAAtBuT,EAAO4Q,YACR,uBAAMzd,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO4Q,cACpC,QAGgD,YAA3D5oB,EAAM+G,WAAWrB,kBAAkBmjB,cAAcrnB,SAClD,sBAAK2J,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,gBAAC,KAAD,sCAAgC,IAAhC,aACA,wBACIrR,KAAK,SACL2G,UAAU,eACV1F,KAAK,0BACL4H,GAAG,0BACH5I,MAAO+W,EAAUsJ,wBACjBtN,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGnB,KAAlCuL,EAAO8M,wBACR,uBAAM3Z,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO8M,0BACpC,QAI8B,SAAzC9kB,EAAM+G,WAAWrB,kBAAkBO,KAAyD,SAAzCjG,EAAM+G,WAAWrB,kBAAkBO,KACvF,sBAAKkF,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,+BACA,wBACI1K,UAAU,eACV1F,KAAK,WACL4H,GAAG,WACH5I,MAAO+W,EAAUuJ,SACjBvN,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAElC,KAAnBuL,EAAO+M,SACR,uBAAM5Z,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO+M,WACpC,QAIZ,sBAAK5Z,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,mCACA,0BACI1K,UAAU,eACV1F,KAAK,iBACL4H,GAAG,iBACH5I,MAAO+W,EAAUgJ,eACjBhN,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQK,yBAAQhI,MAAO,GAAf,oBACI+f,EAAejf,KAAI,SAACd,GAAD,OAChB,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADH,OAMF,KAAzB2K,EAAOwM,eACR,uBAAMrZ,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOwM,iBACpC,WAIZ,sBAAKrZ,UAAU,8CAA8CjE,MAAO,CAACC,gBAAgB,UAAWvF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ8E,WAAW,QAAtJ,kDACI,sBAAK8D,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0DACA,0BACI1K,UAAU,eACV1F,KAAK,8BACL4H,GAAG,8BACH5I,MAAOyhB,EAAeb,4BACtB7N,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGmC,KAAtCuT,EAAOqN,4BACR,uBAAMla,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOqN,8BACpC,QAGZ,sBAAKla,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,6DACA,0BACI1K,UAAU,eACV1F,KAAK,+BACL4H,GAAG,+BACH5I,MAAOyhB,EAAeZ,6BACtB9N,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGoC,KAAvCuT,EAAOsN,6BACR,uBAAMna,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOsN,+BACpC,QAGZ,sBAAKna,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,yDACA,0BACI1K,UAAU,eACV1F,KAAK,8BACL4H,GAAG,8BACH5I,MAAOyhB,EAAeX,4BACtB/N,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGmC,KAAtCuT,EAAOuN,4BACR,uBAAMpa,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOuN,8BACpC,QAGZ,sBAAKpa,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0DACA,0BACI1K,UAAU,eACV1F,KAAK,+BACL4H,GAAG,+BACH5I,MAAOyhB,EAAeV,6BACtBhO,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGoC,KAAvCuT,EAAOwN,6BACR,uBAAMra,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOwN,+BACpC,QAGZ,sBAAKra,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACI1K,UAAU,eACV1F,KAAK,aACL4H,GAAG,aACH5I,MAAOyhB,EAAeT,WACtBjO,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGkB,KAArBuT,EAAOyN,WACR,uBAAMta,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOyN,aACpC,QAGZ,sBAAKta,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,iDACA,0BACI1K,UAAU,eACV1F,KAAK,gBACL4H,GAAG,gBACH5I,MAAOyhB,EAAeR,cACtBlO,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGqB,KAAxBuT,EAAO0N,cACR,uBAAMva,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO0N,gBACpC,QAGZ,sBAAKva,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,wCACA,0BACI1K,UAAU,eACV1F,KAAK,sBACL4H,GAAG,sBACH5I,MAAOyhB,EAAeP,oBACtBnO,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG2B,KAA9BuT,EAAO2N,oBACR,uBAAMxa,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO2N,sBACpC,QAGZ,sBAAKxa,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,kDACA,0BACI1K,UAAU,eACV1F,KAAK,qBACL4H,GAAG,qBACH5I,MAAOyhB,EAAeN,mBACtBpO,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG0B,KAA7BuT,EAAO4N,mBACR,uBAAMza,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO4N,qBACpC,QAGZ,sBAAKza,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,8DACA,0BACI1K,UAAU,eACV1F,KAAK,gCACL4H,GAAG,gCACH5I,MAAOyhB,EAAeL,8BACtBrO,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGqC,KAAxCuT,EAAO6N,8BACR,uBAAM1a,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO6N,gCACpC,QAGZ,sBAAK1a,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,6DACA,0BACI1K,UAAU,eACV1F,KAAK,oBACL4H,GAAG,oBACH5I,MAAOyhB,EAAeJ,kBACtBtO,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGyB,KAA5BuT,EAAO8N,kBACR,uBAAM3a,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO8N,oBACpC,QAGZ,sBAAK3a,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,gEACA,0BACI1K,UAAU,eACV1F,KAAK,uCACL4H,GAAG,uCACH5I,MAAOyhB,EAAe4C,qCACtBtR,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG4C,KAA/CuT,EAAO8Q,qCACR,uBAAM3d,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO8Q,uCACpC,QAGZ,sBAAK3d,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oDACA,0BACI1K,UAAU,eACV1F,KAAK,2BACL4H,GAAG,2BACH5I,MAAOyhB,EAAeF,yBACtBxO,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGgC,KAAnCuT,EAAOgO,yBACR,uBAAM7a,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOgO,2BACpC,QAGZ,sBAAK7a,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,mDACA,0BACI1K,UAAU,eACV1F,KAAK,wBACL4H,GAAG,wBACH5I,MAAOyhB,EAAeD,sBACtBzO,SAAU4O,EACVlf,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG6B,KAAhCuT,EAAOiO,sBACR,uBAAM9a,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOiO,wBACpC,QAGZ,gBAAC8C,GAAA,EAAD,CAASC,SAAO,EAAhB,UACI,4FACA,0CAAY3C,EAAUlS,aAE1B,wBACA,wBAEA,sBAAKhJ,UAAU,8CAA8CjE,MAAO,CAACC,gBAAgB,UAAWvF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ8E,WAAW,QAAtJ,yDACA,sBAAK8D,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oEACA,0BACI1K,UAAU,eACV1F,KAAK,yBACL4H,GAAG,yBACH5I,MAAOkiB,EAAsBL,uBAC7B9O,SAAUqP,EACV3f,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG8B,KAAjCuT,EAAOsO,uBACR,uBAAMnb,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOsO,yBACpC,QAIZ,sBAAKnb,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,gEACA,0BACI1K,UAAU,eACV1F,KAAK,+BACL4H,GAAG,+BACH5I,MAAOkiB,EAAsBJ,6BAC7B/O,SAAUqP,EACV3f,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGoC,KAAvCuT,EAAOuO,6BACR,uBAAMpb,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOuO,+BACpC,QAGZ,sBAAKpb,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sEACA,0BACI1K,UAAU,eACV1F,KAAK,qCACL4H,GAAG,qCACH5I,MAAOkiB,EAAsBH,mCAC7BhP,SAAUqP,EACV3f,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG0C,KAA7CuT,EAAOwO,mCACR,uBAAMrb,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOwO,qCACpC,QAGZ,sBAAKrb,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0EACA,0BACI1K,UAAU,eACV1F,KAAK,gCACL4H,GAAG,gCACH5I,MAAOkiB,EAAsBF,8BAC7BjP,SAAUqP,EACV3f,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGqC,KAAxCuT,EAAOyO,8BACR,uBAAMtb,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOyO,gCACpC,QAGZ,sBAAKtb,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,iGACA,0BACI1K,UAAU,eACV1F,KAAK,gCACL4H,GAAG,gCACH5I,MAAOkiB,EAAsBD,8BAC7BlP,SAAUqP,EACV3f,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGqC,KAAxCuT,EAAO0O,8BACR,uBAAMvb,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO0O,gCACpC,QAKZ,gBAACqC,GAAA,EAAD,CAASC,SAAO,EAAhB,UACI,2FACA,yCAAWlC,EAAiB3S,aAGhC,wBACA,wBACA,sBAAKhJ,UAAU,8CAA8CjE,MAAO,CAACC,gBAAgB,OAAQvF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ8E,WAAW,QAAnJ,8BACA,sBAAK8D,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,wDACA,0BACI1K,UAAU,eACV1F,KAAK,qBACL4H,GAAG,qBACH5I,MAAOgkB,EAAYb,mBACnBpQ,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG0B,KAA7BuT,EAAO4P,mBACR,uBAAMzc,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO4P,qBACpC,QAGZ,wBACA,0DACA,wBACA,sBAAKzc,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACI1K,UAAU,eACV1F,KAAK,SACL4H,GAAG,SACH5I,MAAOgkB,EAAYZ,OACnBrQ,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGc,KAAjBuT,EAAO6P,OACR,uBAAM1c,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO6P,SACpC,QAGZ,sBAAK1c,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,qBACA,0BACI1K,UAAU,eACV1F,KAAK,QACL4H,GAAG,QACH5I,MAAOgkB,EAAYX,MACnBtQ,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGa,KAAhBuT,EAAO8P,MACR,uBAAM3c,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO8P,QACpC,QAGZ,sBAAK3c,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,0BACI1K,UAAU,eACV1F,KAAK,QACL4H,GAAG,QACH5I,MAAOgkB,EAAYxM,MACnBzE,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGa,KAAhBuT,EAAOgQ,MACR,uBAAM7c,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOgQ,QACpC,QAGZ,sBAAK7c,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,0BACI1K,UAAU,eACV1F,KAAK,QACL4H,GAAG,QACH5I,MAAOgkB,EAAYV,MACnBvQ,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGa,KAAhBuT,EAAO+P,MACR,uBAAM5c,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO+P,QACpC,QAGZ,uBAAK5c,UAAU,MAAf,UACA,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,mEACA,0BACI1K,UAAU,eACV1F,KAAK,2BACL4H,GAAG,2BACH5I,MAAOgkB,EAAYR,yBACnBzQ,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGgC,KAAnCuT,EAAOiQ,yBACR,uBAAM9c,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOiQ,2BACpC,QAGZ,sBAAK9c,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,gBAAC,KAAD,yEAAmE,IAAnE,wBAA6F,IAA7F,YACA,0BACI1K,UAAU,eACV1F,KAAK,kBACL4H,GAAG,kBACH5I,MAAOgkB,EAAYP,gBACnB1Q,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGuB,KAA1BuT,EAAOkQ,gBACR,uBAAM/c,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOkQ,kBACpC,WAKZ,uBAAK/c,UAAU,MAAf,UACA,2DACA,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,0BACI1K,UAAU,eACV1F,KAAK,cACL4H,GAAG,cACH5I,MAAOgkB,EAAYN,YACnB3Q,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGmB,KAAtBuT,EAAOmQ,YACR,uBAAMhd,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOmQ,cACpC,QAIZ,sBAAKhd,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,0BACI1K,UAAU,eACV1F,KAAK,cACL4H,GAAG,cACH5I,MAAOgkB,EAAYL,YACnB5Q,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGmB,KAAtBuT,EAAOoQ,YACR,uBAAMjd,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOoQ,cACpC,WAIZ,sBAAKjd,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,2CACA,0BACI1K,UAAU,eACV1F,KAAK,qBACL4H,GAAG,qBACH5I,MAAOgkB,EAAYJ,mBACnB7Q,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG0B,KAA7BuT,EAAOqQ,mBACR,uBAAMld,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOqQ,qBACpC,QAGZ,sBAAKld,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,wEACA,0BACI1K,UAAU,eACV1F,KAAK,kBACL4H,GAAG,kBACH5I,MAAOgkB,EAAYH,gBACnB9Q,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGuB,KAA1BuT,EAAOsQ,gBACR,uBAAMnd,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOsQ,kBACpC,QAGZ,sBAAKnd,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,iDACA,0BACI1K,UAAU,eACV1F,KAAK,gBACL4H,GAAG,gBACH5I,MAAOgkB,EAAYF,cACnB/Q,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGqB,KAAxBuT,EAAOuQ,cACR,uBAAMpd,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOuQ,gBACpC,QAGZ,sBAAKpd,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sEACA,0BACI1K,UAAU,eACV1F,KAAK,cACL4H,GAAG,cACH5I,MAAOgkB,EAAYD,YACnBhR,SAAUmR,EACVzhB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGmB,KAAtBuT,EAAOwQ,YACR,uBAAMrd,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOwQ,cACpC,QAGZ,wBACA,wBACA,sBAAKrd,UAAU,8CAA8CjE,MAAO,CAACC,gBAAgB,UAAWvF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ8E,WAAW,QAAtJ,qCACCrH,EAAM+G,WAAWrB,mBAA8D,WAAzC1F,EAAM+G,WAAWrB,kBAAkBO,KAC1E,uCACA,sBAAKkF,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,yEACA,0BACI1K,UAAU,eACV1F,KAAK,mBACL4H,GAAG,mBACH5I,MAAO0gB,EAAa4B,iBACpBvP,SAAUkQ,EACVxgB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGwB,KAA3BuT,EAAO+O,iBACR,uBAAM5b,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO+O,mBACpC,QAIZ,sBAAK5b,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,qFACA,0BACI1K,UAAU,eACV1F,KAAK,sBACL4H,GAAG,sBACH5I,MAAO0gB,EAAa6B,oBACpBxP,SAAUkQ,EACVxgB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG2B,KAA9BuT,EAAOgP,oBACR,uBAAM7b,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOgP,sBACpC,WAIXhnB,EAAM+G,WAAWrB,mBAA8D,SAAzC1F,EAAM+G,WAAWrB,kBAAkBO,KAC1E,uCACA,sBAAKkF,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0EACA,0BACI1K,UAAU,eACV1F,KAAK,oBACL4H,GAAG,oBACH5I,MAAO0gB,EAAa8B,kBACpBzP,SAAUkQ,EACVxgB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGyB,KAA5BuT,EAAOiP,kBACR,uBAAM9b,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOiP,oBACpC,QAGZ,sBAAK9b,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sDACA,0BACI1K,UAAU,eACV1F,KAAK,sBACL4H,GAAG,sBACH5I,MAAO0gB,EAAa+B,oBACpB1P,SAAUkQ,EACVxgB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG2B,KAA9BuT,EAAOkP,oBACR,uBAAM/b,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOkP,sBACpC,QAGZ,sBAAK/b,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,mGACA,0BACI1K,UAAU,eACV1F,KAAK,wBACL4H,GAAG,wBACH5I,MAAO0gB,EAAagC,sBACpB3P,SAAUkQ,EACVxgB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG6B,KAAhCuT,EAAOmP,sBACR,uBAAMhc,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOmP,wBACpC,WAIZ,sBAAKhc,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sCACA,0BACI1K,UAAU,eACV1F,KAAK,eACL4H,GAAG,eACH5I,MAAO0gB,EAAaqC,aACpBhQ,SAAUkQ,EACVxgB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGoB,KAAvBuT,EAAOwP,aACR,uBAAMrc,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOwP,eACpC,QAGZ,sBAAKrc,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,mDACA,0BACI1K,UAAU,eACV1F,KAAK,iBACL4H,GAAG,iBACH5I,MAAO0gB,EAAaoC,eACpB/P,SAAUkQ,EACVxgB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGsB,KAAzBuT,EAAOuP,eACR,uBAAMpc,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOuP,iBACpC,QAGZ,sBAAKpc,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,qCACA,0BACI1K,UAAU,eACV1F,KAAK,WACL4H,GAAG,WACH5I,MAAO0gB,EAAa6B,oBACpBxP,SAAUkQ,EACVxgB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGgB,KAAnBuT,EAAOsP,SACR,uBAAMnc,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOsP,WACpC,QAGZ,sBAAKnc,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,0BACI1K,UAAU,eACV1F,KAAK,cACL4H,GAAG,cACH5I,MAAO0gB,EAAakC,YACpB7P,SAAUkQ,EACVxgB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGmB,KAAtBuT,EAAOqP,YACR,uBAAMlc,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOqP,cACpC,QAGZ,sBAAKlc,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,8BACA,0BACI1K,UAAU,eACV1F,KAAK,gBACL4H,GAAG,gBACH5I,MAAO0gB,EAAaiC,cACpB5P,SAAUkQ,EACVxgB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGqB,KAAxBuT,EAAOoP,cACR,uBAAMjc,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOoP,gBACpC,QAGZ,gBAAC2B,GAAA,EAAD,CAASC,SAAO,EAAhB,UACI,8EAAgD,MAAhD,yCACA,yCAAWrB,EAASxT,aAGvBmB,EAAS,eAACU,GAAA,EAAD,IAAc,GACxB,wBACA,sBAAK7K,UAAU,MAAf,SACA,sBAAKA,UAAU,4BAAf,SAEA,eAAC,KAAD,CAAQkW,QAAQ,OAAOnT,KAAK,cAAc+a,cAAc,QAAQ/hB,MAAO,CAACC,gBAAgB,UAAW5E,MAAM,QAASkO,QAliCtH,SAACwF,GACjBA,EAAEC,iBACEsF,EAAU0N,YAAa3E,EACvB/I,EAAUmJ,eAAgB8D,EAC1BjN,EAAUwJ,0BAA2BkB,EACrC1K,EAAU0J,eAAgByB,EAC1BnL,EAAU2J,aAAcA,EACxB3J,EAAUxG,SAAUsP,EACpB9I,EAAUzV,SAAUue,EACpBzhB,IAAMsT,KAAN,UAAcrT,EAAd,oBAAwC0Y,EACxC,CAAEzY,QAAS,CAAC,+BAA4B5D,MACvC6D,MAAK,SAAAC,GACFsS,GAAU,GACVvV,EAAM+G,WAAW8J,qBAAqB,EAEtCkD,IAAMtR,QAAQ,sCAAuC,CAACyS,SAAUnB,IAAM0P,SAASC,gBAC/E1jB,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,mBAEzD,IACAzN,OAAM,SAAAb,GAEH,GADAiT,GAAU,GACPjT,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAI8Q,EAAe1R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,QAAe5R,EAAMW,SAASC,KAAK+Q,SAASC,QAAW,yCACpI5R,EAAMW,SAASC,KAAK+Q,UAAmD,KAAvC3R,EAAMW,SAASC,KAAK+Q,SAASC,SAAgB5R,EAAMW,SAASC,KAAK+Q,UAAgE,KAApD3R,EAAMW,SAASC,KAAK+Q,SAAS0P,UAAU,GAAGzP,QACxJH,IAAMzR,MAAMA,EAAMW,SAASC,KAAK+Q,SAASC,QAAU,MAAQ5R,EAAMW,SAASC,KAAK+Q,SAAS0P,UAAU,GAAG9e,MAAQ,IAAMvC,EAAMW,SAASC,KAAK+Q,SAAS0P,UAAU,GAAGzP,QAAS,CAACgB,SAAUnB,IAAM0P,SAASC,gBAEhM3P,IAAMzR,MAAM0R,EAAc,CAACkB,SAAUnB,IAAM0P,SAASC,eAEzD,MACG3P,IAAMzR,MAAM,4CAA6C,CAAC4S,SAAUnB,IAAM0P,SAASC,eAE1F,GAER,mBA0gCJ,EC/xCKlZ,GAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QA/BiB,IAkWnB2nB,GA/TG,SAACnpB,GAEf,IAAM+G,EAAa/G,EAAM+G,WAEnB+H,GADQyC,cACE/G,MAChB,EAAkC9H,mBAAS,CAAC2K,GAAG,GAAItH,SAAU,GAAGsd,mBAAmB,GAAG+F,aAAa,GAAIC,aAAa,GAAGC,uBAAuB,GAAGC,iBAAiB,GAAGC,iBAAiB,GAAGC,oBAAoB,GAAGC,kBAAkB,GAAGC,UAAU,GAAGvN,WAAW,GAAGwN,cAAc,GAAGC,aAAa,GAAGC,UAAU,KAA3S,mBAAOtO,EAAP,KAAkBC,EAAlB,KACA,EAA4B/Y,oBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAA4B7S,mBAAS,CAAC,GAAtC,mBAAOsV,EAAP,KACA,GADA,KACoCtV,mBAAS,KAA7C,mBAAOqnB,EAAP,KACA,GADA,KACkCrnB,mBAAS,KAA3C,mBAAOsnB,EAAP,KAEA,GAFA,KAEoCtnB,oBAAS,IAA7C,mBAAmBunB,GAAnB,WAEA,EAAsCvnB,oBAAS,GAA/C,6BAEAU,qBAAU,WAEP,GAAE,IAEL,IAAM2Z,EAAoB,SAAA9G,GAEtBwF,EAAY,2BAAMD,GAAN,mBAAmBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,SACpC,iBAAjBwR,EAAE+G,OAAOvX,OACY,OAAjBwQ,EAAE+G,OAAOvY,MACRwlB,GAAc,GAEdA,GAAc,GAIzB,EA+CH,OACM,+BACI,eAAC,KAAD,UACI,eAAC7e,GAAA,EAAD,UACA,kCACI,uBAAKD,UAAU,MAAf,UACI,6CACA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,gCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACHmK,SAAUuF,EACVtY,MAAO+W,EAAUzV,SACjBgQ,UAAQ,YAMhB,wBACA,sBAAK5K,UAAU,MAAf,SACA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACHmK,SAAUuF,EACVtY,MAAO+W,EAAU4N,aACjBrT,UAAQ,EANZ,UAQI,yBAAQtR,MAAM,GAAd,qBAECslB,EAAWxkB,KAAI,SAACd,GAAD,OACZ,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADP,IAKQ,KAAvB2K,EAAOoR,aACA,uBAAMje,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOoR,eACxC,aAMhB,wBAEA,uBAAKje,UAAU,MAAf,UACA,sBAAKA,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,eAAX,wBACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACHmK,SAAUuF,EACVtY,MAAO+W,EAAU4N,aACjBrT,UAAQ,EANZ,UAQA,yBAAQtR,MAAM,GAAd,eAECslB,EAAWxkB,KAAI,SAACd,GAAD,OACZ,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADP,IAKQ,KAAvB2K,EAAOoR,aACA,uBAAMje,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOoR,eACxC,WAKR,sBAAKje,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,eAAX,iCACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACHmK,SAAUuF,EACVtY,MAAO+W,EAAU4N,aACjBrT,UAAQ,EANZ,UAQA,yBAAQtR,MAAM,GAAd,eAECslB,EAAWxkB,KAAI,SAACd,GAAD,OACZ,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADP,IAKQ,KAAvB2K,EAAOoR,aACA,uBAAMje,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOoR,eACxC,WAKR,sBAAKje,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,eAAX,qCACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACHmK,SAAUuF,EACVtY,MAAO+W,EAAU4N,aACjBrT,UAAQ,EANZ,UAQA,yBAAQtR,MAAM,GAAd,eAECslB,EAAWxkB,KAAI,SAACd,GAAD,OACZ,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADP,IAKQ,KAAvB2K,EAAOoR,aACA,uBAAMje,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOoR,eACxC,cAMR,wBACA,uBAAKje,UAAU,MAAf,UACA,6CACA,sBAAKA,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,sBACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,yBACL4H,GAAG,yBACHmK,SAAUuF,EACVtY,MAAO+W,EAAU8N,uBACjBvT,UAAQ,EANZ,UAQI,yBAAQtR,MAAM,GAAd,qBAECulB,EAAUzkB,KAAI,SAACd,GAAD,OACX,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADR,IAKmB,KAAjC2K,EAAOsR,uBACA,uBAAMne,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOsR,yBACxC,WAKZ,sBAAKne,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,gBAACC,GAAA,EAAD,CACAtR,KAAK,SACLiB,KAAK,yBACL4H,GAAG,yBACHmK,SAAUuF,EACVtY,MAAO+W,EAAU8N,uBACjBvT,UAAQ,EANR,UAQA,yBAAQtR,MAAM,GAAd,qBAECulB,EAAUzkB,KAAI,SAACd,GAAD,OACX,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADR,IAKmB,KAAjC2K,EAAOsR,uBACA,uBAAMne,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOsR,yBACxC,WAIZ,sBAAKne,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,uCACA,gBAACC,GAAA,EAAD,CACAtR,KAAK,SACLiB,KAAK,yBACL4H,GAAG,yBACHmK,SAAUuF,EACVtY,MAAO+W,EAAU8N,uBACjBvT,UAAQ,EANR,UAQA,yBAAQtR,MAAM,GAAd,qBAECulB,EAAUzkB,KAAI,SAACd,GAAD,OACX,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADR,IAKmB,KAAjC2K,EAAOsR,uBACA,uBAAMne,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOsR,yBACxC,cAMfhU,EAAS,eAACU,GAAA,EAAD,IAAc,GACxB,wBAEA,eAAC,KAAD,CACIxR,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAlPC,SAACwF,GAClBA,EAAEC,iBAEAsF,EAAUxG,SAAUjO,EAAWsG,GAC/BtG,EAAWmjB,UAAS,SACb1O,EAAS,UAChBjG,GAAU,GACV1S,IAAMsT,KAAN,UAAcrT,EAAd,kBAAsC0Y,EACrC,CAAEzY,QAAS,CAAC,+BAA4B5D,MAGpC6D,MAAK,SAAAC,GACFsS,GAAU,GACVxB,IAAMtR,QAAQ,0BACdzC,EAAM2V,SACN3V,EAAM+G,WAAWmjB,UAAS,EAC1BlqB,EAAMmP,sBAET,IACAhM,OAAM,SAAAb,GACHiT,GAAU,GACVxB,IAAMzR,MAAM,uBACf,GAEV,EAoNe,SAQMgT,EAGF,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,uBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,oBAMR,eAAC,KAAD,CACI7F,QAAQ,YACRkE,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAASzQ,EAAM2V,OAJnB,SAOI,uBAAMzO,MAAO,CAAE4F,cAAe,cAA9B,8BAQnB,ECjWKtC,GAAYrJ,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QA/BiB,IAqXnB2oB,GAlVc,SAACnqB,GAEPA,EAAM+G,WACXwK,cADd,IAEMzC,EAAUtE,KAChB,EAAkC9H,mBAAS,CACvC0gB,aAAc,GACdgH,aAAc,GACdzH,MAAO,CAAC,EACR3N,SAAU,EACVsN,oBAAqB,GACrB+H,SAAU,GACVC,cAAe,GACfC,eAAgB,GAChBC,0BAA2B,GAC3BzkB,SAAU,KAVd,mBAAOyV,EAAP,KAAkBC,EAAlB,KAYA,EAA4B/Y,oBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAA4B7S,mBAAS,CAAC,GAAtC,mBAAOsV,EAAP,KAAeC,EAAf,KACA,EAAoCvV,mBAAS,IAA7C,mBACA,GADA,UACkCA,mBAAS,KAA3C,mBAAO+nB,EAAP,KAAkBC,EAAlB,KACA,EAAoChoB,qBAApC,mBAAOqgB,EAAP,KAAmBC,EAAnB,KAEA5f,qBAAU,WACN8f,IACAyH,GACD,GAAE,IACH,IAAMA,EAAc,WAClB9nB,IACIrD,IADJ,UACWsD,EADX,wCAEO,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHynB,EAAaznB,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACP,EACK4gB,EAAkB,WACpBrgB,IACIrD,IADJ,UACWsD,EADX,0CACoD9C,EAAM+G,WAAWiO,UAC9D,CAAEjS,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH+f,EAAc/f,EAASC,KAC1B,IACAC,OAAM,SAACb,GAEP,GACP,EACD+M,QAAQC,IAAIyT,GACZ,IAAMhG,EAAoB,SAAA9G,GACtBwF,EAAY,2BAAMD,GAAN,mBAAmBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAC3D,EAEK+e,EAAW,WACb,IAAIrL,EAAI,eAAQH,GAWhB,OAVAG,EAAKiL,aAAe5H,EAAU4H,aAAe,GAAK,yBAClDjL,EAAKiS,aAAe5O,EAAU4O,aAAe,GAAK,yBAClDjS,EAAKkS,SAAW7O,EAAU6O,SAAW,GAAK,yBAC1ClS,EAAKmS,cAAgB9O,EAAU8O,cAAgB,GAAK,yBACpDnS,EAAKoS,eAAiB/O,EAAU+O,eAAiB,GAAK,yBACtDpS,EAAKqS,0BAA4BhP,EAAUgP,0BAA4B,GAAK,yBAC5ErS,EAAKpS,SAAWyV,EAAUzV,SAAW,GAAK,yBAC1CkS,EAAU,eACHE,IAEArB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,GACrC,EAyBH,OACI,+BACE,eAAC,KAAD,UACI,eAACR,GAAA,EAAD,UACA,kCACA,uBAAKD,UAAU,MAAf,UACgB,mDACA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,oCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACHmK,SAAUuF,EACVtY,MAAO+W,EAAUzV,SACjBgQ,UAAQ,IAEQ,KAAnBiC,EAAOjS,SACJ,uBAAMoF,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOjS,WACxC,QAGR,sBAAKoF,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,GAAX,wCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,iBACL4H,GAAG,iBACHmK,SAAUuF,EACVtY,MAAO+W,EAAUoP,eACjB7U,UAAQ,IAEc,KAAzBiC,EAAO4S,eACJ,uBAAMzf,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO4S,iBACxC,QAGR,sBAAKzf,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAO+W,EAAU4H,aACjB5L,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDuR,IAAK+E,GAAcA,EAAWzH,UAAWyH,EAAWzH,UAAW,GAC/D4C,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,gBAER,KAAvB0R,EAAOoL,aACJ,uBAAMjY,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOoL,eACxC,QAIR,sBAAKjY,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,eAAX,6BACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,WACL4H,GAAG,WACHmK,SAAUuF,EACVtY,MAAO+W,EAAU6O,SACjBtU,UAAQ,EANZ,UAQA,yBAAQtR,MAAM,GAAd,qBAECgmB,EAAUllB,KAAI,SAACd,GAAD,OACX,yBAAuBA,MAAOA,EAAM6e,KAApC,SACK7e,EAAMjD,SADEiD,EAAM4I,GADR,OAOM,KAAnB2K,EAAOqS,SACD,uBAAMlf,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOqS,WACxC,SAIwB,IAA/BrqB,EAAM+G,WAAWqhB,aAClB,sBAAKjd,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,kBACL4H,GAAG,kBACHmK,SAAUuF,EACVtY,MAAO,WACPka,UAAQ,SAMwB,OAAnC3e,EAAM+G,WAAW8jB,iBAClB,sBAAK1f,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,8CACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,4BACL4H,GAAG,4BACH5I,MAAOzE,EAAM+G,WAAW8jB,gBACxBrT,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDyR,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,cAChCqY,UAAQ,IAE0B,KAApC3G,EAAO8S,0BACL,uBAAM3f,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO8S,4BACxC,QAIR,sBAAK3f,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,wCACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAO+W,EAAU4O,aACjB5S,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDuR,IAAK+E,GAAcA,EAAWzH,UAAWyH,EAAWzH,UAAW,GAC/D4C,IAAM7X,KAAO,IAAI5C,MAAQ6C,OAAO,gBAEZ,KAAvB0R,EAAOoS,aACJ,uBAAMjf,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOoS,eACxC,QAIR,sBAAKjf,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,8BACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,gBACL4H,GAAG,gBACH5I,MAAO+W,EAAU8O,cACjB9S,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAG7B,KAAxBuL,EAAOsS,cACJ,uBAAMnf,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOsS,gBACxC,QAGR,sBAAKnf,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,gBAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,SACLiB,KAAK,4BACL4H,GAAG,4BACH5I,MAAO+W,EAAUgP,0BACjBhT,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAPtD,UAUI,yBAAQhI,MAAM,GAAd,qBAECgmB,EAAUllB,KAAI,SAACd,GAAD,OACX,yBAAuBA,MAAOA,EAAM6e,KAApC,SACK7e,EAAMjD,SADEiD,EAAM4I,GADR,OAMkB,KAApC2K,EAAOwS,0BACJ,uBAAMrf,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOwS,4BACxC,QAGR,sBAAKrf,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,0CACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,iBACL4H,GAAG,iBACH5I,MAAO+W,EAAU+O,eACjB/S,SAAUuF,EACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAG5B,KAAzBuL,EAAOuS,eACJ,uBAAMpf,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOuS,iBACxC,WAOvBjV,EAAS,eAACU,GAAA,EAAD,IAAc,GACxB,wBAEA,eAAC,KAAD,CACIxR,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAhPK,SAACwF,GAClBA,EAAEC,iBACCsN,IACDhI,EAAUxG,SAAShV,EAAM+G,WAAWiO,SACpCwG,EAAU8G,oBAAoBS,EAAW1H,KACzC9F,GAAU,GACV1S,IAAMsT,KAAN,UAAcrT,EAAd,mBAAuC0Y,EACtC,CAAEzY,QAAS,CAAC,+BAA4B5D,MAGpC6D,MAAK,SAAAC,GACFsS,GAAU,GACVvV,EAAM+G,WAAWL,oBAAoB,EACrCqN,IAAMtR,QAAQ,mCAAoC,CAACyS,SAAUnB,IAAM0P,SAASC,gBAC5E1jB,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,mBACzD,IACAzN,OAAM,SAAAb,GACHiT,GAAU,GACVxB,IAAMzR,MAAM,uBACf,IAEV,EAqNW,SAQMgT,EAGF,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,uBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,oBAMR,eAAC,KAAD,CACI7F,QAAQ,YACRkE,UAAW2D,EAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAASzQ,EAAM2V,OAJnB,SAOI,uBAAMzO,MAAO,CAAE4F,cAAe,cAA9B,8BAQf,E,iCCtYc,OAA0B,6C,qBCwCnCtC,GAAYrJ,cAAW,SAACC,GAAD,MAAY,CACrCgB,KAAM,CACFR,MAAO,OACP,sIAAsI,CAClImpB,WAAW,cACXhN,OAAO,IACP7T,cAAc,SACd8gB,WAAW,QACXC,WAAW,KAEf,kCAAkC,CAC9BzoB,SAAU,OACVD,MAAO,UACPuI,QAAS,gBACTzD,WAAW,QAEf,UAAU,CACNxF,UAAU,mBAEd,kBAAkB,CACdU,MAAM,WAEV,wBAAwB,CACpBA,MAAM,WAEV,YAAY,CACR,YAAa,OACbuI,QAAQ,MACR5I,OAAQ,OACR,aAAc,SAGtBb,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UApCS,IAqEzBwpB,GAAS,GA8rBEC,OA5rBf,SAAoBnrB,GAChB,IAAM8O,EAAUtE,KACZ8G,EAAUC,cAEd,GADoBD,EAAQhS,UAAYgS,EAAQhS,SAASwH,OAAQwK,EAAQhS,SAASwH,MAAMskB,YACzC1oB,mBAAS,KAAxD,mBAAO2oB,EAAP,KAAwBC,EAAxB,KACA,EAAiC5oB,mBAAS,CAAC6oB,cAAe,cAAeC,UAAUxrB,EAAMwrB,UAAWC,aAAa,GAAIC,OAAO,KAA5H,mBAAOlQ,EAAP,KAAkBC,EAAlB,KACA,EAAoC/Y,mBAAS,IAA7C,mBAAOipB,EAAP,KAAmBC,EAAnB,KACA,EAA8BlpB,mBAAS,IAAvC,mBAAgBuM,GAAhB,WACA,EAA8BtE,IAAMjI,UAAS,GAA7C,mBAAgBE,GAAhB,WACA,EAAsCF,oBAAS,GAA/C,mBAAOmpB,EAAP,KAAoBC,EAApB,KACA,EAAsCnhB,IAAMjI,UAAS,GAArD,mBAAOqpB,EAAP,KAAoBC,EAApB,KACA,EAAgCrhB,IAAMjI,UAAS,GAA/C,mBAAiBupB,GAAjB,WACA,EAA8BthB,IAAMjI,UAAS,GAA7C,mBAAOD,EAAP,KAAgBypB,EAAhB,KACA,EAA4BxpB,mBAAS,CAAC,GAAtC,mBAAOsV,EAAP,KAAeC,EAAf,KACA,EAAgDvV,mBAAS,IAAzD,mBAAOypB,GAAP,KAAyBC,GAAzB,KAEA,GAA+C1pB,mBAAS,IAAxD,qBAAO2pB,GAAP,MAAyBC,GAAzB,MACA,GAA8C5pB,mBAAS,IAAvD,qBAAwB6pB,IAAxB,aAWMC,IATQ,eACN/pB,GAAW,CACXgqB,QAASC,KAAM,KACf,UAAW,CACPD,QAASC,KAAM,QAKF,iDAAG,8GACK7pB,IAAMrD,IAAN,UAAasD,EAAb,qDAAyE,CAAEC,QAAS,CAAC,+BAA4B5D,MADtH,OAClBwtB,EADkB,OAGxB9pB,IAAMrD,IAAN,UAAasD,EAAb,6BAAyC9C,EAAMwrB,WAAY,CAAEzoB,QAAS,CAAC,+BAA4B5D,MAAW6D,KAA9G,iDAAmH,WAAOC,GAAP,qFAC5GA,EAASC,KAAKiR,OAAS,GACtBiY,GAAoBnpB,EAASC,MAC7B4oB,GAAe,GACXc,EAAwBC,KAAEC,KAAKD,KAAEtnB,IAAItC,EAASC,KAAK,iBACvDqpB,GAAmBK,GACfG,EAAkBF,KAAEtnB,IAAIonB,EAAezpB,MAAM,SAACiS,GAC9C,OAAO0X,KAAEG,OAAO,CAAC,EAAG7X,EAAM,CAAC8X,SAAUL,EAAsBM,SAAS/X,EAAK3T,UAE5E,IACDoqB,EAAcmB,KAEVA,EAAkBF,KAAEtnB,IAAIonB,EAAezpB,MAAM,SAACiS,GAC9C,OAAO0X,KAAEG,OAAO,CAAC,EAAG7X,EAAM,CAAC8X,UAAU,GAExC,IACDrB,EAAcmB,IAhB6F,2CAAnH,uDAoBG5pB,MApBH,iDAoBS,WAAOb,GAAP,iFACL+M,QAAQC,IAAI,6BACZD,QAAQC,IAAIhN,GAERyqB,EAAkBF,KAAEtnB,IAAIonB,EAAezpB,MAAM,SAACiS,GAC9C,OAAO0X,KAAEG,OAAO,CAAC,EAAG7X,EAAM,CAAC8X,UAAU,GACxC,IACDrB,EAAcmB,GACdjB,GAAe,GARV,2CApBT,uDAHwB,2CAAH,sDAmCnBqB,GAAkB,WACpBtqB,IAAMsT,KAAN,UAAcrT,EAAd,iCAA8C9C,EAAMwrB,WAAYxrB,EAAMwrB,UAAU,CAAEzoB,QAAS,CAAC,+BAA4B5D,MAAW6D,MAAK,SAACC,GACrIoM,QAAQC,IAAI,gBACf,IAAEnM,OAAM,SAACb,GACN+M,QAAQC,IAAI,uBACZD,QAAQC,IAAIhN,EAEf,GACJ,EAGDc,qBAAU,WACN+pB,KACAX,KACAY,IAEH,GAAE,IAEH,IAAMA,GAAc,WAChBvqB,IACKrD,IADL,UACYsD,EADZ,sCAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,IACgB,IAAhBA,EAASC,MACRL,IACKrD,IADL,UACYsD,EADZ,sBAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHgM,EAAWhM,EAASC,MACpBooB,EAAoBroB,EAASC,KAEhC,IACAC,OAAM,SAACb,GACJ+M,QAAQC,IAAIhN,EACf,GAGZ,IACAa,OAAM,SAACb,GAEP,GAER,EAyID,OACI,sBAAK6I,UAAW2D,EAAQ1M,KAAxB,SAGI,uBAAK8E,MAAO,CAAC1F,QAAQ,OAAOI,MAAM,QAAlC,UACI,sBAAKuJ,UAAU,GAAGjE,MAAO,CAAC4D,QAAQ,MAAOuiB,KAAK,IAAIC,UAAW,wCAAwCC,UAAU,SAA/G,SACK1B,GAAeM,GAAiBhY,OAAS,EAClC,sBAAKjN,MAAO,CAAC1F,QAAQ,OAAOI,MAAM,OAAO4rB,SAAS,QAAlD,SACKrB,GAAiB5mB,KAAI,SAACkoB,EAAWzb,GAAZ,OAClB,sBAAmB9K,MAAO,CAACqmB,UAAU,QAAQziB,QAAQ,MAAOlJ,MAAM,OAAlE,SACI,uBAAMuJ,UAAU,QAAQjE,MAAO,CAACuF,aAAa,OAA7C,UAEI,uBAAKtB,UAAU,gCAAgCjE,MAAO,CAACC,gBAAgB,QAAvE,UACI,iCACI,qBAAIgE,UAAU,iCAAd,SAA+C,eAAC,IAAD,CAAMvE,GAAI,IAAKM,MAAO,CAAC3E,MAAM,UAAUC,SAAS,OAAOuoB,WAAW,wBAAlE,SAA4F0C,EAAUhC,iBACrJ,uBAAKtgB,UAAU,mBAAmBjE,MAAO,CAAC1E,SAAS,OAAOD,MAAM,UAAW8E,WAAW,OAAO0jB,WAAW,wBAAxG,UAAiI,oBAAG5f,UAAU,wBAAwB,cAAY,SAAY9E,KAAOonB,EAAUC,kBAAkBpnB,OAAO,0BAI5O,gBAAC+M,GAAA,EAAD,CAAUlI,UAAU,mBAApB,UACI,eAACkI,GAAA,EAASP,OAAV,CACIC,GAAG,SACH9L,QAAQ,GACR0mB,KAAK,KACLxiB,UAAU,yBACVkC,GAAG,SACHnG,MAAO,CAAEC,gBAAiB,UAAWymB,YAAY,UAAWnhB,aAAa,MAAMohB,YAAY,QAAQhsB,UAAU,SANjH,SAQI,sBACIisB,MAAM,6BACNC,WAAW,+BACXnsB,MAAM,OACNM,OAAO,OACPoR,QAAQ,YACRC,QAAQ,MANZ,SAQI,qBACIC,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,UAJb,UAMI,uBAAM/H,EAAE,IAAI7B,EAAE,IAAInI,MAAM,KAAKM,OAAO,OACpC,yBAAQwR,KAAK,UAAUrL,GAAG,KAAKC,GAAG,IAAIC,EAAE,MACxC,yBAAQmL,KAAK,UAAUrL,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACzC,yBAAQmL,KAAK,UAAUrL,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAIrD,eAAC8K,GAAA,EAAS/C,KAAV,CAAe0d,YAAY,EAAM7iB,UAAU,sBAA3C,SACI,gBAACkI,GAAA,EAAS7C,KAAV,CAAetJ,MAAO,CAAC3E,MAAM,OAAQkO,QAAS,kBA/F1EpD,EA+F8FogB,EAAUpgB,GA/FrG4gB,EA+FwGR,EAAUhC,kBA9FzI5oB,IAAMiR,OAAN,UAAgBhR,EAAhB,sBAAqCuK,GAAK,CAAEtK,QAAS,CAAC,+BAA4B5D,MAAW6D,MAAK,SAACC,GAC/F8Q,IAAMtR,QAAN,UAAiBwrB,EAAjB,0BACApB,KAAEvoB,KAAKqnB,EAAW,CAAC,QAAUsC,IAAShB,UAAW,EACjDrB,EAAc,aAAID,IAClB,IAAIuC,EAAsBrB,KAAE3nB,OAAOinB,GAAkB,CAAC,aAAe8B,IACrE7B,GAAoB8B,GACpBf,KACkC,IAA/Be,EAAoB/Z,QACnBnU,EAAMmuB,8BAA6B,EAE1C,IAAEhrB,OAAM,SAACb,GACNyR,IAAMzR,MAAM,wBACZ+M,QAAQC,IAAIhN,EAEf,IAfkB,IAAC+K,EAAG4gB,CA+FuE,EAA9C,UACI,eAAC,KAAD,IADJ,qBAQZ,sBAAK9iB,UAAU,qBAAf,SACI,sBAAIA,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAkBjE,MAAO,CAAChF,OAAO,QAASV,QAAQ,OAAO4sB,eAAe,UAAtF,SACI,sBAAKC,IAAKC,GAAmBC,IAAI,GAAGrnB,MAAO,CAAChF,OAAO,YAGvD,sBAAIiJ,UAAU,kBAAd,UAEI,eAACqjB,GAAA,EAAD,CAAOvnB,QAAQ,sBAAsBkE,UAAU,sBAA/C,sBACA,wBAAMA,UAAU,aAAhB,oBAAqCsiB,EAAUgB,OAHnD,KAII,uBAAMtjB,UAAU,4BAAhB,SACA,gBAACqjB,GAAA,EAAD,CAAOvnB,SAAyB,IAAhBwmB,EAAUgB,IAAY,mBAAoB,kBAA1D,UAA6E,oBAAGtjB,UAAU,iCAAiC,cAAY,SAAvI,qBA5DR6G,EADM,MA2E9B,qCACI,sBAAK7G,UAAU,cAAf,SACI,sBAAMA,UAAU,cAAhB,SACI,eAAC,KAAD,CAAOujB,SAAS,OAAhB,SACI,eAACC,GAAA,EAAD,CAAYznB,MAAO,CAAChF,OAAO,SAA3B,SACI,yEASxB,sBAAKgF,MAAO,CAACmmB,KAAK,IAAIviB,QAAQ,MAAMkgB,WAAW,MAAMjN,OAAO,kCAAkCuP,UAAW,yCAAzG,SACI,uBAAKniB,UAAU,SAAf,UACI,eAAC,IAAD,IACA,eAAC,KAAD,CAAKJ,GAAI,GAAT,SACI,gBAAC8K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,SAASjc,MAAO,CAAC3E,MAAM,UAAU8E,WAAW,OAAO7E,SAAS,QAAvE,4BACA,gBAACsT,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,SACL4H,GAAG,SACHmK,SApOhB,SAAAvB,GAChB,IAAM2Y,EAAY3Y,EAAE+G,OAAOvY,MACrBoqB,EAAexD,EAAiB/mB,MAAK,SAACsH,GAAD,OAAMA,EAAEnG,OAAQmpB,CAAhB,IAC3C1D,GAA+B,OAArB2D,EAAepvB,IAAYqD,EAAU+rB,EAAepvB,IAC9Dgc,EAAa,2BAAID,GAAL,IAAgBkQ,OAAOkD,KACnC/rB,IACKrD,IADL,UACY0rB,GADZ,0CACsD0D,GAC9C,CAAE7rB,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAC2B,UAA3BA,EAASC,KAAK4rB,UACb/a,IAAMzR,MAAMW,EAASC,KAAK6rB,UAAY,gBAGtC/C,GAAe,EAEtB,IACA7oB,OAAM,SAACb,GACP,GACR,EAkNmCmC,MAAO+W,EAAUkQ,OACjB3V,UAAQ,EANZ,UAQI,yBAAQtR,MAAM,GAAd,4BACC4mB,EAAiB9lB,KAAI,gBAAG8H,EAAH,EAAGA,GAAI5H,EAAP,EAAOA,KAAP,OAClB,yBAAiBhB,MAAOgB,EAAxB,SACKA,GADQ4H,EADK,OAOR,KAAjB2K,EAAO0T,OACJ,uBAAMvgB,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAO0T,SACxC,QAGXK,EACO,uBAAK5gB,UAAU,aAAf,UACI,eAAC,KAAD,CAAKJ,GAAI,EAAT,SACI,gBAAC8K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,SAASjc,MAAO,CAAC3E,MAAM,UAAU8E,WAAW,OAAO7E,SAAS,QAAvE,2BACA,gBAACsT,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACHmK,SAxOtB,SAAAvB,GACtBwF,EAAY,2BAAMD,GAAN,mBAAmBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAC3D,EAuO+CA,MAAO+W,EAAUiQ,aACjB1V,UAAQ,EANZ,UAQI,yBAAQtR,MAAM,GAAd,4BAECooB,KAAExc,OAAOsb,EAAY,CAAC,YAAY,IAAQpmB,KAAI,SAACd,GAAD,OAC3C,yBAAuBA,MAAOA,EAAMjD,QAApC,SACKiD,EAAMjD,SADEiD,EAAM4I,GADwB,OAM3B,KAAvB2K,EAAOyT,aACJ,uBAAMtgB,UAAW2D,EAAQxM,MAAzB,SAAiC0V,EAAOyT,eACxC,QAKZ,eAAC,KAAD,CAAK1gB,GAAI,EAAT,SAEI,eAAC,KAAD,CACIvG,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACNkO,QAnPtB,SAACwF,GACnBA,EAAEC,iBAXW,WACb,IAAIiC,EAAI,eAAQH,GAMhB,OALAG,EAAKsT,aAAejQ,EAAUiQ,aAAe,GAAK,yBAClDtT,EAAKuT,OAASlQ,EAAUkQ,OAAS,GAAK,yBACtCzT,EAAU,eACHE,IAEArB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAU,KAANA,CAAJ,GACrC,CAIM4X,IACC3gB,IAAMsT,KAAN,UAAc+U,GAAd,oDAAyE1P,EACrE,CAAEzY,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAAAC,GAEF,GADAL,GAAW,GACc,UAAtBK,EAASC,KAAKsB,KACb5B,GAAW,GACXqpB,GAAY,GACZ5sB,OAAO2vB,YAAW,WACd/C,GAAY,EACf,GAAE,KACHlY,IAAMzR,MAAMW,EAASC,KAAKgR,QAAQ+a,WACjC,CACD,IAAMxD,EAAcxoB,EAASC,KAAKuoB,aAClCQ,GAAY,GACZC,GAAW,GACX7sB,OAAO2vB,YAAW,WACd9C,GAAW,GACXtpB,GAAW,EACd,GAAE,KACH,IAAIssB,EAAwBjsB,EAASC,KACrCgsB,EAAsBC,uBAAyBtC,KAAEuC,OAAOF,EAAsBC,uBAAuB,gBAErG7C,GAAoB,GAAD,oBAAKD,IAAL,CAAuB6C,KAE1CrC,KAAEvoB,KAAKqnB,EAAW,CAAC,QAAUF,IAAewB,UAAW,EACvDrB,EAAc,aAAID,IAElBlQ,EAAa,2BAAID,GAAL,IAAgBiQ,aAAa,KAC5C,CAEJ,IACAtoB,OAAM,SAAAb,GACN,GAEZ,EA8M2C6I,UAAW,OACXjE,MAAO,CAACC,gBAAgB,WACxB0F,UAAW,eAAC,KAAD,IAPf,8BAaJ,2BAKR,GAGJ,eAAC,KAAD,UACKwf,GAAiBlY,QAAS,EACnB,uCACI,eAAC,KAAD,CAAKpJ,GAAI,GAAI7D,MAAO,CAACrF,UAAU,OAAQ6b,cAAc,QAArD,SACI,eAACH,GAAA,EAAD,CAAMC,QAAM,EAAC6R,YAAU,EAAvB,SACKhD,GAAiB9mB,KAAI,SAACqG,GAAD,OAClB,gBAAC2R,GAAA,EAAK/M,KAAN,CAAWtJ,MAAO,CAACtF,MAAM,QAAQM,OAAO,QAAQ6b,OAAO,qBAAqBzc,OAAO,OAAnF,UACI,gBAACic,GAAA,EAAK3H,OAAN,CAAa1O,MAAO,CAAEooB,YAAY,MAAOptB,OAAO,SAASV,QAAQ,OAAQ4sB,eAAe,QAAQ1sB,WAAY,SAA5G,UAAsH,eAACoe,GAAA,EAAD,CAAMra,KAAK,SAAUlD,MAAM,QAAjJ,OACA,gBAACgb,GAAA,EAAKgS,QAAN,CAAcroB,MAAO,CAACtF,MAAM,QAAQM,OAAO,QAAQV,QAAQ,OAAQ4sB,eAAe,SAAS1sB,WAAY,UAAvG,cAAmH,eAAC,KAAD,CAAiBwF,MAAO,CAAC3E,MAAM,UAAWC,SAAU,UACvK,eAAC+a,GAAA,EAAKgS,QAAN,CAAcroB,MAAO,CAACtF,MAAM,QAAQM,OAAO,OAAOV,QAAQ,OAAQ4sB,eAAe,SAAS1sB,WAAY,SAAUc,SAAU,OAAOD,MAAM,UAAU8E,WAAW,OAAQ0jB,WAAW,yBAA/K,SAA0Mnf,EAAE6f,iBAJ9L,QAW9B,wBAAK,wBAAK,wBAAK,wBAAK,wBAAK,wBACzB,eAAC,KAAD,CAAK1gB,GAAI,GAAT,SACI,eAAC,KAAD,CACIvG,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACNkO,QA/NzB,SAACwF,GAEpB,GADAA,EAAEC,iBACCmW,GAAiBlY,QAAU,EAAE,CAC5B,IAAMqb,EAAanD,GAAiBA,GAAiBlY,OAAS,GAC9Dqb,EAAYL,uBAAwBtC,KAAEuC,OAAOI,EAAYL,uBAAuB,gBAChFtsB,IAAMsT,KAAN,UAAcrT,EAAd,wBAA4C0sB,EACxC,CAAEzsB,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAAAC,GACF8Q,IAAMtR,QAAQ,6BACd6pB,GAAoB,IACpBE,KACAxsB,EAAM+G,WAAW0oB,iBAAgB,EACjCzvB,EAAM0Q,iBAAN,2BAA2B1Q,EAAM2Q,eAAjC,IAAgDC,MAAM,mBAEzD,IACAzN,OAAM,SAAAb,GACHyR,IAAMzR,MAAM,0CACZ+M,QAAQC,IAAIhN,EACf,GACR,MAEGyR,IAAMzR,MAAM,oCAEnB,EAyM+CuK,UAAW,eAAC,KAAD,IANf,+BAcZ,cAuPnC,EClsBcc,qBAlFA,SAAAvM,GAAK,MAAK,CACvBgB,KAAM,CACJR,MAAO,QAETgM,QAAS,CACPpL,SAAUpB,EAAMyM,WAAWC,QAAQ,KAErCC,iBAAkB,CAChBvL,SAAUpB,EAAMyM,WAAWC,QAAQ,IACnCvL,MAAOnB,EAAM4M,QAAQjF,KAAKkF,WAE5BC,KAAM,CACJhE,cAAe,SACfhI,OAAQ,GACRN,MAAO,IAETuM,QAAS,CACPzM,WAAY,UAEd0M,OAAQ,CACNC,UAAW,UAEbC,OAAQ,CACNC,WAAW,aAAD,OAAenN,EAAM4M,QAAQQ,SACvC1D,QAAQ,GAAD,OAAK1J,EAAMG,QAAQkN,KAAnB,cAAkD,EAArBrN,EAAMG,QAAQkN,KAA3C,OAETC,KAAM,CACJnM,MAAOnB,EAAM4M,QAAQW,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,cA9BF,GAkFLlB,EA9Cf,SAAqB3N,GACjB,IAAIsR,EAAUC,cACd,EAAsB7O,oBAAS,GAA/B,mBAAOgtB,EAAP,KAAYC,EAAZ,KACA,EAA0CjtB,mBAAS,CAACkO,MAAM,iBAAkBvD,GAAG,GAAIqF,UAAU,OAAQD,WAAW,SAAUlO,IAAI,CAAC,IAA/H,mBAAOoM,EAAP,KAAsBD,EAAtB,KACQ5B,EAAY9O,EAAZ8O,QACF/H,EAAauK,EAAQhS,UAAYgS,EAAQhS,SAASwH,MAAQwK,EAAQhS,SAASwH,MAAMC,WAAa,CAAC,EAC/Fob,EAAS7Q,EAAQhS,UAAYgS,EAAQhS,SAASwH,MAAQwK,EAAQhS,SAASwH,MAAMqb,OAAS,CAAC,EAM/F,OALE9S,QAAQC,IAAIvI,GACZ3D,qBAAU,WAER,GAAE,CAAC2D,IAGL,uBAAKoE,UAAW2D,EAAQ1M,KAAxB,UACE,sBAAK+I,UAAU,uBAAuBjE,MAAO,CAACrF,UAAU,MAAOG,aAAa,SAA5E,SACH,qBAAImJ,UAAU,aAAd,SACC,qBAAIA,UAAU,yBAAd,SAAuC,oCAAK,eAAC,IAAD,CAAMvE,GAAI,IAAV,oBAAL,8BAGrC,eAAC,KAAD,UACE,gBAACgpB,GAAA,EAAD,WACI,eAAC,GAAD,CAAmB7oB,WAAYA,EAAY4oB,OAAQA,EAAQjf,iBAAkBA,IAC7E,eAAC,GAAD,CAAS3J,WAAYA,EAAY2oB,IAAKA,EAAKhf,iBAAkBA,IAC7D,wBACqB,mBAAtBC,EAAcC,OAA4B,eAAC,GAAD,CAAe7J,WAAYA,EAAY2J,iBAAkBA,EAAkBC,cAAeA,EAAewR,OAAQA,IACrI,eAAtBxR,EAAcC,OAAwB,eAACif,GAAD,CAAY9oB,WAAYA,EAAY2J,iBAAkBA,EAAkBC,cAAeA,EAAewR,OAAQA,IAC9H,iBAAtBxR,EAAcC,OAA2B,eAAC,GAAD,CAAa7J,WAAYA,EAAY2J,iBAAkBA,EAAkBC,cAAeA,EAAewR,OAAQA,IAElI,sBAAtBxR,EAAcC,OAAgC,eAAC,GAAD,CAAsB7J,WAAYA,EAAY2J,iBAAkBA,EAAkBC,cAAeA,EAAewR,OAAQA,IAChJ,uBAAtBxR,EAAcC,OAAiC,eAACkf,GAAD,CAAmC/oB,WAAYA,EAAY2J,iBAAkBA,EAAkBC,cAAeA,EAAewR,OAAQA,IAC9J,mBAAtBxR,EAAcC,OAA6B,eAAC,GAAD,CAA6B7J,WAAYA,EAAY2J,iBAAkBA,EAAkBC,cAAeA,EAAewR,OAAQA,IACpJ,eAAtBxR,EAAcC,OAAyB,eAAC,GAAD,IACjB,sBAAtBD,EAAcC,OAAgC,eAAC,GAAD,CAAsB7J,WAAYA,EAAY2J,iBAAkBA,EAAkBC,cAAeA,EAAewR,OAAQA,IAChJ,oBAAtBxR,EAAcC,OAA8B,eAAC,GAAD,CAAgB7J,WAAYA,EAAY2J,iBAAkBA,EAAkBC,cAAeA,WAOjJ,I,0FCrEDof,KAAQC,IAAIC,KAAeC,KAAUC,KAAQC,MAE7C,IAAM5lB,GAAYrJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF0f,SAAU,EACV,gBAAgB,CACZvf,MAAM,OACN8E,WAAW,QAEf,kBAAkB,CACdoF,aAAa,UACbvK,OAAO,QAEX,6BAA8B,CAC1BuK,aAAc,+CAElB,4BAA6B,CACzBjL,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN8E,WAAW,SAGnB4c,KAAM,CACF9c,gBAAiB/F,EAAM4M,QAAQkW,WAAWC,SAE9CC,OAAQ,CACJ5iB,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QAhEW,IAipDd6tB,GA5kDU,SAACrwB,GACtB,IAiGIwrB,EAjGJ,EAAiC9oB,mBACzB,CACI4tB,QAAQ,EACRzgB,QAAS,GACT0gB,QAAS,GACT5gB,aAAc,GACdxJ,YAAa,GACbqqB,UAAU,EACVC,iBAAkB,KAClB9qB,UAAW,GACX+qB,SAAU,GACVtsB,WAAY,GACZusB,UAAW,GACXC,gBAAiB,GACjBC,YAAa,GACbC,mBAAmB,GACnBzN,mBAAoB,GACpB0N,uBAAwB,KACxB7qB,IAAI,GACJwJ,YAAY,GACZshB,eAAe,GACfztB,IAAI,GACJ0tB,UAAU,GACVC,QAAQ,GACRC,SAAS,GACTC,MAAM,GACNC,UAAU,KA1BtB,mBAAOC,EAAP,KAAkBC,EAAlB,KA8BA,EAAiC7uB,mBACrB,CACImN,QAAQ,GACR2hB,MAAM,GACN7rB,UAAW,GACX8rB,MAAO,GACPC,eAAgB,GAChBC,SAAU,GACVC,WAAY,KAR5B,mBAAOnH,EAAP,KAAkBC,EAAlB,KAaA,EAA0BhoB,oBAAS,IAAIe,MAAOouB,cAAcC,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAAvF,mBACA,GADA,UACgCrvB,mBAAS,KAAzC,mBAAOsvB,EAAP,KAAiBC,EAAjB,KACA,EAA4BvvB,oBAAS,GAArC,mBAAO4S,EAAP,KACA,GADA,KACwD5S,oBAAS,IAAjE,mBAAOwvB,EAAP,KAA6BC,EAA7B,KACA,EAAsCzvB,oBAAS,GAA/C,mBAAO0vB,EAAP,KAAoBC,EAApB,KACA,EAAwC3vB,oBAAS,GAAjD,mBAAO4vB,EAAP,KAAqBC,EAArB,KACA,EAAwC7vB,mBAAS,MAAjD,mBACA,GADA,UAC6BA,mBAAS,KAAtC,mBAAO8vB,EAAP,KAAgBC,EAAhB,KACA,EAAuD/vB,mBAAS,IAAhE,mBAAOgwB,EAAP,KAA6BC,EAA7B,KACA,EAA+CjwB,mBAAS,IAAxD,oBAAOkwB,GAAP,MAAyBC,GAAzB,MACA,GAAiDnwB,mBAAS,IAA1D,qBAAOowB,GAAP,MAA0BC,GAA1B,MACA,GAAqDrwB,mBAAS,IAA9D,qBAAOswB,GAAP,MAA4BC,GAA5B,MACA,GAAkCvwB,mBAAS,IAA3C,qBAAOwwB,GAAP,MAAkBC,GAAlB,MACA,GAA4BzwB,mBAAS,IAArC,qBAAO0wB,GAAP,MAAeC,GAAf,MACA,GAAkC3wB,mBAAS,IAA3C,qBAAO4wB,GAAP,MAAkBC,GAAlB,MACA,GAA4B7wB,mBAAS,CAAC,GAAtC,qBAAOsV,GAAP,MAAeC,GAAf,MACA,GAAmEvV,mBAAS,IAA5E,qBAAmC8wB,IAAnC,aAEMC,GAAazzB,EAAMV,UAAYU,EAAMV,SAASwH,MAAQ9G,EAAMV,SAASwH,MAAM4sB,KAAO,KAClF5kB,GAAUtE,KACV8G,GAAUC,cACVjS,GAAWq0B,cAEhB,GAAuCjxB,oBAAS,GAAhD,qBAAqBkxB,IAArB,aAEA,GAAkClxB,mBAAS,CACZ0gB,aAAc,GACd0H,0BAA2B,GAC3B+I,oBAAqB,GACrBlR,MAAO,CAAC,EACRmR,gBAAiB,GACjBC,aAAc,GACdC,UAAU,CAAC,EACXhf,SAAU,EACVif,cAAe,GACfC,eAAgB,GAChBC,UAAU,KAXzC,qBAAO3Y,GAAP,MAAkBC,GAAlB,MAaA,GAAoC/Y,mBAAS,IAA7C,qBAAOqnB,GAAP,MAAmBqK,GAAnB,MACA,GAA4C1xB,mBAAS,IAArD,qBAAuB2xB,IAAvB,aACA,GAAkC3xB,mBAAS,IAA3C,qBAAOsnB,GAAP,MAAkB9a,GAAlB,MACA,GAA0CxM,mBAAS,IAAnD,qBAAsB4xB,IAAtB,aACA,GAAgC5xB,mBAAS,IAAzC,qBAAiBgW,IAAjB,aACA,GAAoBhW,mBAAS,IAA7B,qBAAW6xB,IAAX,aACA,GAA8C7xB,mBAAS,IAAvD,qBAAwB8xB,IAAxB,aAEA,GAAoC9xB,oBAAS,GAA7C,qBAGA,IAHA,YAGiDA,oBAAS,IAA1D,qBAAO+xB,GAAP,MAA0BC,GAA1B,MACA,GAAmDhyB,oBAAS,GAA5D,qBAA2BiyB,IAA3B,aACA,GAAwBhqB,IAAMjI,UAAS,GAAvC,qBAAOkyB,GAAP,MAAaC,GAAb,MACMlf,GAAS,kBAAMkf,IAASD,GAAf,EACVE,GAAgBx1B,GAASwH,MAE/B0kB,EAAYsJ,GAAgBA,GAActJ,UAAY,KAEtDpoB,qBAAU,WACN2xB,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA/Y,KACAgZ,KACAC,KACAC,KAEGrE,EAAUjO,mBAAqBiO,EAAU/tB,KACxCqyB,MAAM,6DAGb,GAAE,CAACtE,EAAUjO,qBAEd,IAAM0R,GAAcc,sBAAW,gCAAC,uHAEDhzB,IAAMrD,IAAN,UAAasD,EAAb,+BAAmD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF1F,OAElB8D,EAFkB,OAGxBwvB,EAAWxvB,EAASC,MAHI,uGAO7B,IACG8xB,GAAoBa,sBAAW,gCAAC,uHAEPhzB,IAAMrD,IAAN,UAAasD,EAAb,0CAA8D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF/F,OAExB8D,EAFwB,OAG9B0vB,EAAwB1vB,EAASC,MAHH,uGAMnC,IACG+xB,GAAgBY,sBAAW,gCAAC,uHAEHhzB,IAAMrD,IAAN,UAAasD,EAAb,qCAAyD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF9F,OAEpB8D,EAFoB,OAG1B4vB,GAAoB5vB,EAASC,MAHH,uGAO/B,IACGgyB,GAAiBW,sBAAW,gCAAC,uHAEJhzB,IAAMrD,IAAN,UAAasD,EAAb,sCAA0D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF9F,OAErB8D,EAFqB,OAG3B8vB,GAAqB9vB,EAASC,MAHH,uGAOhC,IACGiyB,GAAoBU,sBAAW,gCAAC,uHAEThzB,IAAMrD,IAAN,UAAasD,EAAb,wCAA4D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF3F,OAE1B8D,EAF0B,OAGhCgwB,GAAuBhwB,EAASC,MAHA,uGAMnC,IACGkyB,GAAsBS,sBAAW,gCAAC,8GACbhzB,IAAMrD,IAAN,UAAasD,EAAb,kDAAsE,CAAEC,QAAS,CAAC,+BAA4B5D,MADjG,OAC9B8D,EAD8B,OAEpCuwB,GAA8BvwB,EAASC,MAFH,2CAGrC,IAOKyyB,GAAY,WAChB9yB,IACCrD,IADD,UACQsD,EADR,kDAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHkwB,GAAalwB,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACJ,EAuBA,IAyCKwzB,GAA0B,SAAC7f,GACP,UAAlBA,EAAE+G,OAAOvY,MACT4tB,GAAe,GACU,aAAlBpc,EAAE+G,OAAOvY,OAChB4tB,GAAe,EAEtB,EAwBK0D,GAAyB,SAAA9f,GAM3B,GALAsb,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,SAErC,UAAhBwR,EAAE+G,OAAOvX,MAAmC,QAAjBwQ,EAAE+G,OAAOvY,OACnCmvB,IAAgB,GAED,cAAhB3d,EAAE+G,OAAOvX,MAAuC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CAClD,IAAMgB,EAAOuwB,GAAa/f,EAAE+G,OAAOvY,OACnC8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOA,IAClD,CACD,GAAmB,aAAhBwQ,EAAE+G,OAAOvX,MAAsC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CACjD,IAAMgB,EAAOuwB,GAAa/f,EAAE+G,OAAOvY,OACnC8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOA,IAClD,CACD,GAAmB,eAAhBwQ,EAAE+G,OAAOvX,MAAwC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CACnD,IAAMgB,EAAOuwB,GAAa/f,EAAE+G,OAAOvY,OACnC8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOA,IAClD,CACD,GAAmB,cAAhBwQ,EAAE+G,OAAOvX,MAAuC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CAClD,IAAMwxB,EAAiBC,GAAcjgB,EAAE+G,OAAOvY,OAC9C8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOwwB,IAClD,CACD,GAAmB,mBAAhBhgB,EAAE+G,OAAOvX,MAA4C,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CAAC,IAC7C0xB,EAD4C,iDAC3D,qGACUC,EAAengB,EAAE+G,OAAOvY,MADlC,SAE2B5B,IAAMsT,KAAN,UAAcrT,EAAd,iCAAsDszB,EACrE,CAAErzB,QAAS,CAAC,+BAA4B5D,GAAS,eAAgB,gBAH7E,QAKuB,IALvB,OAKgB+D,MACRwxB,IAAqB,GACrB1c,GAAO3T,eAAe,GACtBoX,GAAY,2BAAMD,IAAN,IAAkBzV,SAAUkQ,EAAE+G,OAAOvY,SACjDkwB,IAAsB,KAEtB3c,GAAO3T,eAAe,GACtB0P,IAAMzR,MAAM,wCACZoyB,IAAqB,GACrBC,IAAsB,IAd9B,2CAD2D,qDAkB3DwB,GACC,CAEJ,EA4CKE,GAAkB,SAAC3E,GACrB,IAAM4E,EAAetD,GAAoB1uB,MAAK,SAAAC,GAAG,OAAIA,EAAI8I,IAAMqkB,CAAd,IACjD,OAAO4E,EAAeA,EAAa90B,QAAU,EAChD,EACK+0B,GAA6B,SAAAtgB,GAC/ByU,EAAY,2BAAMD,GAAN,mBAAmBxU,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAC3D,EAEK+e,GAAW,WACb,IAAIrL,EAAI,eAAQH,IAwBhB,OAvBIG,EAAKxS,UAAY2rB,EAAU3rB,UAAY,GAAK,yBAC5CwS,EAAK9T,eAAiBitB,EAAUjtB,eAAiB,GAAK,gCAGtD8T,EAAKwZ,SAAWL,EAAUK,SAAW,GAAK,0BAC1CxZ,EAAKiZ,MAAQE,EAAUF,MAAQ,GAAK,sBACpCjZ,EAAKkL,mBAAqBiO,EAAUjO,mBAAqB,GAAK,oCAC9DlL,EAAK0Y,YAAcS,EAAUT,YAAc,GAAK,yBAChD1Y,EAAKtI,QAAUyhB,EAAUzhB,QAAU,GAAK,uBACxCsI,EAAKzI,YAAc4hB,EAAU5hB,YAAc,GAAK,6BAChDyI,EAAK8Y,UAAYK,EAAUL,UAAY,GAAK,uBAC5C9Y,EAAK+Y,QAAUI,EAAUJ,QAAU,GAAK,qBACxC/Y,EAAKgZ,SAAWG,EAAUH,SAAW,GAAK,4BAE1ChZ,EAAK+b,eAAiB1Y,GAAU0Y,eAAiB,GAAK,yBACtD/b,EAAKiL,aAAe5H,GAAU4H,aAAe,GAAK,6BAClDjL,EAAK2S,0BAA4BtP,GAAUsP,0BAA4B,GAAK,qCAC5E3S,EAAK0b,oBAAsBrY,GAAUqY,oBAAsB,GAAK,6BAChE1b,EAAK2b,gBAAkBtY,GAAUsY,gBAAkB,GAAK,8BACxD3b,EAAK4b,aAAevY,GAAUuY,aAAe,GAAK,8BAClD5b,EAAK8b,cAAgBzY,GAAUyY,cAAgB,GAAK,8BAEhDhc,GAAU,eAAKE,IAChBrB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,GACrC,EACK4qB,GAAY,iDAAG,WAAOvgB,GAAP,8FACjBA,EAAEC,kBACEsN,KAFa,wBAGTiT,EAAgB,GAECzE,GAAYA,EAAS7d,OAAO,GAAK6d,EAASzsB,KAAI,SAACqG,GAEhE,IAAM8qB,EAAc,CACpB7mB,QAAS,CACL8mB,KAAM,CACF/qB,EAAEiE,UAGVF,aAAc,CACVnL,KAAM,QACNC,MAAOmH,EAAE4lB,OAEb7rB,UAAWiG,EAAEjG,UACbixB,SAAUhrB,EAAEjG,UAAY,IAAMiG,EAAEgmB,WAAa,IAAMhmB,EAAE+lB,SACrDD,eAAgB9lB,EAAE8lB,eAClB9rB,QAASgG,EAAE+lB,SACXhB,UAAW/kB,EAAEgmB,YAGjB6E,EAAgBpkB,KAAKqkB,EACpB,IAzBY,SA2BHG,EAAc,CAChBvG,QAAQ,EACRzgB,QAAS,CACL,CACI,KAAQyhB,EAAUzhB,QAClB,UAAayhB,EAAUL,UACvB,SAAYK,EAAUH,SACtB,KAAQ,CACJG,EAAUwF,UAEd,mBAAsB,EACtB,WAAc,GACd,QAAWxF,EAAUJ,UAG7BX,QAASkG,EACT9mB,aAAc,GACdxJ,YAAamrB,EAAU/tB,IACvBitB,UAAU,EACVC,iBAAkB,KAClB9qB,UAAW2rB,EAAU3rB,UACrB+qB,SAAUY,EAAUF,MACpBA,MAAOE,EAAUF,MACjBhtB,WAAY,CACR,CACI,WAAc,EACd,KAAQ,iBACR,MAASktB,EAAUjtB,iBAG3BssB,UAAWW,EAAUM,WACrBhB,gBAAiBU,EAAUV,gBAC3BhrB,QAAS0rB,EAAUK,SACnBd,YAAaS,EAAUT,YACvBC,mBAAoBQ,EAAUR,mBAC9BzN,mBAAoBiO,EAAUjO,mBAC9B0N,uBAAiD,UAAzBO,EAAUnrB,YAClCkrB,UAAUC,EAAUD,WAElBG,EAAQ,CACV,KAAQ,QACR,MAASF,EAAU5hB,aAEnB4hB,EAAUG,QACJA,EAAQ,CACV,KAAQ,QACR,MAASH,EAAUG,OAEvBoF,EAAYlnB,aAAa0C,KAAKof,IAE9BH,EAAUN,iBACJA,EAAiB,CACnB,KAAQ,WACR,MAASM,EAAUN,gBAEvB6F,EAAYlnB,aAAa0C,KAAK2e,IAElC6F,EAAYlnB,aAAa0C,KAAKmf,GAC9BqF,EAAYxpB,GAAKme,EACjBhQ,GAAUwY,UAAU6C,EACpBrb,GAAUxG,SAASwW,EAvFV,UAwFc3oB,IAAMsT,KAAN,UAAcrT,EAAd,QAA6B0Y,GAAW,CAAEzY,QAAS,CAAC,+BAA4B5D,MAxF9F,eAyFT4U,IAAMtR,QAAQ,iCACd6O,GAAQe,KAAK,KA1FJ,kDA4FN,KAAMpP,UAAY,KAAMA,SAASC,OAC5B8Q,EAAe,KAAM/Q,SAASC,MAA+C,KAAvC,KAAMD,SAASC,KAAK+Q,SAASC,QAAe,KAAMjR,SAASC,KAAK+Q,SAASC,QAAW,yCAC9HH,IAAMzR,MAAM0R,IA9FP,0DAAH,sDAoGZgiB,GAAa,SAACvxB,GAEhB,OADeA,EAAMstB,QAAQ,WAAY,GAE5C,EAEKsD,GAAgB,WACdxyB,IACKrD,IADL,UACYsD,EADZ,uCAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHmxB,GAAcnxB,EAASC,KAC1B,IACAC,OAAM,SAACb,GAEP,GACZ,EAEKgzB,GAAgB,WACdzyB,IACCrD,IADD,UACQsD,EADR,2CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHoxB,GAAkBpxB,EAASC,KAC9B,IACAC,OAAM,SAACb,GAEP,GACR,EAEKizB,GAAW,WACb1yB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHiM,GAAajM,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKkzB,GAAmB,WACrB3yB,IACCrD,IADD,UACQsD,EADR,8CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHqxB,GAAiBrxB,EAASC,KAC7B,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKma,GAAU,WACZ5Z,IACCrD,IADD,UACQsD,EADR,qCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHyV,GAAYzV,EAASC,KACxB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKmzB,GAAI,WACN5yB,IACCrD,IADD,UACQsD,EADR,wCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHsxB,GAAMtxB,EAASC,KAClB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKozB,GAAiB,WACnB7yB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHuxB,GAAmBvxB,EAASC,KAC/B,IACAC,OAAM,SAACb,GAEP,GACJ,EACKya,GAAoB,SAAA9G,GACtBgC,GAAU,2BAAID,IAAL,mBAAc/B,EAAE+G,OAAOvX,KAAO,MACvCgW,GAAY,2BAAMD,IAAN,mBAAmBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAE3D,EAMKsyB,GAAsB,SAAC9gB,EAAG+gB,GAExBzF,EAAa,2BAAID,GAAL,mBAAkB0F,EAAY/gB,EAAEghB,MAAM,EADxC,MAEjB,EAEKf,GAAc,SAACjgB,GAGjB,OADsBA,EAAEghB,MAAM,EADhB,GAGjB,EAMD,OACI,uCACA,eAAC,IAAD,CAAgBC,UAAW,IAAMC,iBAAe,IAChD,sBAAKhsB,UAAU,uBAAuBjE,MAAO,CAACrF,UAAU,MAAOG,aAAa,SAA5E,SACL,qBAAImJ,UAAU,aAAd,SACC,qBAAIA,UAAU,yBAAd,SAAuC,oCAAK,eAAC,IAAD,CAAMvE,GAAI,IAAV,oBAAL,iCAGjC,eAAC,IAAD,CACMA,GAAI,CACAC,SAAU,IACVC,MAAO,SAHjB,SAKM,eAACM,GAAA,EAAD,CACIH,QAAQ,YACR1E,MAAM,UACN4I,UAAU,yBACVjE,MAAO,CAACC,gBAAgB,UAAUE,WAAW,SAAU+vB,aAAa,SACpEvqB,UAAW,eAAC,KAAD,IALf,SAOI,uBAAM3F,MAAO,CAAE4F,cAAe,aAAcvK,MAAM,QAAlD,uBAGR,wBAAM,wBAEN,eAAC,KAAD,CAAM4I,UAAW2D,GAAQ1M,KAAzB,SACI,eAAC,KAAD,UAEI,sBAAK+I,UAAU,sBAAf,SACI,gBAACksB,GAAA,EAAD,WACI,uBAAKlsB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAWoF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,SAAgE,OAAbkxB,GAAoB,oBAAsB,4BAGjG,sBAAKtoB,UAAU,YAAf,SACI,uBAAKA,UAAU,aAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,qBAAX,oCACA,eAACrN,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,qBACL4H,GAAG,qBACH2Q,IAAI,aACJE,IAAM7X,GAAO,IAAI5C,MAAQ6C,OAAO,cAChC7B,MAAO6sB,EAAUjO,mBACjB7L,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAEzB,KAA7BuL,GAAOqL,mBACP,uBAAMlY,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOqL,qBACpC,QAIZ,sBAAKlY,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,+BACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,iBACL4H,GAAG,iBACH5I,MAAO6sB,EAAUjtB,eACjBmT,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAoBtR,aAAa,YAE5B,KAAzBuL,GAAO3T,eACP,uBAAM8G,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO3T,iBACpC,IACiB,IAApBowB,GACG,uBAAMtpB,UAAW2D,GAAQxM,MAAzB,SAAiC,kCACjC,QAMZ,sBAAK6I,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,0BACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACHsR,SAAS,OACTla,MAAO,QAEPyC,MAAO,CAAC6W,OAAQ,oBAAoBtR,aAAa,oBAQjE,uBAAKtB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,2BACA,eAACrN,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACH5I,MAAO6sB,EAAU3rB,UACjB6R,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAEjC,KAApBuL,GAAOrS,UACR,uBAAMwF,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOrS,YACpC,QAIZ,sBAAKwF,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAO6sB,EAAUM,WACjBpa,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,iBAK9D,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAO6sB,EAAUK,SACjBna,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAEnC,KAAnBuL,GAAO2Z,SACP,uBAAMxmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO2Z,WACpC,WAKhB,uBAAKxmB,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,0BACQ1K,UAAU,eACV1F,KAAK,QACL4H,GAAG,QACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUF,MACjBlqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAN1D,UAQQ,yBAAQhI,MAAO,GAAf,oBACC+tB,EAAQjtB,KAAI,SAACS,EAAQgM,GAAT,OACb,yBAAwBvN,MAAOuB,EAAOqH,GAAtC,SAA2CrH,EAAOxE,SAArCwE,EAAOqH,GADP,OAIA,KAAhB2K,GAAOoZ,MACZ,uBAAMjmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOoZ,QACpC,QAGZ,sBAAKjmB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,sBAAK1K,UAAU,QAAf,SACI,mCACI,wBACI3G,KAAK,QACLC,MAAM,SACNgB,KAAK,cACL6xB,gBAAc,EAEd9f,SAAU,SAACvB,GAAD,OAAO6f,GAAwB7f,EAA/B,EACV/O,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAR1D,eAYJ,sBAAKtB,UAAU,QAAf,SACI,mCACI,wBACI3G,KAAK,QACLC,MAAM,YACNgB,KAAK,cAEL+R,SAAU,SAACvB,GAAD,OAAO6f,GAAwB7f,EAA/B,EACV/O,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAP1D,uBAcZ,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,MACLuY,IAAI,aACJ3Q,GAAG,MACH6Q,IAAKoT,EAAUjO,mBACf5e,MAAO6sB,EAAU/tB,IACjBiU,SA9mB5B,SAACvB,GACrB,GAAIA,EAAE+G,OAAOvY,MAAO,CAChB,IAAMjB,EAAQ,IAAIC,KACZI,EAAY,IAAIJ,KAAKwS,EAAE+G,OAAOvY,OAChCX,EAAUN,EAAMO,cAAgBF,EAAUE,cACxCC,EAAIR,EAAMS,WAAaJ,EAAUI,WAChCD,EAAE,IACD4xB,MAAM,mCACNzD,GAAwB,IAExBA,GAAwB,IAExBnuB,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YACjDJ,IAEJwtB,EAAUprB,IAAIpC,CAEb,MACGytB,EAAa,2BAAID,GAAL,IAAgBprB,IAAM,MAEtCqrB,EAAa,2BAAID,GAAL,IAAgB/tB,IAAK0S,EAAE+G,OAAOvY,SACvB,KAAhB6sB,EAAUprB,KAAYorB,EAAUprB,KAAK,IACpCyP,IAGf,EAslBmDzO,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,iBAM9D,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,kBACA,wBAEIrR,KAAK,SACLiB,KAAK,MACL0F,UAAU,eACVkC,GAAG,MACH2Q,IAAI,IACJvZ,MAAO6sB,EAAUprB,IACjByY,SAAUyT,EACV5a,SAhmB5B,SAACvB,GACrB,IAAKmc,GAAenc,EAAE+G,OAAOvY,MAAO,CACZ,KAAjBwR,EAAE+G,OAAOvY,OAAcwR,EAAE+G,OAAOvY,OAAO,IACtCkR,KAEDM,EAAE+G,OAAOvY,OAAQ,EAChB0tB,GAAwB,GAExBA,GAAwB,GAE5B,IAAMoF,EAAc,IAAI9zB,KACxB8zB,EAAYC,QAAQ,IACpBD,EAAYE,SAAS,GACrB,IACMC,EADSrxB,GAAOkxB,EAAY1F,eACZ7B,KAAuB,EAAlB/Z,EAAE+G,OAAOvY,MAAa,SAEjD6sB,EAAU/tB,IAAK8C,GAAOqxB,GAAQpxB,OAAO,aAExC,CACDirB,EAAa,2BAAID,GAAL,IAAgBprB,IAAK2X,KAAK8Z,IAAI1hB,EAAE+G,OAAOvY,SACtD,EA6kBmDyC,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,oBAMlE,uBAAKtB,UAAW,MAAhB,UAGQ,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACI1K,UAAU,eACV1F,KAAK,kBACL4H,GAAG,kBACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUV,gBACjB1pB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,GAAf,oBACCiuB,EAAqBntB,KAAI,SAACqyB,EAAqB5lB,GAAtB,OACtB,yBAAqCvN,MAAOmzB,EAAoBvqB,GAAhE,SAAqEuqB,EAAoBp2B,SAA5Eo2B,EAAoBvqB,GADX,YAQtC,sBAAKlC,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,kCACA,0BACI1K,UAAU,eACV1F,KAAK,qBACL4H,GAAG,qBACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUR,mBACjB5pB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,GAAf,oBACCquB,GAAkBvtB,KAAI,SAACsyB,EAAkB7lB,GAAnB,OACnB,yBAAkCvN,MAAOozB,EAAiBxqB,GAA1D,SAA+DwqB,EAAiBr2B,SAAnEq2B,EAAiBxqB,GADX,OAIG,KAA7B2K,GAAO8Y,mBACR,uBAAM3lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO8Y,qBACpC,QAIhB,sBAAK3lB,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,0BACI1K,UAAU,eACV1F,KAAK,cACL4H,GAAG,cACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUT,YACjB3pB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAQI,yBAAQhI,MAAO,GAAf,oBACCmuB,GAAiBrtB,KAAI,SAACuyB,EAAiB9lB,GAAlB,OAClB,yBAAiCvN,MAAOqzB,EAAgBzqB,GAAxD,SAA6DyqB,EAAgBt2B,SAAhEs2B,EAAgBzqB,GADX,OAIH,KAAtB2K,GAAO6Y,YACR,uBAAM1lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO6Y,cACpC,QAGZ,sBAAK1lB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,8CACA,wBACIhY,UAAU,eACV3G,KAAK,SACLiB,KAAK,YACLhB,MAAO6sB,EAAUD,UACjBhkB,GAAG,YACHmK,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAoBtR,aAAa,4BAW7E,uBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAWoF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,+BAGJ,uBAAK4I,UAAU,YAAf,UACI,uBAAKA,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,eAAC,KAAD,CACIkiB,eAAgB,CAACn2B,MAAM,OAAOmc,OAAQ,qBACtCia,WAAY,CAACp2B,MAAM,OAAO6K,aAAa,OACvCwrB,QAAS,KACTC,YAAY,kBACZC,UAAW,EACX1yB,KAAK,cACL4H,GAAG,cACH+qB,MAAO,CAACC,GAAI,eAAgBC,GAAI,mBAChC7zB,MAAO6sB,EAAU5hB,YAClB8H,SAAU,SAACvB,GAAK8gB,GAAsB9gB,EAAE,cAAe,IAGnC,KAAtB+B,GAAOtI,YACJ,uBAAMvE,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOtI,cACpC,QAOhB,sBAAKvE,UAAU,sBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,eAAC,KAAD,CACIkiB,eAAgB,CAACn2B,MAAM,OAAOmc,OAAQ,qBACtCia,WAAY,CAACp2B,MAAM,OAAO6K,aAAa,OACvCwrB,QAAS,KACTC,YAAY,kBACZzzB,MAAO6sB,EAAUN,eACjBoH,MAAO,CAACC,GAAI,eAAgBC,GAAI,mBAChC9gB,SAAU,SAACvB,GAAK8gB,GAAsB9gB,EAAE,iBAAkB,SAStE,sBAAK9K,UAAU,sBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,wBACI1K,UAAU,eACV3G,KAAK,QACLiB,KAAK,QACL4H,GAAG,QACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUG,MACjBvqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDsJ,UAAQ,YAOxB,uBAAK5K,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,wBACA,0BACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACHnG,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDhI,MAAO6sB,EAAUL,UACjBzZ,SAn1B7B,SAAAvB,GACf,IAAMsiB,EAActiB,EAAE+G,OAAOvY,MAC7B4K,QAAQC,IAAIipB,GAKhB,SAA6BA,GACzB11B,IACCrD,IADD,UACQsD,EADR,wDAC+Dy1B,GAC3D,CAAEx1B,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHoM,QAAQC,IAAIrM,EAASC,MACrBmwB,GAAUpwB,EAASC,KACtB,IACAC,OAAM,SAACb,GAEP,GACJ,CAhBOk2B,CAAoBD,GACpBhH,EAAa,2BAAKD,GAAN,IAAiBL,UAAWsH,IAC/C,EAu0B2C,UASI,yBAAQ9zB,MAAO,GAAf,oBACCyuB,GAAU3tB,KAAI,SAACd,EAAOuN,GAAR,OACX,yBAAoBvN,MAAOA,EAAM4I,GAAjC,SACK5I,EAAMgB,MADEuM,EADF,OAME,KAApBgG,GAAOiZ,UACJ,uBAAM9lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOiZ,YACpC,QAIhB,sBAAK9lB,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,UACL4H,GAAG,UACH5I,MAAO6sB,EAAUJ,QACjBhqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAv1B1B,SAAAvB,GACd,IAAMib,EAAUjb,EAAE+G,OAAOvY,MACzB8sB,EAAa,2BAAKD,GAAN,IAAiBJ,QAASjb,EAAE+G,OAAOvY,SAC/C5B,IACCrD,IADD,UACQsD,EADR,wDAC+DouB,GAC3D,CAAEnuB,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHswB,GAAatwB,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACR,EAm0B2C,UASI,yBAAQmC,MAAM,GAAd,oBACC2uB,GAAO7tB,KAAI,SAACd,EAAOuN,GAAR,OACR,yBAAoBvN,MAAOA,EAAM4I,GAAjC,SACK5I,EAAMgB,MADEuM,EADL,OAMG,KAAlBgG,GAAOkZ,QACJ,uBAAM/lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOkZ,UACpC,QAIhB,sBAAK/lB,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sCACA,0BACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAO6sB,EAAUH,SACjBjqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAUue,GAPd,UASI,yBAAQtxB,MAAM,GAAd,oBACC6uB,GAAU/tB,KAAI,SAACd,EAAOuN,GAAR,OACX,yBAAoBvN,MAAOA,EAAM4I,GAAjC,SACK5I,EAAMgB,MADEuM,EADF,OAMC,KAAnBgG,GAAOmZ,SACJ,uBAAMhmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOmZ,WACpC,WAKpB,uBAAKhmB,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,8BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,UACL4H,GAAG,UACHmK,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGpC,KAAlBuL,GAAOnI,QACH,uBAAM1E,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOnI,UACpC,QAIhB,sBAAK1E,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACHmK,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,0BAU1E,uBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAWoF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,0CAEJ,uBAAK4I,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UAEQ6mB,GAAYA,EAAS7d,OAAS,GAC1B,sBAAKhJ,UAAU,sBAAf,SACI,yBAAOjE,MAAO,CAAEtF,MAAO,QAAUuJ,UAAU,OAA3C,UACI,wBAAOA,UAAU,OAAjB,SACA,gCACI,oDACA,uCACA,wCACA,0CACA,+CAGJ,wBAAOA,UAAU,OAAjB,SACC6mB,EAASzsB,KAAI,SAAC4P,EAAMnD,GACjB,OACI,sBAAqB7G,UAAU,OAA/B,UACI,8BACIkrB,GAAgBlhB,EAAKuc,kBAEzB,8BACIvc,EAAKxP,UAAY,IAAOwP,EAAKyc,WAAa,IAAMzc,EAAKwc,WAEzD,8BACQxc,EAAKqc,QAEb,8BACQrc,EAAKtF,UAEb,gCACI,yBAAQrL,KAAK,SACL2G,UAAU,2CACVsF,QAAS,kBAnzB1D,SAACwO,EAAUjN,GAClC0Y,EAAazL,GACbsT,GAAgB,GAChBP,EAAStS,OAAO1N,EAAO,EAC1B,CA+yB0FymB,CAAmBtjB,EAAMnD,EAA/B,EAFjB,SAII,eAAC,KAAD,CAAiB9D,KAAK,WAL9B,WAQI,yBACI1J,KAAK,SACL2G,UAAU,kCACVsF,QAAS,SAACwF,GAAD,OA/zBpD,SAACjE,GAC1BggB,EAAStS,OAAO1N,EAAO,GACvBigB,EAAY,aAAID,GACnB,CA4zBuF0G,CAAqB1mB,EAA5B,EAHb,SAKI,eAAC,KAAD,CAAiB9D,KAAK,iBA1BzBiH,EAAKnD,MA+BrB,WAMjB,sBAAK7G,UAAU,sBAAf,SAEQmnB,GACI,sBAAKnnB,UAAU,OAAf,SACI,uBAAKA,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,mBAAX,iCACA,0BACIhY,UAAU,eACV1F,KAAK,iBACL4H,GAAG,iBACH5I,MAAOgmB,EAAUiH,eACjBxqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,GANd,UAQI,yBAAQ9xB,MAAO,GAAf,oBACCuuB,GAAoBztB,KAAI,SAAC0Z,EAAUjN,GAAX,OACrB,yBAA0BvN,MAAOwa,EAAS5R,GAA1C,SAA+C4R,EAASzd,SAA3Cyd,EAAS5R,GADD,OAIH,KAAzB2K,GAAO0Z,eACR,uBAAMvmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO0Z,iBACpC,QAIZ,sBAAKvmB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,aAAX,0BACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACLhB,MAAOgmB,EAAU9kB,UACjB0H,GAAG,YACHnG,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,KAEO,KAApBve,GAAOrS,UACR,uBAAMwF,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOrS,YACpC,QAIZ,sBAAKwF,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOgmB,EAAUmH,WACjB1qB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,UAMtB,sBAAKprB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAOgmB,EAAUkH,SACjBzqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,KAEM,KAAnBve,GAAO2Z,SACR,uBAAMxmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO2Z,WACpC,WAKhB,uBAAKxmB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,qBAAX,0BACA,eAAC,KAAD,CACI4U,eAAgB,CAACn2B,MAAM,OAAOmc,OAAQ,qBACtCia,WAAY,CAACp2B,MAAM,OAAO6K,aAAa,OACvCwrB,QAAS,KACTC,YAAY,kBACZzyB,KAAK,QACLhB,MAAOgmB,EAAU+G,MACjB4G,MAAO,CAACC,GAAI,eAAgBC,GAAI,mBAChCjrB,GAAG,QAEHmK,SAAU,SAACvB,IA/qB5D,SAACA,EAAG+gB,GAEnBtM,EAAa,2BAAID,GAAL,mBAAkBuM,EAAY/gB,EAAEghB,MAAM,EADxC,MAEjB,CA4qBuF0B,CAAiB1iB,EAAE,QAAS,IAEnC,KAAhB+B,GAAOwZ,MACJ,uBAAMrmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOwZ,QACpC,QAIZ,sBAAKrmB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,eAAX,mBACA,wBACIhY,UAAU,eACV3G,KAAK,QACLiB,KAAK,QACL4H,GAAG,QACH5I,MAAOgmB,EAAUgH,MACjBvqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,GACVxgB,UAAQ,SAMpB,sBAAK5K,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,iBAAX,qBACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,UACL4H,GAAG,UAEH5I,MAAOgmB,EAAU5a,QACjB3I,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,aAO1B,uBAAKprB,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,SACI,eAAC,KAAD,CACI3G,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,GAAQ3M,OACnBsO,QA5+BrC,SAACwF,IAVN,WACtB,IAAIkC,EAAI,eAAQH,IAMhB,OALIG,EAAKxS,UAAY8kB,EAAU9kB,UAAY,GAAK,yBAC5CwS,EAAKwZ,SAAWlH,EAAUkH,SAAW,GAAK,0BAC1CxZ,EAAKqZ,MAAQ/G,EAAU+G,MAAQ,GAAK,6BACpCrZ,EAAKuZ,eAAiBjH,EAAUiH,eAAiB,GAAK,iCAClDzZ,GAAU,eAAKE,IAChBrB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,GACrC,EAGMgtB,KACC3G,EAAY,GAAD,oBAAKD,GAAL,CAAevH,KAC1BC,EAAa,CACT7a,QAAQ,GACR2hB,MAAM,GACN7rB,UAAW,GACX8rB,MAAO,GACPC,eAAgB,GAChBC,SAAU,GACVC,WAAY,KAIvB,EAy9B+D,mBAWJ,sBAAKzmB,UAAU,QAAf,SACI,eAAC,KAAD,CACI3G,KAAK,SACLyC,QAAQ,YACR1E,MAAM,YACN4I,UAAW2D,GAAQ3M,OACnBsO,QAtgC/B,WACjC8hB,GAAgB,EACnB,EA+/B+D,mCAkBhC,sBAAKpnB,UAAU,QACX,eAAC,KAAD,CACI3G,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,GAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QA9hCd,WACtB8hB,GAAgB,EACnB,EA6hCuCrrB,MAAO,CAACC,gBAAgB,UAAUE,WAAW,UAPjD,8CAeZ,uBAAK8D,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAUoF,aAAa,UAA9G,SACI,qBAAItB,UAAU,aAAcjE,MAAO,CAAC3E,MAAM,QAA1C,gCAGR,sBAAK4I,UAAU,YAAf,SACA,uBAAKA,UAAU,MAAf,UACA,qDACA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,oCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,iBACL4H,GAAG,iBACHmK,SAAUuF,GACVtY,MAAO+W,GAAU0Y,eACjBne,UAAQ,IAEc,KAAzBiC,GAAOkc,eACJ,uBAAM/oB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOkc,iBACxC,QAGR,sBAAK/oB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,GAAX,wCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACHmK,SAAUuF,GACVtY,MAAO+W,GAAU2Y,UACjBpe,UAAQ,IAES,KAApBiC,GAAOmc,UACJ,uBAAMhpB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOmc,YACxC,QAGR,sBAAKhpB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAO+W,GAAU4H,aACjB5L,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAG1B,KAAvBuL,GAAOoL,aACJ,uBAAMjY,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOoL,eACxC,QAIR,sBAAKjY,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,eAAX,6BACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACHmK,SAAUuF,GACVtY,MAAO+W,GAAUuY,aACjBhe,UAAQ,EANZ,UAQA,yBAAQtR,MAAM,GAAd,eAECslB,GAAWxkB,KAAI,SAACd,GAAD,OACZ,yBAAuBA,MAAOA,EAAM6e,KAApC,SACK7e,EAAMjD,SADEiD,EAAM4I,GADP,OAOS,KAAvB2K,GAAO+b,aACD,uBAAM5oB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO+b,eACxC,QAKR,sBAAK5oB,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,kBACL4H,GAAG,kBACHmK,SAAUuF,GACVtY,MAAO+W,GAAUsY,gBACjB/d,UAAQ,EANZ,UAQA,yBAAQtR,MAAM,SAAd,eAECulB,GAAUzkB,KAAI,SAACd,GAAD,OACX,yBAAuBA,MAAOA,EAAM6e,KAApC,SACK7e,EAAMjD,SADEiD,EAAM4I,GADR,OAOY,KAA1B2K,GAAO8b,gBACA,uBAAM3oB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO8b,kBACxC,QAIR,sBAAK3oB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,8CACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,4BACL4H,GAAG,4BACH5I,MAAO+W,GAAUsP,0BACjBtT,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGhB,KAApCuL,GAAO8S,0BACL,uBAAM3f,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO8S,4BACxC,QAGR,sBAAK3f,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,wCACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,sBACL4H,GAAG,sBACH5I,MAAO+W,GAAUqY,oBACjBrc,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGvB,KAA9BuL,GAAO6b,oBACJ,uBAAM1oB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO6b,sBACxC,QAGR,sBAAK1oB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,8BACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,gBACL4H,GAAG,gBACH5I,MAAO+W,GAAUyY,cACjBzc,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAG7B,KAAxBuL,GAAOic,cACJ,uBAAM9oB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOic,gBACxC,gBASX3e,EAAS,eAACU,GAAA,EAAD,IAAc,GAExB,wBAGA,eAAC,KAAD,CACIxR,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,GAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAAS+lB,GACT7X,SAAUuT,EACVhrB,MAAO,CAACC,gBAAgB,UAAUE,WAAW,UARjD,SAUMiO,EAGE,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,uBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,oBAMR,eAAC,KAAD,CACI7F,QAAQ,YACRkE,UAAW2D,GAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX3F,MAAO,CAACC,gBAAgB,WACxBsJ,QAl8BR,WAChBa,GAAQe,KAAK,CAAExL,SAAU,KAC5B,EA27BuB,SAOI,uBAAMK,MAAO,CAAE4F,cAAe,aAAcvK,MAAM,QAAlD,+BAMpB,gBAAC,KAAD,CAAOkT,KAAMmf,GAAMjf,OAAQA,GAAQxK,UAAU,OAAO1E,KAAK,KACrD,kBAAgB,gCAChBoyB,UAAQ,EAACC,SAAS,SAFtB,UAGC,eAAC,KAAMljB,OAAP,UACD,eAAC,KAAMmjB,MAAP,CAAa1rB,GAAG,gCAAhB,6BAII,eAAC,KAAMF,KAAP,UACI,qEAGR,eAAC,KAAM6rB,OAAP,UACI,eAAC5xB,GAAA,EAAD,CAAQqJ,QAASkF,GAAQzO,MAAO,CAACC,gBAAgB,UAAW5E,MAAM,QAAlE,wBAKf,E,qBC5oDDwtB,KAAQC,IAAIC,KAAeC,KAAUC,KAAQC,MAE7C,IAAM5lB,GAAYrJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF0f,SAAU,EACV,gBAAgB,CACZvf,MAAM,OACN8E,WAAW,QAEf,kBAAkB,CACdoF,aAAa,UACbvK,OAAO,QAEX,6BAA8B,CAC1BuK,aAAc,+CAElB,4BAA6B,CACzBjL,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN8E,WAAW,SAGnB4c,KAAM,CACF9c,gBAAiB/F,EAAM4M,QAAQkW,WAAWC,SAE9CC,OAAQ,CACJ5iB,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UA5DW,IAytDd6tB,GAxpDU,SAACrwB,GACtB,IAkGIwrB,EACAzkB,EAnGJ,EAAiCrE,mBACzB,CACI4tB,QAAQ,EACRzgB,QAAS,GACT0gB,QAAS,GACT5gB,aAAc,GACdxJ,YAAa,GACbqqB,UAAU,EACVC,iBAAkB,KAClB9qB,UAAW,GACX+qB,SAAU,GACVtsB,WAAY,GACZusB,UAAW,GACXC,gBAAiB,GACjBC,YAAa,GACbC,mBAAmB,GACnBzN,mBAAoB,GACpB0N,uBAAwB,KACxB7qB,IAAI,GACJwJ,YAAY,GACZshB,eAAe,GACfztB,IAAI,GACJ0tB,UAAU,GACVC,QAAQ,GACRC,SAAS,GACT2F,SAAS,GACT1F,MAAM,GACNC,UAAU,KA3BtB,mBAAOC,EAAP,KAAkBC,EAAlB,KA+BA,EAAiC7uB,mBACrB,CACImN,QAAQ,GACR2hB,MAAM,GACN7rB,UAAW,GACX8rB,MAAO,GACPC,eAAgB,GAChBC,SAAU,GACVC,WAAY,KAR5B,mBAAOnH,EAAP,KAAkBC,EAAlB,KAYA,EAA0BhoB,oBAAS,IAAIe,MAAOouB,cAAcC,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAAvF,mBACA,GADA,UACgCrvB,mBAAS,KAAzC,mBAAOsvB,EAAP,KAAiBC,EAAjB,KACA,EAA4BvvB,oBAAS,GAArC,mBAAO4S,EAAP,KACA,GADA,KACwD5S,oBAAS,IAAjE,mBAAOwvB,EAAP,KAA6BC,EAA7B,KACA,EAAsCzvB,oBAAS,GAA/C,mBAAO0vB,EAAP,KAAoBC,EAApB,KACA,EAAwC3vB,oBAAS,GAAjD,mBAAO4vB,EAAP,KAAqBC,EAArB,KACA,EAAwC7vB,mBAAS,MAAjD,mBACA,GADA,UAC6BA,mBAAS,KAAtC,mBAAO8vB,EAAP,KAAgBC,EAAhB,KACA,EAAuD/vB,mBAAS,IAAhE,mBAAOgwB,EAAP,KAA6BC,EAA7B,KACA,GAA+CjwB,mBAAS,IAAxD,qBAAOkwB,GAAP,MAAyBC,GAAzB,MACA,GAAiDnwB,mBAAS,IAA1D,qBAAOowB,GAAP,MAA0BC,GAA1B,MACA,GAAqDrwB,mBAAS,IAA9D,qBAAOswB,GAAP,MAA4BC,GAA5B,MACA,GAAkCvwB,mBAAS,IAA3C,qBAAOwwB,GAAP,MAAkBC,GAAlB,MACA,GAA4BzwB,mBAAS,IAArC,qBAAO0wB,GAAP,MAAeC,GAAf,MACA,GAAkC3wB,mBAAS,IAA3C,qBAAO4wB,GAAP,MAAkBC,GAAlB,MACA,GAA4B7wB,mBAAS,CAAC,GAAtC,qBAAOsV,GAAP,MAAeC,GAAf,MACA,GAAmEvV,mBAAS,IAA5E,qBAAmC8wB,IAAnC,aACA,GAAmC9wB,mBAAS,CAAC,OAAS,GAAI,cAAgB,KAA1E,qBACM+wB,IADN,YACmBzzB,EAAMV,UAAYU,EAAMV,SAASwH,MAAQ9G,EAAMV,SAASwH,MAAM4sB,KAAO,MAClF5kB,GAAUtE,KACV8G,GAAUC,cACVjS,GAAWq0B,cAEhB,GAAuCjxB,oBAAS,GAAhD,qBAAqBkxB,IAArB,aAEA,GAAkClxB,mBAAS,CACxC0gB,aAAc,GACd0H,0BAA2B,GAC3B+I,oBAAqB,GACrBlR,MAAO,CAAC,EACRmR,gBAAiB,GACjBC,aAAc,GACdC,UAAU,CAAC,EACXhf,SAAU,EACVif,cAAe,GACfC,eAAgB,GAChBC,UAAU,KAXb,qBAAO3Y,GAAP,MAAkBC,GAAlB,MAaA,GAAoC/Y,mBAAS,IAA7C,qBAAOqnB,GAAP,MAAmBqK,GAAnB,MACA,GAA4C1xB,mBAAS,IAArD,qBAAuB2xB,IAAvB,aACA,GAAkC3xB,mBAAS,IAA3C,qBAAOsnB,GAAP,MAAkB9a,GAAlB,MACA,GAA0CxM,mBAAS,IAAnD,qBAAsB4xB,IAAtB,aACA,GAAgC5xB,mBAAS,IAAzC,qBAAiBgW,IAAjB,aACA,GAAoBhW,mBAAS,IAA7B,qBAAW6xB,IAAX,aACA,GAA4B7xB,mBAAS,IAArC,qBACA,IADA,YAC8CA,mBAAS,KAAvD,qBAAwB8xB,IAAxB,aAEA,GAAoC9xB,oBAAS,GAA7C,qBAEA,IAFA,YAEsCA,oBAAS,IAA/C,qBAAoBu2B,IAApB,aAEA,GAA6Cv2B,mBAAS,SAAtD,qBACA,IADA,YACwBiI,IAAMjI,UAAS,IAAvC,qBAAOkyB,GAAP,MAAaC,GAAb,MACMlf,GAAS,kBAAMkf,IAASD,GAAf,EACVE,GAAgBx1B,GAASwH,MAG/B0kB,EAAYsJ,GAAgBA,GAActJ,UAAY,KACtDzkB,EAAa+tB,GAAgBA,GAAc/tB,WAAa,CAAC,EAEzD3D,qBAAU,WAgBN,GAfA2xB,KACAmE,KACAlE,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA/Y,KACAgZ,KACAC,KACAC,KACG5uB,EAAW,CAEV,IAAMirB,EAAUjrB,GAAcA,EAAWwpB,QAAUxpB,EAAWwpB,QAAU,GAEpEkG,EAAgB,GAECzE,EAASzB,SAAWyB,EAASzB,QAAQpc,OAAO,GAAK6d,EAASzB,QAAQhrB,KAAI,SAACqG,GACxF,IAAM8qB,EACF,CACI7mB,QAAQjE,EAAEiE,QAAQ8mB,KAAK,GACvBnF,MAAM5lB,EAAE+D,aAAalL,MACrBkB,UAAUiG,EAAEjG,UACZ8rB,MAAO,GACPC,eAAgB9lB,EAAE8lB,eAClBC,SAAU/lB,EAAEhG,QACZgsB,WAAYhmB,EAAE+kB,WAEtB8F,EAAgBpkB,KAAKqkB,EACxB,IACDzE,EAAYwE,GACZ,IAAM0C,EAAcpyB,EAAW3C,WACzByL,EAAU9I,EAAW8I,QACrBF,EAAe5I,EAAW4I,aAC1BtL,EAAiB80B,EAAY/0B,WAAWE,MAAK,SAAAC,GAAG,MAAiB,mBAAbA,EAAIC,IAAR,IAChDgtB,EAAQ7hB,EAAaA,aAAarL,MAAK,SAAAC,GAAG,MAAiB,UAAbA,EAAIC,IAAR,IAC1CitB,EAAQ9hB,EAAaA,aAAarL,MAAK,SAAAC,GAAG,MAAiB,UAAbA,EAAIC,IAAR,IAC1C40B,EAAWzpB,EAAaA,aAAarL,MAAK,SAAAC,GAAG,MAAiB,aAAbA,EAAIC,IAAR,IAC7CyzB,EAAUpoB,GAAWA,EAAQA,SAAWA,EAAQA,QAAQsE,OAAS,EAAItE,EAAQA,QAAQ,GAAK,KAIhGyhB,EAAU/tB,IAAIwD,EAAWZ,YACzBmrB,EAAU3rB,UAAUoB,EAAWpB,UAC/B2rB,EAAUjO,mBAAmBtc,EAAWsc,mBACxCiO,EAAUM,WAAW7qB,EAAW4pB,UAChCW,EAAUK,SAAS5qB,EAAWnB,QAC9B0rB,EAAUjtB,eAAeA,GAAkBA,EAAiBA,EAAeI,MAAQ,GACnFgX,GAAY,2BAAMD,IAAN,IAAkBzV,SAAU1B,EAAiBA,EAAeI,MAAQ,MAChF6sB,EAAUV,gBAAgB7pB,GAAcA,EAAW8hB,cAAgB9hB,EAAW8hB,cAAcxb,GAAK,GACjGikB,EAAUR,mBAAmB/pB,GAAcA,EAAWsyB,iBAAmBtyB,EAAWsyB,iBAAiBhsB,GAAI,GACzGikB,EAAUZ,SAAS3pB,GAAcA,EAAWf,OAASe,EAAWf,OAAOqH,GAAK,KAE5EikB,EAAUT,YAAY9pB,GAAcA,EAAWuyB,UAAYvyB,EAAWuyB,UAAUjsB,GAAK,GACrFikB,EAAU5hB,YAAY8hB,GAASA,EAAM/sB,MAAQ+sB,EAAM/sB,MAAO,GAC1D6sB,EAAUN,eAAgBoI,GAAYA,EAAS30B,MAAQ20B,EAAS30B,MAAO,GACvE6sB,EAAUG,MAAMA,GAASA,EAAMhtB,MAAQgtB,EAAMhtB,MAAO,GACpD6sB,EAAUzhB,QAAQooB,GAAYA,EAAQnoB,KAAOmoB,EAAQnoB,KAAM,GAC3DwhB,EAAUwF,SAASmB,EAAQtB,MAAQsB,EAAQtB,KAAKxiB,OAAO,EAAI8jB,EAAQtB,KAAK,GAAI,GAC5ErF,EAAUL,UAAUgH,GAAWA,EAAQhH,UAAagH,EAAQhH,UAAY,GACxEuH,GAAoBP,EAAQhH,WAiJZsI,EAhJDtB,GAAWA,EAAQ/G,QAAW+G,EAAQ/G,QAAU,GAiJnEruB,IACCrD,IADD,UACQsD,EADR,wDAC+Dy2B,GAC3D,CAAEx2B,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHswB,GAAatwB,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,IAzJGgvB,EAAUJ,QAAQ+G,GAAWA,EAAQ/G,QAAW+G,EAAQ/G,QAAU,GAClEI,EAAUH,SAAS8G,GAAWA,EAAQ9G,SAAW8G,EAAQ9G,SAAU,GACnE,IAAMqI,EAAWl2B,GAAc+C,GAAOU,EAAWZ,aAAaG,OAAO,eACrEgrB,EAAUprB,IAAIszB,EACd5F,GAAiC,WAAjB7sB,EAAWd,KACxBc,EAAWb,KAAK,IACf+yB,IAAe,GAEnB3H,EAAUD,UAAUtqB,EAAWsqB,SAElC,CAqIL,IAAwBkI,EApIjBjI,EAAUjO,mBAAqBiO,EAAU/tB,KACxCqyB,MAAM,6DAGb,GAAE,CAAC7uB,EAAYykB,EAAW8F,EAAUjO,qBAErC,IAAM6V,GAAQ,WACVr2B,IACCrD,IADD,UACQsD,EADR,+BAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH,IAAMw2B,EAAWx2B,EAASC,KAAKoB,MAAK,SAACsH,GAAD,OAAMA,EAAEpK,UAAUuF,EAAWd,GAA7B,IACpCqrB,EAAUF,MAAMqI,EAASj4B,OAC5B,IACA2B,OAAM,SAACb,GAEP,GACR,EACSyyB,GAAcc,sBAAW,gCAAC,uHAEDhzB,IAAMrD,IAAN,UAAasD,EAAb,+BAAmD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF1F,OAElB8D,EAFkB,OAGxBwvB,EAAWxvB,EAASC,MAHI,uGAO7B,IACG8xB,GAAoBa,sBAAW,gCAAC,uHAEPhzB,IAAMrD,IAAN,UAAasD,EAAb,0CAA8D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF/F,OAExB8D,EAFwB,OAG9B0vB,EAAwB1vB,EAASC,MAHH,uGAMnC,IACG+xB,GAAgBY,sBAAW,gCAAC,uHAEHhzB,IAAMrD,IAAN,UAAasD,EAAb,qCAAyD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF9F,OAEpB8D,EAFoB,OAG1B4vB,GAAoB5vB,EAASC,MAHH,uGAO/B,IACGgyB,GAAiBW,sBAAW,gCAAC,uHAEJhzB,IAAMrD,IAAN,UAAasD,EAAb,sCAA0D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF9F,OAErB8D,EAFqB,OAG3B8vB,GAAqB9vB,EAASC,MAHH,uGAOhC,IACGiyB,GAAoBU,sBAAW,gCAAC,uHAEThzB,IAAMrD,IAAN,UAAasD,EAAb,wCAA4D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF3F,OAE1B8D,EAF0B,OAGhCgwB,GAAuBhwB,EAASC,MAHA,uGAMnC,IACGkyB,GAAsBS,sBAAW,gCAAC,8GACbhzB,IAAMrD,IAAN,UAAasD,EAAb,kDAAsE,CAAEC,QAAS,CAAC,+BAA4B5D,MADjG,OAC9B8D,EAD8B,OAEpCuwB,GAA8BvwB,EAASC,MAFH,2CAGrC,IAOKyyB,GAAY,WAChB9yB,IACCrD,IADD,UACQsD,EADR,kDAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHkwB,GAAalwB,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACJ,EASD,SAASk2B,GAAoBD,GACzB11B,IACCrD,IADD,UACQsD,EADR,wDAC+Dy1B,GAC3D,CAAEx1B,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHowB,GAAUpwB,EAASC,KACtB,IACAC,OAAM,SAACb,GAEP,GACJ,CAED,IAAMgB,GAAgB,SAAAC,GAClB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,CAClB,EA8BD,IAyBMgyB,GAA0B,SAAC7f,GACP,UAAlBA,EAAE+G,OAAOvY,MACT4tB,GAAe,GACU,aAAlBpc,EAAE+G,OAAOvY,OAChB4tB,GAAe,EAEtB,EAwBM7O,GAAW,WACd,IAAIrL,EAAI,eAAQH,IAwBhB,OAvBIG,EAAKxS,UAAY2rB,EAAU3rB,UAAY,GAAK,yBAC5CwS,EAAK9T,eAAiBitB,EAAUjtB,eAAiB,GAAK,gCAGtD8T,EAAKwZ,SAAWL,EAAUK,SAAW,GAAK,0BAC1CxZ,EAAKiZ,MAAQE,EAAUF,MAAQ,GAAK,mBACpCjZ,EAAKuhB,oBAAsBpI,EAAUjO,mBAAqB,GAAK,oCAC/DlL,EAAK0Y,YAAcS,EAAUT,YAAc,GAAK,yBAChD1Y,EAAKtI,QAAUyhB,EAAUzhB,QAAU,GAAK,uBACxCsI,EAAKzI,YAAc4hB,EAAU5hB,YAAc,GAAK,6BAChDyI,EAAK8Y,UAAYK,EAAUL,UAAY,GAAK,uBAC5C9Y,EAAK+Y,QAAUI,EAAUJ,QAAU,GAAK,qBACxC/Y,EAAKgZ,SAAWG,EAAUH,SAAW,GAAK,4BAE1ChZ,EAAK+b,eAAiB1Y,GAAU0Y,eAAiB,GAAK,yBACtD/b,EAAKiL,aAAe5H,GAAU4H,aAAe,GAAK,6BAClDjL,EAAK2S,0BAA4BtP,GAAUsP,0BAA4B,GAAK,qCAC5E3S,EAAK0b,oBAAsBrY,GAAUqY,oBAAsB,GAAK,6BAChE1b,EAAK2b,gBAAkBtY,GAAUsY,gBAAkB,GAAK,8BACxD3b,EAAK4b,aAAevY,GAAUuY,aAAe,GAAK,8BAClD5b,EAAK8b,cAAgBzY,GAAUyY,cAAgB,GAAK,8BAEhDhc,GAAU,eAAKE,IAChBrB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,GACrC,EAEKmqB,GAAyB,SAAA9f,GAO3B,GANAgC,GAAU,2BAAID,IAAL,mBAAc/B,EAAE+G,OAAOvX,KAAO,MACvC8rB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,SAErC,UAAhBwR,EAAE+G,OAAOvX,MAAmC,WAAjBwQ,EAAE+G,OAAOvY,OACnCmvB,IAAgB,GAED,cAAhB3d,EAAE+G,OAAOvX,MAAuC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CAClD,IAAMgB,EAAOuwB,GAAa/f,EAAE+G,OAAOvY,OACnC8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOA,IAClD,CACD,GAAmB,aAAhBwQ,EAAE+G,OAAOvX,MAAsC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CACjD,IAAMgB,EAAOuwB,GAAa/f,EAAE+G,OAAOvY,OACnC8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOA,IAClD,CACD,GAAmB,eAAhBwQ,EAAE+G,OAAOvX,MAAwC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CACnD,IAAMgB,EAAOuwB,GAAa/f,EAAE+G,OAAOvY,OACnC8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOA,IAClD,CACD,GAAmB,cAAhBwQ,EAAE+G,OAAOvX,MAAuC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CAClD,IAAMwxB,EAAiBC,GAAcjgB,EAAE+G,OAAOvY,OAC9C8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOwwB,IAClD,CAEJ,EAEKC,GAAc,SAACjgB,GAGjB,OADsBA,EAAEghB,MAAM,EADhB,GAGjB,EAmCKZ,GAAkB,SAAC3E,GACrB,IAAM4E,EAAetD,GAAoB1uB,MAAK,SAAAC,GAAG,OAAIA,EAAI8I,IAAMqkB,CAAd,IACjD,OAAO4E,EAAeA,EAAa90B,QAAU,EAChD,EACK+0B,GAA6B,SAAAtgB,GAC/ByU,EAAY,2BAAMD,GAAN,mBAAmBxU,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAC3D,EAEKuxB,GAAa,SAACvxB,GAEhB,OADeA,EAAMstB,QAAQ,WAAY,GAE5C,EAEKsD,GAAgB,WACdxyB,IACKrD,IADL,UACYsD,EADZ,uCAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHmxB,GAAcnxB,EAASC,KAC1B,IACAC,OAAM,SAACb,GAEP,GACZ,EAEKgzB,GAAgB,WACdzyB,IACCrD,IADD,UACQsD,EADR,2CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHoxB,GAAkBpxB,EAASC,KAC9B,IACAC,OAAM,SAACb,GAEP,GACR,EAEKizB,GAAW,WACb1yB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHiM,GAAajM,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKkzB,GAAmB,WACrB3yB,IACCrD,IADD,UACQsD,EADR,8CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHqxB,GAAiBrxB,EAASC,KAC7B,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKma,GAAU,WACZ5Z,IACCrD,IADD,UACQsD,EADR,qCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHyV,GAAYzV,EAASC,KACxB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKmzB,GAAI,WACN5yB,IACCrD,IADD,UACQsD,EADR,wCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHsxB,GAAMtxB,EAASC,KAClB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKozB,GAAiB,WACnB7yB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHuxB,GAAmBvxB,EAASC,KAC/B,IACAC,OAAM,SAACb,GAEP,GACJ,EACKya,GAAoB,SAAA9G,GACtBgC,GAAU,2BAAID,IAAL,mBAAc/B,EAAE+G,OAAOvX,KAAO,MACvCgW,GAAY,2BAAMD,IAAN,mBAAmBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAE3D,EAKKsyB,GAAsB,SAAC9gB,EAAG+gB,GAE5B/e,GAAU,2BAAID,IAAL,mBAAcgf,EAAY,MAC/BzF,EAAa,2BAAID,GAAL,mBAAkB0F,EAAY/gB,EAAEghB,MAAM,EAFxC,MAGjB,EAaKT,GAAY,iDAAG,WAAOvgB,GAAP,gGACjBA,EAAEC,iBACIujB,EAAWjH,EAAQluB,MAAK,SAACsH,GAAD,OAAMA,EAAEpK,UAAU8vB,EAAUF,KAA5B,IAC9BE,EAAUF,MAAMqI,GAAYA,EAASpsB,GAAKosB,EAASpsB,GAAK,GACpDopB,EAAgB,GAEKzE,GAAYA,EAAS7d,OAAO,GAAK6d,EAASzsB,KAAI,SAACqG,GAEhE,IAAM8qB,EAAc,CACpB7mB,QAAS,CACL8mB,KAAM,CACF/qB,EAAEiE,UAGVF,aAAc,CACVnL,KAAM,QACNC,MAAOmH,EAAE4lB,OAEb7rB,UAAWiG,EAAEjG,UACbixB,SAAUhrB,EAAEjG,UAAY,IAAMiG,EAAEgmB,WAAa,IAAMhmB,EAAE+lB,SACrDD,eAAgB9lB,EAAE8lB,eAClB9rB,QAASgG,EAAE+lB,SACXhB,UAAW/kB,EAAEgmB,YAGjB6E,EAAgBpkB,KAAKqkB,EACpB,KACDlT,KA3Ba,iCA6BHqT,EAAc,CAChBxpB,GAAG,GACHijB,QAAQ,EACRzgB,QAAS,CACL,CACI,KAAQyhB,EAAUzhB,QAClB,UAAayhB,EAAUL,UACvB,SAAYK,EAAUH,SACtB,KAAQ,CACJG,EAAUwF,UAEd,mBAAsB,EACtB,WAAc,GACd,QAAWxF,EAAUJ,UAG7BX,QAASkG,EACT9mB,aAAc,GACdxJ,YAAamrB,EAAU/tB,IACvBitB,UAAU,EACVC,iBAAkB,KAClB9qB,UAAW2rB,EAAU3rB,UACrB+qB,SAAUY,EAAUF,MACpBA,MAAOE,EAAUF,MACjBhtB,WAAY,CACR,CACI,WAAc,EACd,KAAQ,iBACR,MAASktB,EAAUjtB,iBAG3BssB,UAAWW,EAAUM,WACrBhB,gBAAiBU,EAAUV,gBAC3BhrB,QAAS0rB,EAAUK,SACnBd,YAAaS,EAAUT,YACvBC,mBAAoBQ,EAAUR,mBAC9BzN,mBAAoBiO,EAAUjO,mBAC9B0N,uBAAiD,UAAzBO,EAAUnrB,YAClCkrB,UAAUC,EAAUD,WAElBG,EAAQ,CACV,KAAQ,QACR,MAASF,EAAU5hB,aAEnB4hB,EAAUG,QACJA,EAAQ,CACV,KAAQ,QACR,MAASH,EAAUG,OAEvBoF,EAAYlnB,aAAa0C,KAAKof,IAE9BH,EAAUN,iBACJA,EAAiB,CACnB,KAAQ,WACR,MAASM,EAAUN,gBAEvB6F,EAAYlnB,aAAa0C,KAAK2e,IAElC6F,EAAYlnB,aAAa0C,KAAKmf,GAC9BqF,EAAYxpB,GAAKme,EAEjBhQ,GAAUxG,SAASwW,EA1FV,UA2Fc3oB,IAAMsT,KAAN,UAAcrT,EAAd,QAA6B0Y,GAAW,CAAEzY,QAAS,CAAC,+BAA4B5D,MA3F9F,eA4FT4U,IAAMtR,QAAQ,6BACd6O,GAAQe,KAAK,KA7FJ,kDA+FL2B,EAAe,KAAM/Q,SAASC,MAA+C,KAAvC,KAAMD,SAASC,KAAK+Q,SAASC,QAAe,KAAMjR,SAASC,KAAK+Q,SAASC,QAAW,iDAC1HH,IAAMzR,MAAM0R,EAAc,CACtBkB,SAAUnB,IAAM0P,SAASkW,YAjGxB,0DAAH,sDAwGlB,OACI,uCACA,sBAAKxuB,UAAU,uBAAuBjE,MAAO,CAACrF,UAAU,MAAOG,aAAa,SAA5E,SACL,qBAAImJ,UAAU,aAAd,SACC,qBAAIA,UAAU,yBAAd,SAAuC,oCAAK,eAAC,IAAD,CAAMvE,GAAI,IAAV,oBAAL,yBAG/B,eAAC,IAAD,CAAgBswB,UAAW,IAAMC,iBAAe,IAChD,eAAC,KAAD,CAAMhsB,UAAW2D,GAAQ1M,KAAzB,SACI,gBAAC,KAAD,WACI,eAAC,IAAD,CACIwE,GAAI,CACAC,SAAU,IACVC,MAAO,SAHf,SAKI,eAACM,GAAA,EAAD,CACIH,QAAQ,YACR1E,MAAM,UACN4I,UAAU,kBACVjE,MAAO,CAACC,gBAAgB,UAAUE,WAAW,UAC7CwF,UAAW,eAAC,KAAD,IALf,SAOI,uBAAM3F,MAAO,CAAE4F,cAAe,aAAcvK,MAAM,QAAlD,uBAGR,wBACA,wBACA,sBAAK4I,UAAU,sBAAf,SACI,gBAACksB,GAAA,EAAD,WACI,uBAAKlsB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAWoF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,SAAgE,OAAbkxB,GAAoB,oBAAsB,4BAGjG,sBAAKtoB,UAAU,YAAf,SACI,uBAAKA,UAAU,aAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,qBAAX,oCACA,eAACrN,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,qBACLuY,IAAI,aACJE,IAAM7X,GAAO,IAAI5C,MAAQ6C,OAAO,cAChC+G,GAAG,qBACH5I,MAAO6sB,EAAUjO,mBACjB7L,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGxB,KAA9BuL,GAAO0hB,oBACP,uBAAMvuB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO0hB,sBACpC,QAIZ,sBAAKvuB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,+BACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,iBACL4H,GAAG,iBACH5I,MAAO6sB,EAAUjtB,eACjBmT,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAoBtR,aAAa,YAG5B,KAAzBuL,GAAO3T,eACP,uBAAM8G,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO3T,iBACpC,QAGZ,sBAAK8G,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,0BACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACHsR,SAAS,OACTla,MAAO,QAEPyC,MAAO,CAAC6W,OAAQ,oBAAoBtR,aAAa,oBAQjE,uBAAKtB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,2BACA,eAACrN,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACH5I,MAAO6sB,EAAU3rB,UACjB6R,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGjC,KAApBuL,GAAOrS,UACR,uBAAMwF,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOrS,YACpC,QAIZ,sBAAKwF,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAO6sB,EAAUM,WACjBpa,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,iBAM9D,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAO6sB,EAAUK,SACjBna,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGnC,KAAnBuL,GAAO2Z,SACP,uBAAMxmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO2Z,WACpC,WAKhB,uBAAKxmB,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,0BACQ1K,UAAU,eACV1F,KAAK,QACL4H,GAAG,QACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUF,MACjBlqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAN1D,UASQ,yBAAQhI,MAAO,GAAf,oBACC+tB,EAAQjtB,KAAI,SAACS,EAAQgM,GAAT,OACb,yBAAwBvN,MAAOuB,EAAOxE,QAAtC,SAAgDwE,EAAOxE,SAA1CwE,EAAOqH,GADP,OAIC,KAAhB2K,GAAOoZ,OAA+B,OAAhBpZ,GAAOoZ,MAC/B,uBAAMjmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOoZ,QACpC,QAGhB,sBAAKjmB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,sBAAK1K,UAAU,QAAf,SACI,mCACI,wBACI3G,KAAK,QACLC,MAAM,SACNgB,KAAK,cACL6xB,gBAAc,EAEd9f,SAAU,SAACvB,GAAD,OAAO6f,GAAwB7f,EAA/B,EACV/O,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAR1D,eAYJ,sBAAKtB,UAAU,QAAf,SACI,mCACI,wBACI3G,KAAK,QACLC,MAAM,YACNgB,KAAK,cAEL+R,SAAU,SAACvB,GAAD,OAAO6f,GAAwB7f,EAA/B,EACV/O,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAP1D,uBAcZ,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,mBACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,MACL4H,GAAG,MACH2Q,IAAI,aACJE,IAAKoT,EAAUjO,mBACf5e,MAAO6sB,EAAU/tB,IACjBiU,SA5lB5B,SAACvB,GACrB,GAAIA,EAAE+G,OAAOvY,MAAO,CAChB,IAAMjB,EAAQ,IAAIC,KACZI,EAAY,IAAIJ,KAAKwS,EAAE+G,OAAOvY,OAChCX,EAAUN,EAAMO,cAAgBF,EAAUE,cACxCC,EAAIR,EAAMS,WAAaJ,EAAUI,WACpCD,EAAE,IACD4xB,MAAM,mCACNzD,GAAwB,IAExBA,GAAwB,IAExBnuB,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YACjDJ,IAEJwtB,EAAUprB,IAAIpC,CAEjB,MACGytB,EAAa,2BAAID,GAAL,IAAgBprB,IAAM,MAEtCqrB,EAAa,2BAAID,GAAL,IAAgB/tB,IAAK0S,EAAE+G,OAAOvY,SACvB,KAAhB6sB,EAAUprB,KAAYorB,EAAUprB,KAAK,IACpCyP,IAEP,EAqkBmDzO,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,iBAM9D,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,kBACA,wBACI1K,UAAU,eACV3G,KAAK,SACLiB,KAAK,MACL4H,GAAG,MACH5I,MAAO6sB,EAAUprB,IACjByY,SAAUyT,EACV5a,SA7kB5B,SAACvB,GACrB,IAAKmc,GAAenc,EAAE+G,OAAOvY,MAAO,CACZ,KAAjBwR,EAAE+G,OAAOvY,OAAcwR,EAAE+G,OAAOvY,OAAO,IACtCkR,KAEDM,EAAE+G,OAAOvY,OAAQ,EAChB0tB,GAAwB,GAExBA,GAAwB,GAE5B,IAAMoF,EAAc,IAAI9zB,KACxB8zB,EAAYC,QAAQ,IACpBD,EAAYE,SAAS,GACrB,IACMC,EADSrxB,GAAOkxB,EAAY1F,eACZ7B,KAAuB,EAAlB/Z,EAAE+G,OAAOvY,MAAa,SAEjD6sB,EAAU/tB,IAAK8C,GAAOqxB,GAAQpxB,OAAO,aAExC,CACDirB,EAAa,2BAAID,GAAL,IAAgBprB,IAAK2X,KAAK8Z,IAAI1hB,EAAE+G,OAAOvY,SACtD,EA0jBmDyC,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,oBAMlE,uBAAKtB,UAAW,MAAhB,UAGQ,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACI1K,UAAU,eACV1F,KAAK,kBACL4H,GAAG,kBACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUV,gBACjB1pB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UASI,yBAAQhI,MAAO,GAAf,oBACCiuB,EAAqBntB,KAAI,SAACqyB,EAAqB5lB,GAAtB,OACtB,yBAAqCvN,MAAOmzB,EAAoBvqB,GAAhE,SAAqEuqB,EAAoBp2B,SAA5Eo2B,EAAoBvqB,GADX,YAQtC,sBAAKlC,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,kCACA,0BACI1K,UAAU,eACV1F,KAAK,qBACL4H,GAAG,qBACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUR,mBACjB5pB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UASI,yBAAQhI,MAAO,GAAf,oBACCquB,GAAkBvtB,KAAI,SAACsyB,EAAkB7lB,GAAnB,OACnB,yBAAkCvN,MAAOozB,EAAiBxqB,GAA1D,SAA+DwqB,EAAiBr2B,SAAnEq2B,EAAiBxqB,GADX,OAIG,KAA7B2K,GAAO8Y,mBACR,uBAAM3lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO8Y,qBACpC,QAIhB,sBAAK3lB,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,0BACI1K,UAAU,eACV1F,KAAK,cACL4H,GAAG,cACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUT,YACjB3pB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UASI,yBAAQhI,MAAO,GAAf,oBACCmuB,GAAiBrtB,KAAI,SAACuyB,EAAiB9lB,GAAlB,OAClB,yBAAiCvN,MAAOqzB,EAAgBzqB,GAAxD,SAA6DyqB,EAAgBt2B,SAAhEs2B,EAAgBzqB,GADX,OAIH,KAAtB2K,GAAO6Y,YACR,uBAAM1lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO6Y,cACpC,QAGZ,sBAAK1lB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,8CACA,wBACIhY,UAAU,eACV3G,KAAK,SACLiB,KAAK,YACL4H,GAAG,YACH5I,MAAO6sB,EAAUD,UACjB7Z,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAoBtR,aAAa,4BAW7E,uBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAWoF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,+BAGJ,uBAAK4I,UAAU,YAAf,UACI,uBAAKA,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,eAAC,KAAD,CACIkiB,eAAgB,CAACn2B,MAAM,OAAOmc,OAAQ,qBACtCia,WAAY,CAACp2B,MAAM,OAAO6K,aAAa,OACvCwrB,QAAS,KACTC,YAAY,kBACZC,UAAW,EACX1yB,KAAK,cACL4H,GAAG,cACH5I,MAAO6sB,EAAU5hB,YACjB8H,SAAU,SAACvB,GAAK8gB,GAAsB9gB,EAAE,cAAe,IAGnC,KAAtB+B,GAAOtI,aAA2C,OAAtBsI,GAAOtI,YACjC,uBAAMvE,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOtI,cACpC,QAIhB,sBAAKvE,UAAU,sBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,eAAC,KAAD,CACIkiB,eAAgB,CAACn2B,MAAM,OAAOmc,OAAQ,qBACtCia,WAAY,CAACp2B,MAAM,OAAO6K,aAAa,OACvCwrB,QAAS,KACTC,YAAY,kBACZzzB,MAAO6sB,EAAUN,eACjBxZ,SAAU,SAACvB,GAAK8gB,GAAsB9gB,EAAE,iBAAkB,SAMtE,sBAAK9K,UAAU,sBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,wBACI1K,UAAU,eACV3G,KAAK,QACLiB,KAAK,QACL4H,GAAG,QACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUG,MACjBvqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,oBAOlE,uBAAKtB,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,wBACA,0BACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACHnG,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDhI,MAAO6sB,EAAUL,UACjBzZ,SAr1B7B,SAAAvB,GACf,IAAMsiB,EAActiB,EAAE+G,OAAOvY,MAEzB+zB,GAAoBD,GACpBhH,EAAa,2BAAKD,GAAN,IAAiBL,UAAWsH,IAC/C,EAy0B2C,UASI,yBAAQ9zB,MAAO,GAAf,oBACCyuB,GAAU3tB,KAAI,SAACd,EAAOuN,GAAR,OACX,yBAAoBvN,MAAOA,EAAM4I,GAAjC,SACK5I,EAAMgB,MADEuM,EADF,OAME,KAApBgG,GAAOiZ,UACJ,uBAAM9lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOiZ,YACpC,QAIhB,sBAAK9lB,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,UACL4H,GAAG,UACH5I,MAAO6sB,EAAUJ,QACjBhqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SA10B1B,SAAAvB,GACd,IAAMib,EAAUjb,EAAE+G,OAAOvY,MACzBwT,GAAU,2BAAID,IAAL,mBAAc/B,EAAE+G,OAAOvX,KAAO,MACvC8rB,EAAa,2BAAKD,GAAN,IAAiBJ,QAASjb,EAAE+G,OAAOvY,SAC/C5B,IACCrD,IADD,UACQsD,EADR,wDAC+DouB,GAC3D,CAAEnuB,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHswB,GAAatwB,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACR,EAqzB2C,UASI,yBAAQmC,MAAM,GAAd,oBACC2uB,GAAO7tB,KAAI,SAACd,EAAOuN,GAAR,OACR,yBAAoBvN,MAAOA,EAAM4I,GAAjC,SACK5I,EAAMgB,MADEuM,EADL,OAMG,KAAlBgG,GAAOkZ,QACJ,uBAAM/lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOkZ,UACpC,QAIhB,sBAAK/lB,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sCACA,0BACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAO6sB,EAAUH,SACjBjqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAUue,GAPd,UASI,yBAAQtxB,MAAM,GAAd,oBACC6uB,GAAU/tB,KAAI,SAACd,EAAOuN,GAAR,OACX,yBAAoBvN,MAAOA,EAAM4I,GAAjC,SACK5I,EAAMgB,MADEuM,EADF,OAMC,KAAnBgG,GAAOmZ,SACJ,uBAAMhmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOmZ,WACpC,WAKpB,uBAAKhmB,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,8BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,UACL4H,GAAG,UACH5I,MAAO6sB,EAAUzhB,QACjB2H,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGpC,KAAlBuL,GAAOnI,QACH,uBAAM1E,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOnI,UACpC,QAIhB,sBAAK1E,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAO6sB,EAAUwF,SACjBtf,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,0BAU1E,uBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAWoF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,0CAEJ,uBAAK4I,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UAEQ6mB,GAAYA,EAAS7d,OAAS,GAC1B,sBAAKhJ,UAAU,sBAAf,SACI,yBAAOjE,MAAO,CAAEtF,MAAO,QAAUuJ,UAAU,OAA3C,UACI,wBAAOA,UAAU,OAAjB,SACA,gCACI,oDACA,uCACA,wCACA,0CACA,+CAGJ,wBAAOA,UAAU,OAAjB,SACC6mB,EAASzsB,KAAI,SAAC4P,EAAMnD,GACjB,OACI,sBAAqB7G,UAAU,OAA/B,UACI,8BACIkrB,GAAgBlhB,EAAKuc,kBAEzB,8BACIvc,EAAKxP,UAAY,IAAOwP,EAAKyc,WAAa,IAAMzc,EAAKwc,WAEzD,8BACQxc,EAAKqc,QAEb,8BACQrc,EAAKtF,UAEb,gCACI,yBAAQrL,KAAK,SACL2G,UAAU,2CACVsF,QAAS,kBAtxB1D,SAACwO,EAAUjN,GAClC0Y,EAAazL,GACbsT,GAAgB,GAChBP,EAAStS,OAAO1N,EAAO,EAC1B,CAkxB0FymB,CAAmBtjB,EAAMnD,EAA/B,EAFjB,SAII,eAAC,KAAD,CAAiB9D,KAAK,WAL9B,WAQI,yBACI1J,KAAK,SACL2G,UAAU,kCACVsF,QAAS,SAACwF,GAAD,OAlyBpD,SAACjE,GAC1BggB,EAAStS,OAAO1N,EAAO,GACvBigB,EAAY,aAAID,GACnB,CA+xBuF0G,CAAqB1mB,EAA5B,EAHb,SAKI,eAAC,KAAD,CAAiB9D,KAAK,iBA1BzBiH,EAAKnD,MA+BrB,WAMjB,sBAAK7G,UAAU,sBAAf,SAEQmnB,GACI,sBAAKnnB,UAAU,OAAf,SACI,uBAAKA,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,mBAAX,iCACA,0BACIhY,UAAU,eACV1F,KAAK,iBACL4H,GAAG,iBACH5I,MAAOgmB,EAAUiH,eACjBxqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,GANd,UAQI,yBAAQ9xB,MAAO,GAAf,oBACCuuB,GAAoBztB,KAAI,SAAC0Z,EAAUjN,GAAX,OACrB,yBAA0BvN,MAAOwa,EAAS5R,GAA1C,SAA+C4R,EAASzd,SAA3Cyd,EAAS5R,GADD,OAIH,KAAzB2K,GAAO0Z,eACR,uBAAMvmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO0Z,iBACpC,QAIZ,sBAAKvmB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,aAAX,0BACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACLhB,MAAOgmB,EAAU9kB,UACjB0H,GAAG,YACHnG,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,KAEM,KAApBve,GAAOrS,UACP,uBAAMwF,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOrS,YACpC,QAIZ,sBAAKwF,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOgmB,EAAUmH,WACjB1qB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,UAMtB,sBAAKprB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAOgmB,EAAUkH,SACjBzqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,KAEK,KAAnBve,GAAO2Z,SACP,uBAAMxmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO2Z,WACpC,WAKhB,uBAAKxmB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,qBAAX,0BACA,eAAC,KAAD,CACI4U,eAAgB,CAACn2B,MAAM,OAAOmc,OAAQ,qBACtCia,WAAY,CAACp2B,MAAM,OAAO6K,aAAa,OACvCwrB,QAAS,KACTC,YAAY,kBACZzyB,KAAK,QACLhB,MAAOgmB,EAAU+G,MACjBnkB,GAAG,QAEHmK,SAAU,SAACvB,IAjxB5D,SAACA,EAAG+gB,GAEnBtM,EAAa,2BAAID,GAAL,mBAAkBuM,EAAY/gB,EAAEghB,MAAM,EADxC,MAEjB,CA8wBuF0B,CAAiB1iB,EAAEghB,MAAM,EAAG,IAAI,QAAS,SAMrE,sBAAK9rB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,eAAX,mBACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,QACL4H,GAAG,QACH5I,MAAOgmB,EAAUgH,MACjBvqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,UAMtB,sBAAKprB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,iBAAX,qBACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,UACL4H,GAAG,UACH5I,MAAOgmB,EAAU5a,QACjB3I,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,aAO1B,uBAAKprB,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,SACI,eAAC,KAAD,CACI3G,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,GAAQ3M,OACnBsO,QAj8BrC,SAACwF,IATN,WACtB,IAAIkC,EAAI,eAAQH,IAKhB,OAJIG,EAAKxS,UAAY8kB,EAAU9kB,UAAY,GAAK,yBAC5CwS,EAAKwZ,SAAWlH,EAAUkH,SAAW,GAAK,0BAC1CxZ,EAAKuZ,eAAiBjH,EAAUiH,eAAiB,GAAK,iCAClDzZ,GAAU,eAAKE,IAChBrB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,GACrC,EAGMgtB,IACC3G,EAAY,GAAD,oBAAKD,GAAL,CAAevH,IAGjC,EAu7B+D,mBAWJ,sBAAKtf,UAAU,QAAf,SACI,eAAC,KAAD,CACI3G,KAAK,SACLyC,QAAQ,YACR1E,MAAM,YACN4I,UAAW2D,GAAQ3M,OACnBsO,QA39B/B,WACjC8hB,GAAgB,EACnB,EAo9B+D,mCAkBhC,sBAAKpnB,UAAU,QACX,eAAC,KAAD,CACI3G,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,GAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAn/Bd,WACtB8hB,GAAgB,EACnB,EAk/BuCrrB,MAAO,CAACC,gBAAgB,UAAUE,WAAW,UAPjD,8CAeZ,uBAAK8D,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAUoF,aAAa,UAA9G,SACI,qBAAItB,UAAU,aAAcjE,MAAO,CAAC3E,MAAM,QAA1C,gCAGJ,sBAAK4I,UAAU,YAAf,SACJ,uBAAKA,UAAU,MAAf,UACA,qDACA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,oCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,iBACL4H,GAAG,iBACHmK,SAAUuF,GACVtY,MAAO+W,GAAU0Y,eACjBne,UAAQ,IAEc,KAAzBiC,GAAOkc,eACJ,uBAAM/oB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOkc,iBACxC,QAGR,sBAAK/oB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,GAAX,wCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACHmK,SAAUuF,GACVtY,MAAO+W,GAAU2Y,UACjBpe,UAAQ,IAES,KAApBiC,GAAOmc,UACJ,uBAAMhpB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOmc,YACxC,QAGR,sBAAKhpB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,eACL4H,GAAG,eACH5I,MAAO+W,GAAU4H,aACjB5L,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAG1B,KAAvBuL,GAAOoL,aACJ,uBAAMjY,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOoL,eACxC,QAIR,sBAAKjY,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,eAAX,6BACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACHmK,SAAUuF,GACVtY,MAAO+W,GAAUuY,aACjBhe,UAAQ,EANZ,UAQA,yBAAQtR,MAAM,GAAd,eAECslB,GAAWxkB,KAAI,SAACd,GAAD,OACZ,yBAAuBA,MAAOA,EAAM6e,KAApC,SACK7e,EAAMjD,SADEiD,EAAM4I,GADP,OAOS,KAAvB2K,GAAO+b,aACD,uBAAM5oB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO+b,eACxC,QAKR,sBAAK5oB,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,kBACL4H,GAAG,kBACHmK,SAAUuF,GACVtY,MAAO+W,GAAUsY,gBACjB/d,UAAQ,EANZ,UAQA,yBAAQtR,MAAM,SAAd,eAECulB,GAAUzkB,KAAI,SAACd,GAAD,OACX,yBAAuBA,MAAOA,EAAM6e,KAApC,SACK7e,EAAMjD,SADEiD,EAAM4I,GADR,OAOY,KAA1B2K,GAAO8b,gBACA,uBAAM3oB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO8b,kBACxC,QAIR,sBAAK3oB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,8CACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,4BACL4H,GAAG,4BACH5I,MAAO+W,GAAUsP,0BACjBtT,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGhB,KAApCuL,GAAO8S,0BACL,uBAAM3f,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO8S,4BACxC,QAGR,sBAAK3f,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,wCACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,sBACL4H,GAAG,sBACH5I,MAAO+W,GAAUqY,oBACjBrc,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGvB,KAA9BuL,GAAO6b,oBACJ,uBAAM1oB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO6b,sBACxC,QAGR,sBAAK1oB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,8BACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,gBACL4H,GAAG,gBACH5I,MAAO+W,GAAUyY,cACjBzc,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAG7B,KAAxBuL,GAAOic,cACJ,uBAAM9oB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOic,gBACxC,gBASX3e,EAAS,eAACU,GAAA,EAAD,IAAc,GAExB,wBAGA,eAAC,KAAD,CACIxR,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,GAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX8R,SAAUuT,EACVzhB,QAAS+lB,GAPb,SASMlhB,EAGE,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,uBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,oBAMR,eAAC,KAAD,CACI7F,QAAQ,YACRkE,UAAW2D,GAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QA5hCR,WAChBa,GAAQe,KAAK,CAAExL,SAAU,KAC5B,EA2hC2BK,MAAO,CAACC,gBAAgB,WAL5B,SAOI,uBAAMD,MAAO,CAAE4F,cAAe,aAAcvK,MAAM,QAAlD,gCAMpB,gBAAC,KAAD,CAAOkT,KAAMmf,GAAMjf,OAAQA,GAAQxK,UAAU,OAAO1E,KAAK,KACrD,kBAAgB,gCAChBoyB,UAAQ,EAACC,SAAS,SAFtB,UAGC,eAAC,KAAMljB,OAAP,UACD,eAAC,KAAMmjB,MAAP,CAAa1rB,GAAG,gCAAhB,6BAII,eAAC,KAAMF,KAAP,UACI,qEAGR,eAAC,KAAM6rB,OAAP,UACI,eAAC5xB,GAAA,EAAD,CAAQqJ,QAASkF,GAAQzO,MAAO,CAACC,gBAAgB,UAAW5E,MAAM,QAAlE,wBAKf,EC1tDDwtB,KAAQC,IAAIC,KAAeC,KAAUC,KAAQC,MAE7C,IAAM5lB,GAAYrJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF0f,SAAU,EACV5V,SAAU,KAEd+X,KAAM,CACF9c,gBAAiB/F,EAAM4M,QAAQkW,WAAWC,SAE9CC,OAAQ,CACJ5iB,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UApCW,IA87Dd6tB,GAr5DU,SAACrwB,GACtBqP,QAAQC,IAAItP,GACZ,IAsFIwrB,EACAzkB,EAvFJ,EAAiCrE,mBACzB,CACI4tB,QAAQ,EACRzgB,QAAS,GACT0gB,QAAS,GACT5gB,aAAc,GACdxJ,YAAa,GACbqqB,UAAU,EACVC,iBAAkB,KAClB9qB,UAAW,GACX+qB,SAAU,GACVtsB,WAAY,GACZusB,UAAW,GACXC,gBAAiB,GACjBC,YAAa,GACbC,mBAAmB,GACnBzN,mBAAoB,GACpB0N,uBAAwB,KACxB7qB,IAAI,GACJwJ,YAAY,GACZshB,eAAe,GACfztB,IAAI,GACJ0tB,UAAU,GACVC,QAAQ,GACRC,SAAS,GACT2F,SAAS,GACT1F,MAAM,GACNC,UAAU,KA3BtB,mBAAOC,EAAP,KAAkBC,EAAlB,KA+BA,EAAiC7uB,mBACrB,CACImN,QAAQ,GACR2hB,MAAM,GACN7rB,UAAW,GACX8rB,MAAO,GACPC,eAAgB,GAChBC,SAAU,GACVC,WAAY,KAR5B,mBAAOnH,EAAP,KAAkBC,EAAlB,KAYA,EAA0BhoB,oBAAS,IAAIe,MAAOouB,cAAcC,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAAvF,mBAAOvuB,EAAP,KACA,GADA,KACgCd,mBAAS,KAAzC,mBAAOsvB,EAAP,KAAiBC,EAAjB,KACA,EAA4BvvB,oBAAS,GAArC,mBAAO4S,EAAP,KACA,GADA,KACsC5S,oBAAS,IAA/C,mBAAO0vB,EAAP,KAAoBC,EAApB,KACA,EAAwC3vB,oBAAS,GAAjD,mBAAO4vB,EAAP,KAAqBC,EAArB,KACA,EAAwC7vB,mBAAS,MAAjD,mBACA,GADA,UAC6BA,mBAAS,KAAtC,mBAAO8vB,EAAP,KAAgBC,EAAhB,KACA,EAAuD/vB,mBAAS,IAAhE,mBAAOgwB,EAAP,KAA6BC,EAA7B,KACA,EAA+CjwB,mBAAS,IAAxD,mBAAOkwB,EAAP,KAAyBC,EAAzB,KACA,GAAiDnwB,mBAAS,IAA1D,qBAAOowB,GAAP,MAA0BC,GAA1B,MACA,GAAqDrwB,mBAAS,IAA9D,qBAAOswB,GAAP,MAA4BC,GAA5B,MACA,GAAkCvwB,mBAAS,IAA3C,qBAAOwwB,GAAP,MAAkBC,GAAlB,MACA,GAA4BzwB,mBAAS,IAArC,qBAAO0wB,GAAP,MAAeC,GAAf,MACA,GAAkC3wB,mBAAS,IAA3C,qBAAO4wB,GAAP,MAAkBC,GAAlB,MACA,GAA4B7wB,mBAAS,CAAC,GAAtC,qBAAOsV,GAAP,MAAeC,GAAf,MACA,GAAmEvV,mBAAS,IAA5E,qBAAmC8wB,IAAnC,aACA,GAAmC9wB,mBAAS,CAAC,OAAS,GAAI,cAAgB,KAA1E,qBAAOk3B,GAAP,MAEM9qB,IAFN,MACmB9O,EAAMV,UAAYU,EAAMV,SAASwH,OAAQ9G,EAAMV,SAASwH,MAAM4sB,KACjElpB,MACV8G,GAAUC,cACVjS,GAAWq0B,cAEhB,GAAuCjxB,oBAAS,GAAhD,qBAAOm3B,GAAP,MAAqBjG,GAArB,MAEA,GAAkClxB,mBAAS,CAAC2K,GAAG,GAAItH,SAAU,GAAGsd,mBAAmB,GAAG+F,aAAa,GAAIC,aAAa,GAAGC,uBAAuB,GAAGC,iBAAiB,GAAGuQ,mBAAmB,GAAGrQ,oBAAoB,GAAGC,kBAAkB,GAAGC,UAAU,GAAGvN,WAAW,GAAGwN,cAAc,GAAGC,aAAa,GAAGC,UAAU,GAC7SiQ,gBAAgB,GAAIC,qBAAqB,GAAIC,yBAAyB,GACtEC,uBAAuB,GAAIC,2BAA2B,GACtDC,oBAAoB,KAHpB,qBAAO5e,GAAP,MAAkBC,GAAlB,MAIA,GAAoC/Y,mBAAS,IAA7C,qBAAOqnB,GAAP,MAAmBqK,GAAnB,MACA,GAA4C1xB,mBAAS,IAArD,qBAAO23B,GAAP,MAAuBhG,GAAvB,MACA,GAAkC3xB,mBAAS,IAA3C,qBAAOsnB,GAAP,MAAkB9a,GAAlB,MACA,GAA0CxM,mBAAS,IAAnD,qBAAO43B,GAAP,MAAsBhG,GAAtB,MACA,GAAgC5xB,mBAAS,IAAzC,qBAAO8d,GAAP,MAAiB9H,GAAjB,MACA,GAAoBhW,mBAAS,IAA7B,qBAAO63B,GAAP,MAAWhG,GAAX,MACA,GAA8C7xB,mBAAS,IAAvD,qBAAO83B,GAAP,MAAwBhG,GAAxB,MAEA,GAAoC9xB,oBAAS,GAA7C,qBAAO+3B,GAAP,MAAmBxQ,GAAnB,MAEA,GAAsCvnB,oBAAS,GAA/C,qBAAOg4B,GAAP,MAAoBzB,GAApB,MAEA,GAA6Cv2B,mBAAS,SAAtD,qBAAOi4B,GAAP,MAEK7F,IAFL,MAEqBx1B,GAASwH,OAG/B0kB,EAAYsJ,GAAgBA,GAActJ,UAAY,KACtDzkB,EAAa+tB,GAAgBA,GAAc/tB,WAAa,CAAC,EAEzD,OAAiDrE,oBAAS,GAA1D,qBAAO+xB,GAAP,MAA0BC,GAA1B,MACA,GAAmDhyB,oBAAS,GAA5D,qBAAOk4B,GAAP,MAA2BjG,GAA3B,MAEAvxB,qBAAU,WAeN,GAdA2xB,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA/Y,KACAgZ,KACAC,KACAC,KACG5uB,EAAW,CACV,IAAMirB,EAAWjrB,EAAWwpB,QAAUxpB,EAAWwpB,QAAU,GAEvDkG,EAAgB,GAECzE,EAASzB,SAAWyB,EAASzB,QAAQpc,OAAO,GAAK6d,EAASzB,QAAQhrB,KAAI,SAACqG,GACxF,IAAM8qB,EACF,CACI7mB,QAAQjE,EAAEiE,QAAQ8mB,KAAK,GACvBnF,MAAM5lB,EAAE+D,aAAalL,MACrBkB,UAAUiG,EAAEjG,UACZ8rB,MAAO,GACPC,eAAgB9lB,EAAE8lB,eAClBC,SAAU/lB,EAAEhG,QACZgsB,WAAYhmB,EAAE+kB,WAEtB8F,EAAgBpkB,KAAKqkB,EACxB,IACDzE,EAAYwE,GACZ,IAAM0C,EAAcpyB,EAAW3C,WACzByL,EAAU9I,EAAW8I,QACrBF,EAAe5I,EAAW4I,aAC1BtL,EAAiB80B,EAAY/0B,WAAWE,MAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,IAAR,IAChDgtB,EAAQ7hB,EAAaA,aAAarL,MAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,IAAR,IAC1CitB,EAAQ9hB,EAAaA,aAAarL,MAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,IAAR,IAC1C40B,EAAWzpB,EAAaA,aAAarL,MAAK,SAAAC,GAAG,MAAgB,YAAZA,EAAIC,IAAR,IAC7CyzB,EAAUpoB,GAAWA,EAAQA,SAAWA,EAAQA,QAAQsE,OAAS,EAAItE,EAAQA,QAAQ,GAAK,KAEhGyhB,EAAU/tB,IAAIwD,EAAWZ,YACzBmrB,EAAU3rB,UAAUoB,EAAWpB,UAC/B2rB,EAAUjO,mBAAmBtc,EAAWsc,mBACxCiO,EAAUM,WAAW7qB,EAAW4pB,UAChCW,EAAUK,SAAS5qB,EAAWnB,QAC9B0rB,EAAUjtB,eAAeA,EAAiBA,EAAeI,MAAQ,GACjE6sB,EAAUV,gBAAgB7pB,EAAW8hB,cAAcxb,GACnDikB,EAAUR,mBAAmB/pB,EAAWsyB,iBAAiBhsB,GACzDikB,EAAUZ,SAAS3pB,EAAWf,OAASe,EAAWf,OAAOqH,GAAK,KAC9DikB,EAAUF,MAAMrqB,EAAWd,IAC3BqrB,EAAUT,YAAY9pB,EAAWuyB,UAAUjsB,GAC3CikB,EAAU5hB,YAAY8hB,GAASA,EAAM/sB,MAAQ+sB,EAAM/sB,MAAQ,GAC3D6sB,EAAUN,eAAgBoI,GAAYA,EAAS30B,MAAQ20B,EAAS30B,MAAQ,GACxE6sB,EAAUG,MAAMA,GAASA,EAAMhtB,MAAQgtB,EAAMhtB,MAAQ,GACrD6sB,EAAUzhB,QAAQooB,GAAWA,EAAQnoB,KAAOmoB,EAAQnoB,KAAO,GAC3DwhB,EAAUwF,SAASmB,EAAQtB,KAAK,GAChCrF,EAAUL,UAAUgH,EAAQhH,UAC5BuH,GAAoBP,EAAQhH,WAiIZsI,EAhIDtB,EAAQ/G,QAiI3BruB,IACCrD,IADD,UACQsD,EADR,wDAC+Dy2B,GAC3D,CAAEx2B,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHswB,GAAatwB,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,IAzIGgvB,EAAUJ,QAAQ+G,EAAQ/G,QAC1BI,EAAUH,SAAS8G,EAAQ9G,SAC3B1V,GAAa1U,EAAWgY,YACxB,IAAMya,EAAWl2B,GAAc+C,GAAOU,EAAWZ,aAAaG,OAAO,eACrEgrB,EAAUprB,IAAIszB,EACd5F,GAAiC,WAAjB7sB,EAAWd,KAC3BqrB,EAAUD,UAAUtqB,EAAWsqB,SAElC,CAuHL,IAAwBkI,EAtHjBjI,EAAUjO,mBAAqBiO,EAAU/tB,KACxCqyB,MAAM,6DAGb,GAAE,CAAC7uB,EAAYykB,EAAW8F,EAAUjO,qBAErC,IAAM0R,GAAcc,sBAAW,gCAAC,uHAEDhzB,IAAMrD,IAAN,UAAasD,EAAb,+BAAmD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF1F,OAElB8D,EAFkB,OAGxBwvB,EAAWxvB,EAASC,MAHI,uGAO7B,IACG8xB,GAAoBa,sBAAW,gCAAC,uHAEPhzB,IAAMrD,IAAN,UAAasD,EAAb,0CAA8D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF/F,OAExB8D,EAFwB,OAG9B0vB,EAAwB1vB,EAASC,MAHH,uGAMnC,IACG+xB,GAAgBY,sBAAW,gCAAC,uHAEHhzB,IAAMrD,IAAN,UAAasD,EAAb,qCAAyD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF9F,OAEpB8D,EAFoB,OAG1B4vB,EAAoB5vB,EAASC,MAHH,uGAO/B,IACGgyB,GAAiBW,sBAAW,gCAAC,uHAEJhzB,IAAMrD,IAAN,UAAasD,EAAb,sCAA0D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF9F,OAErB8D,EAFqB,OAG3B8vB,GAAqB9vB,EAASC,MAHH,uGAOhC,IACGiyB,GAAoBU,sBAAW,gCAAC,uHAEThzB,IAAMrD,IAAN,UAAasD,EAAb,wCAA4D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF3F,OAE1B8D,EAF0B,OAGhCgwB,GAAuBhwB,EAASC,MAHA,uGAMnC,IACGkyB,GAAsBS,sBAAW,gCAAC,8GACbhzB,IAAMrD,IAAN,UAAasD,EAAb,kDAAsE,CAAEC,QAAS,CAAC,+BAA4B5D,MADjG,OAC9B8D,EAD8B,OAEpCuwB,GAA8BvwB,EAASC,MAFH,2CAGrC,IAOKyyB,GAAY,WAChB9yB,IACCrD,IADD,UACQsD,EADR,kDAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHkwB,GAAalwB,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKgB,GAAgB,SAAAC,GAClB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,CAChB,EASH,SAAS00B,GAAoBD,GACzB11B,IACCrD,IADD,UACQsD,EADR,wDAC+Dy1B,GAC3D,CAAEx1B,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHowB,GAAUpwB,EAASC,KACtB,IACAC,OAAM,SAACb,GAEP,GACJ,CA8BD,IAiBMwzB,GAA0B,SAAC7f,GACP,UAAlBA,EAAE+G,OAAOvY,MACT4tB,GAAe,GACU,aAAlBpc,EAAE+G,OAAOvY,OAChB4tB,GAAe,EAEtB,EAiBK0D,GAAyB,SAAA9f,GAM3B,GALAsb,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,SAErC,UAAhBwR,EAAE+G,OAAOvX,MAAmC,WAAjBwQ,EAAE+G,OAAOvY,OACnCmvB,IAAgB,GAED,cAAhB3d,EAAE+G,OAAOvX,MAAuC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CAClD,IAAMgB,EAAOuwB,GAAa/f,EAAE+G,OAAOvY,OACnC8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOA,IAClD,CACD,GAAmB,aAAhBwQ,EAAE+G,OAAOvX,MAAsC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CACjD,IAAMgB,EAAOuwB,GAAa/f,EAAE+G,OAAOvY,OACnC8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOA,IAClD,CACD,GAAmB,eAAhBwQ,EAAE+G,OAAOvX,MAAwC,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CACnD,IAAMgB,EAAOuwB,GAAa/f,EAAE+G,OAAOvY,OACnC8sB,EAAY,2BAAMD,GAAN,mBAAmBrb,EAAE+G,OAAOvX,KAAOA,IAClD,CACD,GAAmB,mBAAhBwQ,EAAE+G,OAAOvX,MAA4C,KAAjBwQ,EAAE+G,OAAOvY,MAAW,CAAC,IACzCo2B,EADwC,iDACvD,qGACUzE,EAAengB,EAAE+G,OAAOvY,MADlC,SAE2B5B,IAAMsT,KAAN,UAAcrT,EAAd,iCAAsDszB,EACrE,CAAErzB,QAAS,CAAC,+BAA4B5D,GAAS,eAAgB,gBAH7E,QAKuB,IALvB,OAKgB+D,MACRwxB,IAAqB,GACrBjZ,GAAY,2BAAMD,IAAN,IAAkBzV,SAAUkQ,EAAE+G,OAAOvY,SACjDkwB,IAAsB,KAEtBD,IAAqB,GACrBC,IAAsB,IAX9B,2CADuD,qDAevDkG,GACC,CAER,EAqCKxE,GAAkB,SAAC3E,GACrB,IAAM4E,EAAetD,GAAoB1uB,MAAK,SAAAC,GAAG,OAAIA,EAAI8I,IAAMqkB,CAAd,IACjD,OAAO4E,EAAeA,EAAa90B,QAAU,EAChD,EACK+0B,GAA6B,SAAAtgB,GAC/ByU,EAAY,2BAAMD,GAAN,mBAAmBxU,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,QAC3D,EAEK+e,GAAW,WACb,IAAIrL,EAAI,eAAQH,IA0BhB,OAzBIG,EAAKxS,UAAY2rB,EAAU3rB,UAAY,GAAK,yBAC5CwS,EAAK9T,eAAiBitB,EAAUjtB,eAAiB,GAAK,gCAGtD8T,EAAKwZ,SAAWL,EAAUK,SAAW,GAAK,0BAC1CxZ,EAAKiZ,MAAQE,EAAUF,MAAQ,GAAK,mBACpCjZ,EAAKuhB,oBAAsBpI,EAAUjO,mBAAqB,GAAK,oCAC/DlL,EAAK0Y,YAAcS,EAAUT,YAAc,GAAK,yBAChD1Y,EAAKtI,QAAUyhB,EAAUzhB,QAAU,GAAK,uBACxCsI,EAAKzI,YAAc4hB,EAAU5hB,YAAc,GAAK,6BAChDyI,EAAK8Y,UAAYK,EAAUL,UAAY,GAAK,uBAC5C9Y,EAAK+Y,QAAUI,EAAUJ,QAAU,GAAK,qBACxC/Y,EAAKgZ,SAAWG,EAAUH,SAAW,GAAK,4BAE1ChZ,EAAKyR,cAAgBpO,GAAUoO,cAAgB,GAAK,4BACpDzR,EAAKoR,iBAAmB/N,GAAU+N,iBAAmB,GAAK,gCAC1DpR,EAAK2hB,mBAAqBte,GAAUse,mBAAqB,GAAK,kCAC9D3hB,EAAKsR,oBAAsBjO,GAAUiO,oBAAsB,GAAK,0CAChEtR,EAAKiE,WAAaZ,GAAUY,WAAa,GAAK,yBAC9CjE,EAAKmR,uBAAyB9N,GAAU8N,uBAAyB,GAAK,sCACtEnR,EAAKiR,aAAe5N,GAAU4N,aAAe,GAAK,gCAClDjR,EAAKkL,mBAAqB7H,GAAU6H,mBAAqB,GAAK,oCAC9DlL,EAAKpS,SAAWyV,GAAUzV,SAAW,GAAK,yBAEtCkS,GAAU,eAAKE,IAChBrB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,GACrC,EAEK4qB,GAAY,iDAAG,WAAOvgB,GAAP,gGACjBA,EAAEC,iBACIujB,EAAWjH,EAAQluB,MAAK,SAACsH,GAAD,OAAMA,EAAEpK,UAAU8vB,EAAUF,KAA5B,IAC9BE,EAAUF,MAAMqI,EAASpsB,IACrBmW,KAJa,wBAKTiT,EAAgB,GAECzE,GAAYA,EAAS7d,OAAO,GAAK6d,EAASzsB,KAAI,SAACqG,GAEhE,IAAM8qB,EAAc,CACpB7mB,QAAS,CACL8mB,KAAM,CACF/qB,EAAEiE,UAGVF,aAAc,CACVnL,KAAM,QACNC,MAAOmH,EAAE4lB,OAEb7rB,UAAWiG,EAAEjG,UACbixB,SAAUhrB,EAAEjG,UAAY,IAAMiG,EAAEgmB,WAAa,IAAMhmB,EAAE+lB,SACrDD,eAAgB9lB,EAAE8lB,eAClB9rB,QAASgG,EAAE+lB,SACXhB,UAAW/kB,EAAEgmB,YAGjB6E,EAAgBpkB,KAAKqkB,EACpB,IA3BY,SA6BHG,EAAc,CAChBvG,QAAQ,EACRzgB,QAAS,CACL,CACI,KAAQyhB,EAAUzhB,QAClB,UAAayhB,EAAUL,UACvB,SAAYK,EAAUH,SACtB,KAAQ,CACJG,EAAUwF,UAEd,mBAAsB,EACtB,WAAc,GACd,QAAWxF,EAAUJ,UAG7BX,QAASkG,EACT9mB,aAAc,GACdxJ,YAAamrB,EAAU/tB,IACvBitB,UAAU,EACVC,iBAAkB,KAClB9qB,UAAW2rB,EAAU3rB,UACrB+qB,SAAUY,EAAUZ,SACpBU,MAAME,EAAUF,MAChBhtB,WAAY,CACR,CACI,WAAc,EACd,KAAQ,iBACR,MAASktB,EAAUjtB,iBAG3BssB,UAAWW,EAAUM,WACrBhB,gBAAiBU,EAAUV,gBAC3BhrB,QAAS0rB,EAAUK,SACnBd,YAAaS,EAAUT,YACvBC,mBAAoBQ,EAAUR,mBAC9BzN,mBAAoBiO,EAAUjO,mBAC9B0N,uBAAiD,UAAzBO,EAAUnrB,YAClCkrB,UAAWC,EAAUD,WAEnBG,EAAQ,CACV,KAAQ,QACR,MAASF,EAAU5hB,aAEnB4hB,EAAUG,QACJA,EAAQ,CACV,KAAQ,QACR,MAASH,EAAUG,OAEvBoF,EAAYlnB,aAAa0C,KAAKof,IAE9BH,EAAUN,iBACJA,EAAiB,CACnB,KAAQ,WACR,MAASM,EAAUN,gBAEvB6F,EAAYlnB,aAAa0C,KAAK2e,IAElC6F,EAAYlnB,aAAa0C,KAAKmf,GAC9BqF,EAAYxpB,GAAKme,EACjBoO,GAAWkB,OAAOjE,EAClB+C,GAAWmB,cAAcvf,GAzFhB,UA0Fc3Y,IAAM2e,IAAN,UAAa1e,EAAb,uBAAmCiE,EAAWsG,IAAMusB,GAAY,CAAE72B,QAAS,CAAC,+BAA4B5D,MA1FtH,eA2FT4U,IAAMtR,QAAQ,8BACd6O,GAAQe,KAAK,KA5FJ,kDA8FN,KAAMpP,UAAY,KAAMA,SAASC,OAC5B8Q,EAAe,KAAM/Q,SAASC,MAA+C,KAAvC,KAAMD,SAASC,KAAK+Q,SAASC,QAAe,KAAMjR,SAASC,KAAK+Q,SAASC,QAAW,yCAC9HH,IAAMzR,MAAM0R,IAhGP,0DAAH,sDAsGZgiB,GAAa,SAACvxB,GAEhB,OADeA,EAAMstB,QAAQ,WAAY,GAE5C,EAEKsD,GAAgB,WACdxyB,IACKrD,IADL,UACYsD,EADZ,uCAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHmxB,GAAcnxB,EAASC,KAC1B,IACAC,OAAM,SAACb,GAEP,GACZ,EAEKgzB,GAAgB,WACdzyB,IACCrD,IADD,UACQsD,EADR,2CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHoxB,GAAkBpxB,EAASC,KAC9B,IACAC,OAAM,SAACb,GAEP,GACR,EAEKizB,GAAW,WACb1yB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHiM,GAAajM,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKkzB,GAAmB,WACrB3yB,IACCrD,IADD,UACQsD,EADR,8CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHqxB,GAAiBrxB,EAASC,KAC7B,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKma,GAAU,WACZ5Z,IACCrD,IADD,UACQsD,EADR,qCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHyV,GAAYzV,EAASC,KACxB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKmzB,GAAI,WACN5yB,IACCrD,IADD,UACQsD,EADR,wCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHsxB,GAAMtxB,EAASC,KAClB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKozB,GAAiB,WACnB7yB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHuxB,GAAmBvxB,EAASC,KAC/B,IACAC,OAAM,SAACb,GAEP,GACJ,EACKya,GAAoB,SAAA9G,GACtBwF,GAAY,2BAAMD,IAAN,mBAAmBvF,EAAE+G,OAAOvX,KAAOwQ,EAAE+G,OAAOvY,SACpC,iBAAjBwR,EAAE+G,OAAOvX,OACY,OAAjBwQ,EAAE+G,OAAOvY,MACRwlB,IAAc,GAEdA,IAAc,IAGF,sBAAjBhU,EAAE+G,OAAOvX,OACR4J,QAAQC,IAAI2G,EAAE+G,OAAOvY,OACD,OAAjBwR,EAAE+G,OAAOvY,MACRwlB,IAAc,GAEdA,IAAc,GAGzB,EAMK8M,GAAsB,SAAC9gB,EAAG+gB,GAGxBzF,EAAa,2BAAID,GAAL,mBAAkB0F,EAAY/gB,EAAEghB,MAAM,EAFxC,MAGjB,EAEK+D,GAAgB,SAAA/kB,GACfA,EAAE+G,OAAOmB,QACR8a,IAAe,GAEfA,IAAe,EAEtB,EAGD,OACI,uCACI,eAAC,IAAD,CAAgB/B,UAAW,IAAMC,iBAAe,IAChD,eAAC,KAAD,CAAMhsB,UAAW2D,GAAQ/M,WAAzB,SACI,gBAAC,KAAD,WACA,eAAC,IAAD,CACI6E,GAAI,CACAC,SAAU,mBACVC,MAAO,CAAEC,WAAYA,IAH7B,SAMQ,eAACK,GAAA,EAAD,CACIH,QAAQ,YACR1E,MAAM,UACN4I,UAAU,kBACVjE,MAAO,CAACC,gBAAgB,UAAUE,WAAW,UAC7CwF,UAAW,eAAC,KAAD,IALf,SAOI,uBAAM3F,MAAO,CAAE4F,cAAe,aAAcvK,MAAM,QAAlD,uBAGR,wBACA,wBACA,sBAAK4I,UAAU,sBAAf,SACI,gBAACksB,GAAA,EAAD,WACI,uBAAKlsB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAWoF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,qCAGJ,sBAAK4I,UAAU,YAAf,SACI,uBAAKA,UAAU,aAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,qBAAX,oCACA,eAACrN,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,qBACL4H,GAAG,qBACH5I,MAAO6sB,EAAUjO,mBACjB7L,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGxB,KAA9BuL,GAAO0hB,oBACP,uBAAMvuB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO0hB,sBACpC,QAIZ,sBAAKvuB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,+BACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,iBACL4H,GAAG,iBACH5I,MAAO6sB,EAAUjtB,eACjBmT,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAoBtR,aAAa,UACjDkS,SAAqC,WAA3BmW,GAAcriB,aAEH,KAAzBuF,GAAO3T,eACP,uBAAM8G,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO3T,iBACpC,GACsB,KAAzB2T,GAAO3T,eACR,uBAAM8G,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO3T,iBACpC,IACiB,IAApBowB,GACG,uBAAMtpB,UAAW2D,GAAQxM,MAAzB,SAAiC,kCACjC,IACkB,IAArBs4B,GACG,uBAAMzvB,UAAW2D,GAAQrM,QAAzB,SAAmC,2BACpC,QAGX,sBAAK0I,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,0BACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACHsR,SAAS,OACTla,MAAOoZ,KAAKod,MAAsB,QAAhBpd,KAAKqd,UAEvBh0B,MAAO,CAAC6W,OAAQ,oBAAoBtR,aAAa,oBAQjE,uBAAKtB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,2BACA,eAACrN,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACH5I,MAAO6sB,EAAU3rB,UACjB6R,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGjC,KAApBuL,GAAOrS,UACR,uBAAMwF,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOrS,YACpC,QAIZ,sBAAKwF,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,eAACC,GAAA,EAAD,CACI3K,UAAU,eACV3G,KAAK,OACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAO6sB,EAAUM,WACjBpa,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,iBAM9D,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAO6sB,EAAUK,SACjBna,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAGnC,KAAnBuL,GAAO2Z,SACP,uBAAMxmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO2Z,WACpC,WAKhB,uBAAKxmB,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,0BACQ1K,UAAU,eACV1F,KAAK,QACL4H,GAAG,QACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUF,MACjBlqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAN1D,UAUQ,yBAAQhI,MAAO,GAAf,oBACC+tB,EAAQjtB,KAAI,SAACS,EAAQgM,GAAT,OACb,yBAAwBvN,MAAOuB,EAAOxE,QAAtC,SAAgDwE,EAAOxE,SAA1CwE,EAAOqH,GADP,OAIA,KAAhB2K,GAAOoZ,MACZ,uBAAMjmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOoZ,QACpC,QAGZ,sBAAKjmB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,sBAAK1K,UAAU,QAAf,SACI,mCACI,wBACI3G,KAAK,QACLC,MAAM,SACNgB,KAAK,cACL6xB,gBAAc,EAEd9f,SAAU,SAACvB,GAAD,OAAO6f,GAAwB7f,EAA/B,EACV/O,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAR1D,eAYJ,sBAAKtB,UAAU,QAAf,SACI,mCACI,wBACI3G,KAAK,QACLC,MAAM,YACNgB,KAAK,cAEL+R,SAAU,SAACvB,GAAD,OAAO6f,GAAwB7f,EAA/B,EACV/O,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAP1D,uBAcZ,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,mBACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,MACL4H,GAAG,MACH6Q,IAAK1a,EACLiB,MAAO6sB,EAAU/tB,IACjBiU,SApmB5B,SAACvB,GACrB,GAAIA,EAAE+G,OAAOvY,MAAO,CAChB,IAAMjB,EAAQ,IAAIC,KACZI,EAAY,IAAIJ,KAAKwS,EAAE+G,OAAOvY,OAChCX,EAAUN,EAAMO,cAAgBF,EAAUE,cACxCC,EAAIR,EAAMS,WAAaJ,EAAUI,YACnCD,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YACjDJ,IAEJwtB,EAAUprB,IAAIpC,CAEjB,MACGytB,EAAa,2BAAID,GAAL,IAAgBprB,IAAM,MAEtCqrB,EAAa,2BAAID,GAAL,IAAgB/tB,IAAK0S,EAAE+G,OAAOvY,QAE7C,EAqlBmDyC,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,iBAO9D,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,kBACA,wBACI1K,UAAU,eACV3G,KAAK,SACLiB,KAAK,MACL4H,GAAG,MACH5I,MAAO6sB,EAAUprB,IACjByY,SAAUyT,EACV5a,SA9lB5B,SAACvB,GACrB,IAAKmc,GAAenc,EAAE+G,OAAOvY,MAAO,CAEhC,IAAM8yB,EAAc,IAAI9zB,KACxB8zB,EAAYC,QAAQ,IACpBD,EAAYE,SAAS,GACrB,IACMC,EADSrxB,GAAOkxB,EAAY1F,eACZ7B,KAAuB,EAAlB/Z,EAAE+G,OAAOvY,MAAa,SAEjD6sB,EAAU/tB,IAAK8C,GAAOqxB,GAAQpxB,OAAO,aAExC,CACDirB,EAAa,2BAAID,GAAL,IAAgBprB,IAAK+P,EAAE+G,OAAOvY,QAC7C,EAklBmDyC,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,oBAMlE,uBAAKtB,UAAW,MAAhB,UAGQ,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACI1K,UAAU,eACV1F,KAAK,kBACL4H,GAAG,kBACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUV,gBACjB1pB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UASI,yBAAQhI,MAAO,GAAf,oBACCiuB,EAAqBntB,KAAI,SAACqyB,EAAqB5lB,GAAtB,OACtB,yBAAqCvN,MAAOmzB,EAAoBvqB,GAAhE,SAAqEuqB,EAAoBp2B,SAA5Eo2B,EAAoBvqB,GADX,YAQtC,sBAAKlC,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,kCACA,0BACI1K,UAAU,eACV1F,KAAK,qBACL4H,GAAG,qBACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUR,mBACjB5pB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UASI,yBAAQhI,MAAO,GAAf,oBACCquB,GAAkBvtB,KAAI,SAACsyB,EAAkB7lB,GAAnB,OACnB,yBAAkCvN,MAAOozB,EAAiBxqB,GAA1D,SAA+DwqB,EAAiBr2B,SAAnEq2B,EAAiBxqB,GADX,OAIG,KAA7B2K,GAAO8Y,mBACR,uBAAM3lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO8Y,qBACpC,QAIhB,sBAAK3lB,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,0BACI1K,UAAU,eACV1F,KAAK,cACL4H,GAAG,cACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUT,YACjB3pB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UASI,yBAAQhI,MAAO,GAAf,oBACCmuB,EAAiBrtB,KAAI,SAACuyB,EAAiB9lB,GAAlB,OAClB,yBAAiCvN,MAAOqzB,EAAgBzqB,GAAxD,SAA6DyqB,EAAgBt2B,SAAhEs2B,EAAgBzqB,GADX,OAIH,KAAtB2K,GAAO6Y,YACR,uBAAM1lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO6Y,cACpC,QAGZ,sBAAK1lB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,YAAX,8CACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,MACL4H,GAAG,MACH5I,MAAO6sB,EAAUD,UAEjBnqB,MAAO,CAAC6W,OAAQ,oBAAoBtR,aAAa,4BAW7E,uBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAWoF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,+BAGJ,uBAAK4I,UAAU,YAAf,UACI,uBAAKA,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,eAAC,KAAD,CACIkiB,eAAgB,CAACn2B,MAAM,OAAOmc,OAAQ,qBACtCia,WAAY,CAACp2B,MAAM,OAAO6K,aAAa,OACvCwrB,QAAS,KACTC,YAAY,kBACZC,UAAW,EACX1yB,KAAK,cACL4H,GAAG,cACH5I,MAAO6sB,EAAU5hB,YACjB8H,SAAU,SAACvB,GAAK8gB,GAAsB9gB,EAAE,cAAe,IAIpC,KAAtB+B,GAAOtI,YACJ,uBAAMvE,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOtI,cACpC,QAIhB,sBAAKvE,UAAU,sBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,eAAC,KAAD,CACIkiB,eAAgB,CAACn2B,MAAM,OAAOmc,OAAQ,qBACtCia,WAAY,CAACp2B,MAAM,OAAO6K,aAAa,OACvCwrB,QAAS,KACTC,YAAY,kBACZzzB,MAAO6sB,EAAUN,eACjBxZ,SAAU,SAACvB,GAAK8gB,GAAsB9gB,EAAE,iBAAkB,SAOtE,sBAAK9K,UAAU,sBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,wBACI1K,UAAU,eACV3G,KAAK,QACLiB,KAAK,QACL4H,GAAG,QACHmK,SAAUue,GACVtxB,MAAO6sB,EAAUG,MACjBvqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,oBAQlE,uBAAKtB,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,wBACA,0BACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACHnG,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDhI,MAAO6sB,EAAUL,UACjBzZ,SAj1B7B,SAAAvB,GACf,IAAMsiB,EAActiB,EAAE+G,OAAOvY,MAEzB+zB,GAAoBD,GACpBhH,EAAa,2BAAKD,GAAN,IAAiBL,UAAWsH,IAC/C,EAq0B2C,UAUI,yBAAQ9zB,MAAO,GAAf,oBACCyuB,GAAU3tB,KAAI,SAACd,EAAOuN,GAAR,OACX,yBAAoBvN,MAAOA,EAAM4I,GAAjC,SACK5I,EAAMgB,MADEuM,EADF,OAME,KAApBgG,GAAOiZ,UACJ,uBAAM9lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOiZ,YACpC,QAIhB,sBAAK9lB,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,UACL4H,GAAG,UACH5I,MAAO6sB,EAAUJ,QACjBhqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAt1B1B,SAAAvB,GACd,IAAMib,EAAUjb,EAAE+G,OAAOvY,MACzB8sB,EAAa,2BAAKD,GAAN,IAAiBJ,QAASjb,EAAE+G,OAAOvY,SAC/C5B,IACCrD,IADD,UACQsD,EADR,wDAC+DouB,GAC3D,CAAEnuB,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHswB,GAAatwB,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACR,EAk0B2C,UAUI,yBAAQmC,MAAM,GAAd,oBACC2uB,GAAO7tB,KAAI,SAACd,EAAOuN,GAAR,OACR,yBAAoBvN,MAAOA,EAAM4I,GAAjC,SACK5I,EAAMgB,MADEuM,EADL,OAMG,KAAlBgG,GAAOkZ,QACJ,uBAAM/lB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOkZ,UACpC,QAIhB,sBAAK/lB,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,sCACA,0BACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAO6sB,EAAUH,SACjBjqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAUue,GAPd,UAUI,yBAAQtxB,MAAM,GAAd,oBACC6uB,GAAU/tB,KAAI,SAACd,EAAOuN,GAAR,OACX,yBAAoBvN,MAAOA,EAAM4I,GAAjC,SACK5I,EAAMgB,MADEuM,EADF,OAMC,KAAnBgG,GAAOmZ,SACJ,uBAAMhmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOmZ,WACpC,WAKpB,uBAAKhmB,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,8BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,UACL4H,GAAG,UACH5I,MAAO6sB,EAAUzhB,QACjB2H,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAIpC,KAAlBuL,GAAOnI,QACH,uBAAM1E,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOnI,UACpC,QAIhB,sBAAK1E,UAAU,uBAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAO6sB,EAAUwF,SACjBtf,SAAUue,GACV7uB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,0BAW1E,uBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAWoF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAajE,MAAO,CAAC3E,MAAM,QAAzC,0CAEJ,uBAAK4I,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UAEQ6mB,GAAYA,EAAS7d,OAAS,GAC1B,sBAAKhJ,UAAU,sBAAf,SACI,yBAAOjE,MAAO,CAAEtF,MAAO,QAAUuJ,UAAU,OAA3C,UACI,wBAAOA,UAAU,OAAjB,SACA,gCACI,oDACA,uCACA,wCACA,0CACA,+CAGJ,wBAAOA,UAAU,OAAjB,SACC6mB,EAASzsB,KAAI,SAAC4P,EAAMnD,GACjB,OACI,sBAAqB7G,UAAU,OAA/B,UACI,8BACIkrB,GAAgBlhB,EAAKuc,kBAEzB,8BACIvc,EAAKxP,UAAY,IAAOwP,EAAKyc,WAAa,IAAMzc,EAAKwc,WAEzD,8BACQxc,EAAKqc,QAEb,8BACQrc,EAAKtF,UAEb,gCACI,yBAAQrL,KAAK,SACL2G,UAAU,2CACVsF,QAAS,kBA10B1D,SAACwO,EAAUjN,GAClC0Y,EAAazL,GACbsT,GAAgB,GAChBP,EAAStS,OAAO1N,EAAO,EAC1B,CAs0B0FymB,CAAmBtjB,EAAMnD,EAA/B,EAFjB,SAII,eAAC,KAAD,CAAiB9D,KAAK,WAL9B,WAQI,yBACI1J,KAAK,SACL2G,UAAU,kCACVsF,QAAS,SAACwF,GAAD,OAt1BpD,SAACjE,GAC1BggB,EAAStS,OAAO1N,EAAO,GACvBigB,EAAY,aAAID,GACnB,CAm1BuF0G,CAAqB1mB,EAA5B,EAHb,SAKI,eAAC,KAAD,CAAiB9D,KAAK,iBA1BzBiH,EAAKnD,MA+BrB,WAMjB,sBAAK7G,UAAU,sBAAf,SAEQmnB,GACI,sBAAKnnB,UAAU,OAAf,SACI,uBAAKA,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,mBAAX,iCACA,0BACIhY,UAAU,eACV1F,KAAK,iBACL4H,GAAG,iBACH5I,MAAOgmB,EAAUiH,eACjBxqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,GANd,UASI,yBAAQ9xB,MAAO,GAAf,oBACCuuB,GAAoBztB,KAAI,SAAC0Z,EAAUjN,GAAX,OACrB,yBAA0BvN,MAAOwa,EAAS5R,GAA1C,SAA+C4R,EAASzd,SAA3Cyd,EAAS5R,GADD,OAIH,KAAzB2K,GAAO0Z,eACR,uBAAMvmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO0Z,iBACpC,QAIZ,sBAAKvmB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,aAAX,0BACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,YACLhB,MAAOgmB,EAAU9kB,UACjB0H,GAAG,YACHnG,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,KAGM,KAApBve,GAAOrS,UACP,uBAAMwF,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOrS,YACpC,QAIZ,sBAAKwF,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAOgmB,EAAUmH,WACjB1qB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,UAOtB,sBAAKprB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACI1K,UAAU,eACV3G,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACH5I,MAAOgmB,EAAUkH,SACjBzqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,KAGK,KAAnBve,GAAO2Z,SACP,uBAAMxmB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO2Z,WACpC,WAKhB,uBAAKxmB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,qBAAX,0BACA,eAAC,KAAD,CACI4U,eAAgB,CAACn2B,MAAM,OAAOmc,OAAQ,qBACtCia,WAAY,CAACp2B,MAAM,OAAO6K,aAAa,OACvCwrB,QAAS,KACTC,YAAY,kBACZzyB,KAAK,QACLhB,MAAOgmB,EAAU+G,MACjBnkB,GAAG,QAEHmK,SAAU,SAACvB,IAvrB5D,SAACA,EAAG+gB,GAEnBtM,EAAa,2BAAID,GAAL,mBAAkBuM,EAAY/gB,EAAEghB,MAAM,EADxC,MAEjB,CAorBuF0B,CAAiB1iB,EAAEghB,MAAM,EAAG,IAAI,QAAS,SAMrE,sBAAK9rB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,eAAX,mBACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,QACL4H,GAAG,QACH5I,MAAOgmB,EAAUgH,MACjBvqB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,UAOtB,sBAAKprB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACI,eAAC,KAAD,CAAOsN,IAAI,iBAAX,qBACA,wBACIhY,UAAU,eACV3G,KAAK,OACLiB,KAAK,UACL4H,GAAG,UACH5I,MAAOgmB,EAAU5a,QACjB3I,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAU+e,aAQ1B,uBAAKprB,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,SACI,eAAC,KAAD,CACI3G,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,GAAQ3M,OACnBsO,QA3/BrC,SAACwF,IATN,WACtB,IAAIkC,EAAI,eAAQH,IAKhB,OAJIG,EAAKxS,UAAY8kB,EAAU9kB,UAAY,GAAK,yBAC5CwS,EAAKwZ,SAAWlH,EAAUkH,SAAW,GAAK,0BAC1CxZ,EAAKuZ,eAAiBjH,EAAUiH,eAAiB,GAAK,iCAClDzZ,GAAU,eAAKE,IAChBrB,OAAO+H,OAAO1G,GAAM2G,OAAM,SAAAlT,GAAC,MAAS,IAALA,CAAJ,GACrC,EAGMgtB,IACC3G,EAAY,GAAD,oBAAKD,GAAL,CAAevH,IAGjC,EAi/B+D,mBAWJ,sBAAKtf,UAAU,QAAf,SACI,eAAC,KAAD,CACI3G,KAAK,SACLyC,QAAQ,YACR1E,MAAM,YACN4I,UAAW2D,GAAQ3M,OACnBsO,QAvhC/B,WACjC8hB,GAAgB,EACnB,EAghC+D,mCAkBhC,sBAAKpnB,UAAU,QACX,eAAC,KAAD,CACI3G,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,GAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QA/iCd,WACtB8hB,GAAgB,EACnB,EA8iCuCrrB,MAAO,CAACC,gBAAgB,UAAUE,WAAW,UAPjD,8CAeZ,uBAAK8D,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcjE,MAAO,CAACC,gBAAgB,UAAU5E,MAAM,OAAO8E,WAAW,SAAUoF,aAAa,UAA9G,SACI,qBAAItB,UAAU,aAAcjE,MAAO,CAAC3E,MAAM,QAA1C,8BAGJ,uBAAK4I,UAAU,YAAf,UACA,uBAAKA,UAAU,MAAf,UAEA,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,WAAX,8BACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,WACL4H,GAAG,WACHmK,SAAUuF,GACVtY,MAAO+W,GAAUzV,SACjBmB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDkS,UAAQ,IAGQ,KAAnB3G,GAAOjS,SACR,uBAAMoF,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOjS,WACpC,QAGR,sBAAKoF,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,qBAAX,mCACA,eAACrN,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,qBACL4H,GAAG,qBACH2Q,IAAKsT,EAAUjO,mBACfnF,IAAM7X,GAAO,IAAI5C,MAAQ6C,OAAO,cAChCkR,SAAUuF,GACVtY,MAAO+W,GAAU6H,mBACjBnc,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAIxB,KAA7BuL,GAAOqL,mBACR,uBAAMlY,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOqL,qBACpC,WAIZ,uBAAKlY,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,CAAOsN,IAAI,eAAX,iCACA,gBAACrN,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,eACL4H,GAAG,eACHmK,SAAUuF,GACVtY,MAAO+W,GAAU4N,aACjBliB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAUA,yBAAQhI,MAAM,GAAd,eACCslB,GAAWxkB,KAAI,SAACd,GAAD,OACZ,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADP,OAMQ,KAAvB2K,GAAOoR,aACJ,uBAAMje,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOoR,eACpC,QAIR,sBAAKje,UAAU,2BAAf,UACc,IAAbsvB,GAEO,gBAAC5kB,GAAA,EAAD,WACA,eAAC,KAAD,4BACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,eACL4H,GAAG,eACHmK,SAAUuF,GACVtY,MAAO+W,GAAU6N,aACjBniB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,eAIxD,KAGN,sBAAKtB,UAAU,2BAAf,SACA,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,2CACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,yBACL4H,GAAG,yBACHmK,SAAUuF,GACVtY,MAAO+W,GAAU8N,uBACjBpiB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAUA,yBAAQhI,MAAM,GAAd,qBACCulB,GAAUzkB,KAAI,SAACd,GAAD,OACX,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADR,OAMmB,KAAjC2K,GAAOsR,uBACJ,uBAAMne,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOsR,yBACpC,QAIR,sBAAKne,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,2CACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,mBACL4H,GAAG,mBACH2Q,IAAKsT,EAAU/tB,IACf2a,IAAK1C,GAAU6H,mBACf7L,SAAUuF,GACVtY,MAAO+W,GAAU+N,iBACjBriB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,YAI1B,KAA3BuL,GAAOuR,iBACJ,uBAAMpe,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOuR,mBACpC,QAGZ,sBAAKpe,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,qBACL4H,GAAG,qBACH5I,MAAO+W,GAAUse,mBACjBtiB,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UAUI,yBAAQhI,MAAM,GAAd,qBACK41B,GAAe90B,KAAI,SAACd,GAAD,OAChB,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADH,OAME,KAA7B2K,GAAO8hB,mBACJ,uBAAM3uB,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO8hB,qBACpC,QAIZ,sBAAK3uB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,sBACL4H,GAAG,sBACH5I,MAAO+W,GAAUiO,oBACjBviB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAUuF,GANd,UASI,yBAAQtY,MAAM,GAAd,qBAEK61B,GAAc/0B,KAAI,SAACd,GAAD,OACf,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADJ,OAMI,KAA9B2K,GAAOyR,oBACJ,uBAAMte,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOyR,sBACpC,QAGVoQ,IAAgBvI,EAAUprB,IAAM,GAC9B,uCAEA,sBAAKiF,UAAY,2BAAjB,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,gBAACC,GAAA,EAAD,CACItR,KAAO,SACPiB,KAAO,oBACP4H,GAAK,oBACL5I,MAAS+W,GAAUkO,kBACnBxiB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClD+K,SAAYuF,GANhB,UASA,yBAAStY,MAAQ,GAAjB,qBACC+1B,GAAgBj1B,KAAI,SAACd,GAAD,OACT,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADV,YAQM,OAA9BmO,GAAUkO,mBACX,qCACA,sBAAKve,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,YACL4H,GAAG,YACH6Q,IAAK1a,EACLgU,SAAUuF,GACVtY,MAAO+W,GAAUmO,UACjBziB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,sBAU9D,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,aACL4H,GAAG,aACH5I,MAAO+W,GAAUY,WACjB5E,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UASI,yBAAQhI,MAAM,GAAd,qBACK+b,GAASjb,KAAI,SAACd,GAAD,OACV,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADT,OAOA,KAArB2K,GAAOoE,WACJ,uBAAMjR,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAOoE,aACpC,QAGO,UAAlBue,GACD,sBAAKxvB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,gBAACC,GAAA,EAAD,CACItR,KAAK,SACLiB,KAAK,gBACL4H,GAAG,gBACH5I,MAAO+W,GAAUoO,cACjBpS,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UANtD,UASI,yBAAQhI,MAAM,GAAd,qBACS81B,GAAGh1B,KAAI,SAACd,GAAD,OACJ,yBAAuBA,MAAOA,EAAM4I,GAApC,SACK5I,EAAMjD,SADEiD,EAAM4I,GADf,OAMK,KAAxB2K,GAAO4R,cACJ,uBAAMze,UAAW2D,GAAQxM,MAAzB,SAAiC0V,GAAO4R,gBACpC,QAGR,GACJ,sBAAKze,UAAU,2BAAf,SAEI,uBAAKA,UAAU,mCAAf,UACI,wBACA3G,KAAK,WACL2G,UAAU,mBACV1F,KAAK,eACL4H,GAAG,eACHmK,SAAUwjB,KAGV,wBACA7vB,UAAU,mBACViT,QAAQ,mBAFR,qCAQPkT,EAAUprB,KAAM,IACjB,sBAAKiF,UAAU,2BAAf,SAEI,uBAAKA,UAAU,mCAAf,UACI,wBACA3G,KAAK,WACL2G,UAAU,mBACV1F,KAAK,eACL4H,GAAG,eACHmK,SAAUwjB,KAEV,wBACA7vB,UAAU,mBACViT,QAAQ,mBAFR,sCA+BO,IAAdsc,IAED,qCACA,uBAAKvvB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,kBACL4H,GAAG,kBACH0I,SAAU2kB,GACVljB,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDhI,MAAO+W,GAAUue,uBAKzB,sBAAK5uB,UAAU,6BACf,sBAAKA,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,uBACL4H,GAAG,uBACH0I,SAAU2kB,GACVljB,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDhI,MAAO+W,GAAUwe,4BAKzB,sBAAK7uB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,2CACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,2BACL4H,GAAG,2BACH2Q,IAAKsT,EAAU/tB,IACf2a,IAAK1C,GAAU6H,mBACf7L,SAAUuF,GACVtY,MAAO+W,GAAUye,yBACjB/yB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,iBAQ1D,sBAAKtB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,wCACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,yBACL4H,GAAG,yBACH0I,SAAU2kB,GACVljB,SAAUuF,GACV7V,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,UAClDhI,MAAO+W,GAAU0e,8BAKzB,sBAAK/uB,UAAU,2BAAf,SACI,gBAAC0K,GAAA,EAAD,WACA,eAAC,KAAD,6CACA,eAACC,GAAA,EAAD,CACItR,KAAK,OACLiB,KAAK,6BACL4H,GAAG,6BACH2Q,IAAKsT,EAAU/tB,IACf2a,IAAK1C,GAAU6H,mBACf7L,SAAUuF,GACVtY,MAAO+W,GAAU2e,2BACjBjzB,MAAO,CAAC6W,OAAQ,oBAAqBtR,aAAa,+BAgBjE6I,EAAS,eAACU,GAAA,EAAD,IAAc,GAExB,wBAE6B,WAA5B8e,GAAcriB,WAEX,uCACI,eAAC,KAAD,CACIjO,KAAK,SACLyC,QAAQ,YACR1E,MAAM,UACN4I,UAAW2D,GAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAAS+lB,GACTtvB,MAAO,CAACC,gBAAgB,UAAUE,WAAW,UAPjD,SASMiO,EAGE,uBAAMpO,MAAO,CAAE4F,cAAe,cAA9B,yBAFA,uBAAM5F,MAAO,CAAE4F,cAAe,cAA9B,sBAMR,eAAC,KAAD,CACI7F,QAAQ,YACRkE,UAAW2D,GAAQ3M,OACnB0K,UAAW,eAAC,KAAD,IACX4D,QAvgDhB,WAChBa,GAAQe,KAAK,CAAExL,SAAU,KAC5B,EAsgDmCK,MAAO,CAACC,gBAAgB,WAL5B,SAOI,uBAAMD,MAAO,CAAE4F,cAAe,aAAcvK,MAAM,QAAlD,yBAGV,eAO7B,EC58Dc,SAAS44B,KACtB,OACE,eAAC,IAAD,UACE,iCACA,eAAC,IAAD,IAGE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAO3oB,KAAK,mBAAZ,SACE,eAAC4oB,GAAD,MAEF,eAAC,IAAD,CAAO5oB,KAAK,oBAAZ,SACE,eAAC6oB,GAAD,MAEF,eAAC,IAAD,CAAO7oB,KAAK,kBAAZ,SACE,eAAC8oB,GAAD,MAEF,eAAC,IAAD,CAAO9oB,KAAK,kBAAZ,SACE,eAAC+oB,GAAD,MAGF,eAAC,IAAD,CAAO/oB,KAAK,IAAZ,SACE,eAAC,GAAD,aAOX,CC/CD,IAYegpB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqB14B,MAAK,YAAkD,IAA/C24B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,E,UCVGO,GAAY,MAEHC,GAAc,CAC1B,CACCpuB,WAAY,UACZ0F,QAAS,QACT/H,OAAQ,WACR0wB,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBR,UAAWA,IAEZ,CACCnuB,WAAY,UACZ0F,QAAS,QACT/H,OAAQ,WACRmD,QAAS,UACTutB,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBR,UAAWA,IAEX,CACAnuB,WAAY,UACZ0F,QAAS,QACT/H,OAAQ,WACR2wB,YAAa,WACbD,SAAU,UACVE,UAAW,WACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjB7tB,QAAS,WACTqtB,UAAWA,IAEZ,CAECnuB,WAAY,UACZ0F,QAAS,OACT/H,OAAQ,WACR0wB,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjB7tB,QAAS,UACTqtB,UAAWA,IAEZ,CAECnuB,WAAY,UACZ0F,QAAS,QACT/H,OAAQ,WACR2wB,YAAa,WACbD,SAAU,UACVG,aAAc,OACdD,UAAW,UACXE,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjB7tB,QAAS,WACTqtB,UAAWA,IAGZ,CAECnuB,WAAY,UACZ0F,QAAS,QACT/H,OAAQ,aACR2wB,YAAa,UACbD,SAAU,UACVE,UAAW,UACXC,aAAc,SACdC,gBAAiB,SACjBC,eAAgB,QAChBC,gBAAiB,OACjB7tB,QAAS,UACTqtB,UAAWA,KCrFAS,GAAeC,0BA0RbC,GAxRc,SAAC38B,GAC7B,MAAwC0C,mBAAS,CAAE+B,MAAO,OAAQuS,MAAO,SAAzE,mBAAO4lB,EAAP,KAAqBC,EAArB,KACA,EAA8Cn6B,mBAAS,CAAE+B,MAAO,QAASuS,MAAO,UAAhF,mBAAO8lB,EAAP,KAAwBC,EAAxB,KACG,EAA4Cr6B,mBAAS,CAAE+B,MAAO,QAASuS,MAAO,UAA9E,mBAAOgmB,EAAP,KAAuBC,EAAvB,KACA,EAA0Cv6B,mBAAS,CAAE+B,MAAO,WAAYuS,MAAO,aAA/E,mBAAOkmB,EAAP,KAAsBC,EAAtB,KACH,EAAkCz6B,mBAAS,CAAE+B,MAAO,MAAOuS,MAAO,QAAlE,mBAAOglB,EAAP,KAAkBoB,EAAlB,KACA,EAAwC16B,mBAAS,WAAjD,mBAAO26B,EAAP,KAAqBC,EAArB,KACA,EAA8C56B,mBAAS,WAAvD,mBAAO66B,EAAP,KAAwBC,EAAxB,KACA,EAAoC96B,mBAAS,WAA7C,mBAAO+6B,EAAP,KAAmBC,EAAnB,KACA,EAAwCh7B,mBAAS,WAAjD,mBAAOi7B,EAAP,KAAqBC,EAArB,KACA,EAAkCl7B,oBAAS,GAA3C,mBAAOm7B,EAAP,KAAkBC,EAAlB,KACA,EAAoCp7B,oBAAS,GAA7C,mBAAOq7B,EAAP,KAAmBC,EAAnB,KACA,EAAoCt7B,mBAAS,CAAE+B,MAAO,QAASuS,MAAO,UAAtE,mBAAOkN,EAAP,KAAmB+Z,EAAnB,KACA,EAAoDv7B,mBAAS,CAAC+B,MAAO,aAAcuS,MAAO,eAA1F,mBAAOknB,EAAP,KAA2BC,GAA3B,KACSC,GAAOC,SAASC,cAAc,QACpC,GAAsC57B,mBAAS,GAA/C,qBAAO67B,GAAP,MAAoBC,GAApB,MACA,GAAwC97B,mBAAS,GAAjD,qBAAO+7B,GAAP,MAAqBC,GAArB,MA4DIC,GAAqB,SAACl5B,GAC7B63B,EAAgB73B,GACb24B,GAAKQ,aAAa,eAAgBn5B,EACnC,EACKo5B,GAAwB,SAACp5B,GAC7B+3B,EAAmB/3B,GACnB24B,GAAKQ,aAAa,oBAAqBn5B,EACxC,EACKq5B,GAAmB,SAACr5B,GACxBi4B,EAAcj4B,GACd24B,GAAKQ,aAAa,gBAAiBn5B,EACpC,EACKs5B,GAAqB,SAACt5B,GAC1Bm4B,EAAgBn4B,GAChB24B,GAAKQ,aAAa,iBAAkBn5B,EACrC,EACKu5B,GAAuB,SAACv5B,GAC5Bs3B,EAAmBt3B,GACnB24B,GAAKQ,aAAa,wBAAyBn5B,EAAKhB,MACjD,EACKw6B,GAAwB,SAACx5B,GAC7B23B,EAAa33B,GACb24B,GAAKQ,aAAa,YAAan5B,EAAKhB,OACpC,IAAIy6B,EAAOb,SAASC,cAAc,QAClCY,EAAKN,aAAa,MAAOn5B,EAAKhB,OAC9By6B,EAAK/zB,UAAY1F,EAAKhB,KACvB,EACK06B,GAAsB,SAAC15B,GACR,eAAfA,EAAKhB,OACoB,YAAvBm4B,EAAan4B,OACf04B,EAAiB13B,GACjB24B,GAAKQ,aAAa,cAAen5B,EAAKhB,OACtCo4B,EAAgB,CAAEp4B,MAAO,OAAQuS,MAAO,SACxConB,GAAKQ,aAAa,qBAAsB,UAM1CzB,EAAiB13B,GACjB24B,GAAKQ,aAAa,cAAen5B,EAAKhB,OAEzC,EACK26B,GAAqB,SAAC35B,GACE,eAAxBy3B,EAAcz4B,OACG,YAAfgB,EAAKhB,MACPmxB,MAAM,yDAORiH,EAAgBp3B,GAChBq4B,EAA4B,eAAfr4B,EAAKhB,MAAyB,WAAa,IACxD25B,GAAKQ,aAAa,qBAAsBn5B,EAAKhB,OAEhD,EAEK46B,GAAsB,SAAC55B,GAC3Bw3B,EAAkBx3B,GAClB24B,GAAKQ,aAAa,uBAAwBn5B,EAAKhB,MAChD,EAQK66B,GAAmB,SAAC75B,GACxB24B,GAAKQ,aAAa,qBAAsBn5B,EAAKhB,OAC7Cw5B,EAAcx4B,EACf,EAEK85B,GAA0B,SAAC95B,GAC/B04B,GAAsB14B,GACtB24B,GAAKQ,aAAa,iBAAkBn5B,EAAKhB,OAC1B,UAAfgB,EAAKhB,OACH26B,GAAmB,CAAE36B,MAAO,UAAWuS,MAAO,WACjD,EA4ED,OA7BA5T,qBAAU,WACX,IAAMg7B,EAAOC,SAASC,cAAc,QACjCF,EAAKQ,aAAa,kBAAmB,WACrCR,EAAKQ,aAAa,qBAAsB,SACxCR,EAAKQ,aAAa,cAAe,YACjCR,EAAKQ,aAAa,eAAgB,WAClCR,EAAKQ,aAAa,oBAAqB,WACvCR,EAAKQ,aAAa,gBAAiB,WACnCR,EAAKQ,aAAa,qBAAsB,WACxCR,EAAKQ,aAAa,iBAAkB,WACpCR,EAAKQ,aAAa,eAAgB,WAClCR,EAAKQ,aAAa,wBAAyB,SAC3CR,EAAKQ,aAAa,uBAAwB,SAC1CR,EAAKQ,aAAa,iBAAkB,QACpCR,EAAKQ,aAAa,YAAa,OACjC,IAAIY,EAAe,WAClBhB,GAAen/B,OAAOogC,YACtBf,GAAgBr/B,OAAOqgC,aACvBrgC,OAAOogC,YAAc,KAAOpgC,OAAOogC,WAAa,KAC9CrB,EAAKQ,aAAa,qBAAsB,QACxCv/B,OAAOogC,YAAc,IACrBrB,EAAKQ,aAAa,qBAAsB,WACxCR,EAAKQ,aAAa,qBAAsB,OAC1C,EAGC,OAFAY,IACAngC,OAAOsgC,iBAAiB,SAAUH,GAC3B,kBAAMngC,OAAOugC,oBAAoB,SAAUJ,EAA3C,CACR,GAAE,IAGD,eAAC/C,GAAaoD,SAAd,CACEp7B,MAAO,CACL25B,QACA0B,cArNgB,CACpB,CAAEr7B,MAAO,UAAWuS,MAAO,WAC3B,CAAEvS,MAAO,OAAQuS,MAAO,QACxB,CAAEvS,MAAO,OAAQuS,MAAO,QACxB,CAAEvS,MAAO,SAAUuS,MAAO,UAC1B,CAAEvS,MAAO,UAAWuS,MAAO,WAC3B,CAAEvS,MAAO,aAAcuS,MAAO,eAgN1B+oB,aA1Ne,CACnB,CAAEt7B,MAAO,WAAYuS,MAAO,YAC5B,CAAEvS,MAAO,aAAcuS,MAAO,eAyN1BgpB,iBA/MmB,CACvB,CAAEv7B,MAAO,QAASuS,MAAO,SACzB,CAAEvS,MAAO,OAAQuS,MAAO,SA8MpB8lB,kBACAmD,gBAzMkB,CACtB,CAAEx7B,MAAO,QAASuS,MAAO,SACzB,CAAEvS,MAAO,SAAUuS,MAAO,WAwMtBkpB,kBAtMoB,CACxB,CAAEz7B,MAAO,aAAcuS,MAAO,cAC9B,CAAEvS,MAAO,QAASuS,MAAO,SACzB,CAAEvS,MAAO,OAAQuS,MAAO,SAoMpBmpB,kBAjLoB,CACxB,CAAE17B,MAAO,MAAOuS,MAAO,OACvB,CAAEvS,MAAO,MAAOuS,MAAO,QAgLnB+T,WA9Ka,CACjB,CAAEtmB,MAAO,UAAWuS,MAAO,WAC3B,CAAEvS,MAAO,SAAUuS,MAAO,UAC1B,CAAEvS,MAAO,QAASuS,MAAO,SACzB,CAAEvS,MAAO,WAAYuS,MAAO,aAC5B,CAAEvS,MAAO,gBAAiBuS,MAAO,kBA0KnCqmB,eACME,kBACNgB,eACAE,gBACME,sBACAE,yBACAO,sBACAxC,eACAoC,wBACAoB,iBA1NmB,CACvB,CAAE37B,MAAO,QAASuS,MAAO,SACzB,CAAEvS,MAAO,SAAUuS,MAAO,WAyNtBqoB,uBACArC,iBACAmC,uBACAjC,gBACA+B,yBACAM,2BACAvD,YACA9zB,OArNS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,YAuMIu1B,aACAqB,oBACAC,sBACApB,eACAE,YACAE,aACAsC,eAhIiB,WACE,WAAvBzD,EAAan4B,MACTu5B,GAAc,GACdA,GAAc,EACnB,EA6HKsB,oBACApb,aACAga,qBACNoC,aAlHqB,SAACl/B,EAAM46B,GAE7B,IAAIuE,EAAU,CAAC,EAGXC,EAAgBvE,GAAY76B,GAEhCg9B,GAAKQ,aAAa,kBAAmB4B,EAAc3yB,YAEnD0yB,EAAQ97B,MAAQ+7B,EAAcjtB,QAC9B+rB,GAAiBiB,GAEjBA,EAAQ97B,MAAQ+7B,EAAch1B,OAC9B2zB,GAAoBoB,GAGpB5B,GAAmB6B,EAAc7xB,SAGjCkwB,GAAsB2B,EAAcrE,aAGpC2C,GAAiB0B,EAActE,UAE/BqE,EAAQ97B,MAAQ+7B,EAAcnE,aAC9B+C,GAAmBmB,GAGnBxB,GAAmByB,EAAcpE,WAEjCmE,EAAQ97B,MAAQ+7B,EAAclE,gBAC9B0C,GAAqBuB,GAErBA,EAAQ97B,MAAQ+7B,EAAcjE,eAC9B8C,GAAoBkB,GAEpBA,EAAQ97B,MAAQ+7B,EAAchE,gBAC9B+C,GAAwBgB,GAGxBA,EAAQ97B,MAAQu3B,EAChBiD,GAAsBsB,EAErB,GAgCE,SA0CGvgC,EAAMygC,UAGZ,EClRDC,IAASC,OACR,eAAC,IAAMC,WAAP,UAEW,eAAC,KAAD,UACI,eAAC,IAAD,CAAeC,SAAS,IAAxB,SACI,eAAC,GAAD,UACI,eAAC1F,GAAD,YAMtBkD,SAASyC,eAAe,SAE1BtF,I","file":"static/js/main.7393073b.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8282/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjY5NzAxMDQzfQ.J6bmZ03o52-WOPAHC0qegI4W03CmOH3Sr0Xkwxedgdo8NBFwEC51IQ1b2ILCcypuBe6C-PAdUmPFeqBRgFUGxA';\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}prep/persons`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"PrEP Count\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\r\n                                    hospital_number: getHospitalNumber(row.personResponseDto.identifier),\r\n                                    clientCode: row.uniqueId,\r\n                                    //phone_number:  row.phone,\r\n                                    gender:row && row.personResponseDto.sex ? row.personResponseDto.sex : \"\",\r\n                                    age: (row.personResponseDto.dateOfBirth === 0 ||\r\n                                        row.personResponseDto.dateOfBirth === undefined ||\r\n                                        row.personResponseDto.dateOfBirth === null ||\r\n                                        row.personResponseDto.dateOfBirth === \"\" )\r\n                                            ? 0\r\n                                            : calculate_age(moment(row.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.prepEnrollmentCount}</Label>),\r\n                                \r\n                                actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import Highcharts from 'highcharts';\r\n\r\n// Radialize the colors\r\nHighcharts.setOptions({\r\n    colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n        return {\r\n            radialGradient: {\r\n                cx: 0.5,\r\n                cy: 0.3,\r\n                r: 0.7\r\n            },\r\n            stops: [\r\n                [0, color],\r\n                [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\r\n            ]\r\n        };\r\n    })\r\n});\r\n\r\nexport const ReceivingArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children currently receiving ART by Age'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Currently Receiving ART By Age',\r\n        data: [\r\n            { name: '25 + ',  sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n           \r\n        ]\r\n    }]\r\n};","export const ReceivingArtBySex = {\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: 0,\r\n        plotShadow: false\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART by Sex',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        y: -160\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            \r\n            dataLabels: {\r\n                enabled: true,\r\n                distance: -50,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    color: 'white'\r\n                }\r\n            },\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            center: ['50%', '75%'],\r\n            size: '110%',\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        type: 'pie',\r\n        name: 'Newly Enrolled on ART ',\r\n        innerSize: '50%',\r\n        data: [\r\n            ['Male', 58.9],\r\n            ['Female', 13.29],\r\n            \r\n        ]\r\n    }]\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY DIAGNOSED HIV+</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">VIRALLY SUPPRESSED</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>\r\n                 \r\n                  <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObjs = props.patientObj ? props.patientObj.personResponseDto : {}\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [biometricStatus, setBiometricStatus] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [biometricModal, setBiometricModal] = useState(false);\r\n  const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  const [hivStatus, setHivStatus] = useState();\r\n\r\n  useEffect(() => {\r\n    PatientCurrentStatus();\r\n    CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of KP\r\n  const CheckBiometric =()=>{\r\n      axios\r\n        .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setBiometricStatus(response.data);\r\n            if(response.data===true){\r\n              axios\r\n                  .get(`${baseUrl}biometrics/devices`,\r\n                      { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                  )\r\n                  .then((response) => {\r\n                      setDevices(response.data);\r\n                      \r\n                  })\r\n                  .catch((error) => {\r\n                      console.log(error)\r\n                  });\r\n            \r\n              }\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n  }\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentStatus() {\r\n        axios\r\n            .get(`${baseUrl}hiv/status/patient-current/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              setHivStatus(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n    const loadChildEvaluation =(row)=> {\r\n      props.setActiveContent('child-evaluation')\r\n    }\r\n    const capturePatientBiometric =(row)=> {\r\n      //props.setActiveContent('biometrics')\r\n      props.setActiveContent({...props.activeContent, route:'biometrics', obj:row})\r\n    }\r\n    \r\n    const CurrentStatus = ()=>{\r\n\r\n          return (  <Label color=\"blue\" size=\"mini\">{hivStatus}</Label>);\r\n  }\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      return address ? address.city : '';\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.surname }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>{patientObj.sex && patientObj.sex!==null ?  patientObj.sex : '' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n    const loadEAC =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'counseling'})\r\n    }\r\n    const loadStatusUpdate =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'status-update'})\r\n    }\r\n    const loadPharmacyModal =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'pharmacy'})\r\n    }\r\n    const loadLaboratoryModal =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'laboratory'})\r\n    }\r\n    const loadCervicalCancer = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'cervical-cancer'})\r\n    }\r\n    const loadPrEPDiscontinuationsInterruptions = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions'})\r\n    }\r\n    const loadPrEPRegistrationForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-registration'})\r\n    }\r\n    const loadPrEPCommencementForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-commencement'})\r\n    }\r\n    const loadPrEPEligibiltyScreeningForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-screening'})\r\n    }\r\n    const loadPrEPVisitForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-visit'})\r\n    }\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        //setActiveItem('history')\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"mini\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>                  \r\n                {patientObj.prepEligibilityCount<=0 || patientObj.prepEnrollmentCount<=0 || patientObj.commenced!==true ? \r\n                (<>\r\n                    {patientObj.prepEligibilityCount<=0 && (<Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibilty Screening Form</Menu.Item>)}\r\n                    {patientObj.prepEligibilityCount >0 && patientObj.prepEnrollmentCount<=0 && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\r\n                    {patientObj.prepEligibilityCount >0 && patientObj.prepEnrollmentCount>0 && patientObj.commenced!==true && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\r\n                </>)\r\n                :\r\n                (<>  \r\n                    <Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>\r\n                    <Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>\r\n                </>)}\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                    \r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: '100%',\r\n  },\r\n  heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: 'bolder',\r\n  },\r\n}));\r\nconst RecentHistory = (props) => {\r\n  const classes = useStyles();\r\n  const [vitaLoad, setViralLoad]=useState([])\r\n  const [refillList, setRefillList] = useState([])\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let history = useHistory();\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n\r\n  useEffect(() => {\r\n    LaboratoryHistory();\r\n    PharmacyList();\r\n    ClinicVisitList();\r\n    RecentActivities();\r\n  }, [props.patientObj.id]);\r\n\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities =()=>{\r\n    axios\r\n       .get(`${baseUrl}hiv/patients/${props.patientObj.id}/activities?full=false`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setRecentActivities(response.data)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n  //Get list of LaboratoryHistory\r\n  const LaboratoryHistory =()=>{\r\n    axios\r\n       .get(`${baseUrl}laboratory/orders/patients/${props.patientObj.id}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n           let LabObject= []\r\n                response.data.forEach(function(value, index, array) {\r\n                    const dataOrders = value.labOrder.tests                    \r\n                    if(dataOrders[index]) {\r\n                        dataOrders.forEach(function(value, index, array) {\r\n                            LabObject.push(value)\r\n                        })                       \r\n                    }                   \r\n                });\r\n              setViralLoad(LabObject)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n   //GET LIST Drug Refill\r\n   async function PharmacyList() {\r\n    setLoading(true)\r\n    axios\r\n        .get(`${baseUrl}hiv/art/pharmacy/patient?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLoading(false)\r\n            setRefillList(response.data);                \r\n        })\r\n        .catch((error) => {  \r\n            setLoading(false)  \r\n        });        \r\n  }\r\n   //GET LIST Drug Refill\r\n   async function ClinicVisitList() {\r\n    setLoading(true)\r\n    axios\r\n        .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLoading(false)\r\n            setClinicVisitList(response.data);                \r\n        })\r\n        .catch((error) => {  \r\n            setLoading(false)  \r\n        });        \r\n  }\r\n  const labStatus =(status)=> {\r\n      if(status===0){\r\n        return \"timeline-badge info\"\r\n      }else if(status===1){\r\n        return \"timeline-badge warning\"\r\n      }else if(status===2){\r\n        return \"timeline-badge success\"\r\n      }else if(status===3){\r\n        return \"timeline-badge danger\"\r\n      }else if(status===4){\r\n        return \"timeline-badge primary\"\r\n      }else if(status===5){\r\n        return \"timeline-badge info\"\r\n      }else {\r\n        return \"timeline-badge secondary\"\r\n      }\r\n  }\r\n  const ActivityName =(name)=> {\r\n      if(name==='HIV Enrollment'){\r\n        return \"HE\"\r\n      }else if(name==='Pharmacy refill'){\r\n        return \"PR\"\r\n      }else if(name==='Clinical evaluation'){\r\n        return \"CE\"\r\n      }else if(name==='Clinic visit follow up'){\r\n        return \"CV\"\r\n      }else if(name==='ART Commencement'){\r\n        return \"AC\"\r\n      }else {\r\n        return \"RA\"\r\n      }\r\n  }\r\n  const regimenName =(regimenObj)=> {\r\n    let regimenArr = []\r\n    regimenObj.forEach(function (value, index, array) {\r\n      //console.log(value)\r\n        regimenArr.push(value['name'])\r\n    })\r\n    return regimenArr.toString();\r\n  }\r\n  const LoadViewPage =(row,action)=>{\r\n        \r\n    if(row.path==='Mental-health'){        \r\n        props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='Art-commence'){\r\n        props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='Clinical-evaluation'){\r\n        props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='eac1'){\r\n        props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id, actionType:action})\r\n    }\r\n    else if(row.path==='eac2'){\r\n        props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id, actionType:action})\r\n    }\r\n    else if(row.path==='eac3'){\r\n        props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id, actionType:action})\r\n    }else if(row.path==='hiv-enrollment'){\r\n        history.push({\r\n            pathname: '/update-patient',\r\n            state: { id: row.id, patientObj:props.patientObj, actionType:action }\r\n        });\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n    }else if(row.path==='pharmacy'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        props.setActiveContent({...props.activeContent, route:'pharmacy-update', id:row.id, activeTab:\"history\", actionType:action, obj:row})\r\n\r\n    }else if(row.path==='Laboratory'){\r\n        props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='clinic-visit'){\r\n      props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, activeTab:\"history\",actionType:action, })\r\n\r\n  }else{\r\n\r\n    }\r\n    \r\n}\r\nconst LoadDeletePage =(row)=>{\r\n    \r\n    if(row.path==='Mental-health'){        \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }else if(row.path==='Art-commence'){\r\n        //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });\r\n\r\n    }else if(row.path==='Clinical-evaluation'){\r\n        //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });\r\n\r\n    }else if(row.path==='eac1'){\r\n        //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/eac/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }\r\n    else if(row.path==='eac2'){\r\n        //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/eac/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }\r\n    else if(row.path==='eac3'){\r\n        //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/eac/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }else if(row.path==='hiv-enrollment'){\r\n        axios\r\n        .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n    }else if(row.path==='pharmacy'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n        axios\r\n        .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        }); \r\n\r\n    }else if(row.path==='clinic-visit'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        }); \r\n    }else{\r\n\r\n    }\r\n    \r\n}\r\nconst redirectLink=()=>{\r\n  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n}\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                    defaultActiveKey=\"0\"\r\n                  >\r\n                    <>\r\n                    {recentActivities.map((data, i)=>\r\n                    <div className=\"accordion-item\" key={i}>\r\n                      <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                      >\r\n                      <span className=\"accordion-header-icon\"></span>\r\n                      <span className=\"accordion-header-text\">Visit Date : <span className=\"\">{data.date}</span> </span>\r\n                      <span className=\"accordion-header-indicator\"></span>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse\r\n                      eventKey={`${i}`}\r\n                      className=\"accordion__body\"\r\n                    >\r\n                      <div className=\"accordion-body-text\">\r\n                      <ul className=\"timeline\">\r\n                        {data.activities && data.activities.map((activity,index) => ( \r\n                         \r\n                          <>\r\n                            <li>\r\n                              <div className=\"timeline-panel\">\r\n                              <div className={index % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(activity.name)}</div>\r\n                              <div className=\"media-body\">\r\n                                <h5 className=\"mb-1\">{activity.name}</h5>\r\n                                <small className=\"d-block\">\r\n                                {activity.date}\r\n                                </small>\r\n                              </div>\r\n                              <Dropdown className=\"dropdown\">\r\n                                <Dropdown.Toggle\r\n                                variant=\" light\"\r\n                                className=\"i-false p-0 btn-info sharp\"\r\n                                >\r\n                                <svg\r\n                                  width=\"18px\"\r\n                                  height=\"18px\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  version=\"1.1\"\r\n                                >\r\n                                  <g\r\n                                  stroke=\"none\"\r\n                                  strokeWidth=\"1\"\r\n                                  fill=\"none\"\r\n                                  fillRule=\"evenodd\"\r\n                                  >\r\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                                  </g>\r\n                                </svg>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"dropdown-menu\">\r\n                                {activity.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'view')}\r\n                                  >\r\n                                  View\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                {activity.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'update')}\r\n                                  >\r\n                                  Update\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                  {activity.deletable && (<Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  to=\"/widget-basic\"\r\n                                  onClick={()=>LoadDeletePage(activity)}\r\n                                  >\r\n                                  Delete\r\n                                  </Dropdown.Item>\r\n                                  )}\r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              </div>\r\n                            </li>\r\n                          </>\r\n                        ))}                          \r\n                      </ul>\r\n                      </div>\r\n                    </Accordion.Collapse>\r\n                  </div>\r\n                )}\r\n                </>\r\n                </Accordion>\r\n                \r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-0 pb-0\">\r\n            <h4 className=\"card-title\">Visit Chart</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <PerfectScrollbar\r\n              style={{ height: \"370px\" }}\r\n              id=\"DZ_W_TimeLine\"\r\n              className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n            >\r\n              <ul className=\"timeline\">\r\n                {vitaLoad.length >0 ? (\r\n                  <>\r\n                    {vitaLoad.map((test,index) => ( \r\n                    <>\r\n                      <li key={index}>\r\n                      <div className={labStatus(test.labTestOrderStatus)}></div>\r\n                      <span\r\n                        className=\"timeline-panel text-muted\"\r\n                        onClick={()=>redirectLink()}\r\n                        //to=\"\"\r\n                      >\r\n                        <h6 className=\"mb-0\">\r\n                          Test Order Date{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.orderDate}</strong>\r\n                        </h6>\r\n                        {test.labTestGroupName!=='others' &&(<h6 className=\"mb-0\">\r\n                          Test Order{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestGroupName + \" - \" + test.labTestName}</strong>.\r\n                        </h6>\r\n                          )}\r\n                          {test.labTestGroupName==='others' &&(<h6 className=\"mb-0\">\r\n                          Test Order{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestName + \" - \" + test.viralLoadIndicationName}</strong>.\r\n                        </h6>\r\n                          )}\r\n                        \r\n                        <h6 className=\"mb-0\">\r\n                          Status{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestOrderStatusName}</strong>.\r\n                        </h6>\r\n                        \r\n                      </span>\r\n                      </li>\r\n                    </>\r\n\r\n                    ))}\r\n                  \r\n                  </>\r\n                  ) \r\n                  :\r\n                  <Alert\r\n                    variant=\"info\"\r\n                    className=\"alert-dismissible solid fade show\"\r\n                  >\r\n                    <p>No visit yet</p>\r\n                  </Alert>\r\n                }\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=false`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)\r\n                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='Art-commence'){\r\n            props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='eac1'){\r\n            props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id, actionType:action})\r\n        }\r\n        else if(row.path==='eac2'){\r\n            props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id, actionType:action})\r\n        }\r\n        else if(row.path==='eac3'){\r\n            props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id, actionType:action})\r\n        }else if(row.path==='hiv-enrollment'){\r\n            history.push({\r\n                pathname: '/update-patient',\r\n                state: { id: row.id, patientObj:props.patientObj, actionType:action }\r\n            });\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            props.setActiveContent({...props.activeContent, route:'pharmacy-update', id:row.id, activeTab:\"history\", actionType:action, obj:row})\r\n\r\n        }else if(row.path==='Laboratory'){\r\n            props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, activeTab:\"history\", actionType:action, })\r\n      \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            {/* <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu> */}\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n\r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            <Input\r\n                type=\"select\"\r\n                name=\"adr\"\r\n                id=\"adr\"\r\n                value={props.adrObj.adr}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                >\r\n                  <option value=\"\"> Select</option>\r\n                    {prepSideEffect.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                        </option>\r\n                    ))}\r\n            </Input>\r\n            {errors.adr !==\"\" ? (\r\n                <span className={classes.error}>{errors.adr}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                onChange={handAdrleInputChange}\r\n                min={props.artStartDate}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n        <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n            <Icon name='plus' /> Add\r\n        </LabelSui>\r\n        </div>\r\n\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n      </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n            <FormGroup>\r\n            <Label >Onset Date </Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"ondateInfection\"\r\n                id=\"ondateInfection\"\r\n                value={props.infection.ondateInfection}\r\n                onChange={handleInfectionInputChange}\r\n                min={props.artStartDate}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.ondateInfection !==\"\" ? (\r\n                <span className={classes.error}>{errors.ondateInfection}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Illness</Label>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"illnessInfection\"\r\n                id=\"illnessInfection\"\r\n                value={props.infection.illnessInfection}\r\n                onChange={handleInfectionInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.illnessInfection !==\"\" ? (\r\n                <span className={classes.error}>{errors.illnessInfection}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-2\">\r\n        <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n            <Icon name='plus' /> Add\r\n        </LabelSui>\r\n        </div>\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AddAllergy = (props) => {\r\n\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [allergy, setAllergy]= useState({allergy: \"\"})\r\n    \r\n        const handleInputChange = e => {            \r\n            setAllergy ({...allergy,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, allergy,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  //props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"md\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Add Allergy\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Allergies</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"allergy\"\r\n                                            id=\"allergy\"\r\n                                            //value={allergy.functionalStatusId}\r\n                                            //onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\">Select </option>\r\n                                           \r\n                                        </Input>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAllergy;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AddCondition = (props) => {\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [allergy, setAllergy]= useState({allergy: \"\"})\r\n    \r\n        const handleInputChange = e => {            \r\n            setAllergy ({...allergy,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, allergy,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"md\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Add Conditions\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Conditions</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"allergy\"\r\n                                            id=\"allergy\"\r\n                                            //value={allergy.functionalStatusId}\r\n                                            //onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\">Select </option>\r\n                                           \r\n                                        </Input>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCondition;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {  Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from 'date-fns';\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\nlet newDate = new Date()\r\n\r\nconst PostPatient = (props) => {\r\n    const patientObj = props.patientObj;\r\n    const [selectedOption, setSelectedOption] = useState();\r\n    const classes = useStyles()\r\n    const [services, setServices]= useState([]);\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        ServicesPost()\r\n      }, []);\r\n        ///GET LIST OF Post Services\r\n        async function ServicesPost() {\r\n            axios\r\n                .get(`${baseUrl}patient/vital-sign/post-service`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    const filterService = response.data.filter((x) => x.moduleServiceCode!=='consultation-code' && x.moduleServiceCode!=='hiv-code')\r\n                    setServices(\r\n                        Object.entries(filterService).map(([key, value]) => ({\r\n                          label: value.moduleServiceName,\r\n                          value: value.moduleServiceCode,\r\n                        })))\r\n                 \r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n\r\n    const [postServices, setPostServices]= useState({                                                  \r\n                                                        encounterDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n                                                        facilityId: 1,\r\n                                                        personId:\"\",\r\n                                                        serviceCode:\"\",\r\n                                                        visitId: \"\"\r\n                                                    })\r\n    \r\n\r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            let serviceArr = []\r\n            selectedOption.forEach(function (value, index, array) {\r\n                serviceArr.push(value['value'])\r\n            })\r\n            postServices.personId=patientObj.id\r\n            postServices.visitId=patientObj.visitId\r\n            postServices.serviceCode=serviceArr\r\n            axios.post(`${baseUrl}patient/post`, postServices,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  //props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Post Patient\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                              \r\n                                   <Select\r\n                                        onChange={setSelectedOption}\r\n                                        value={selectedOption}\r\n                                        options={services}\r\n                                        isMulti=\"true\"\r\n                                        noOptionsMessage=\"true\"\r\n                                    />\r\n\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                    >\r\n                                    {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostPatient;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, Icon, List, Button, Card,Feed } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          Input,\r\n        } from \"reactstrap\";\r\nimport ADR from './ADR/Index'\r\nimport OpportunisticInfection from './OpportunisticInfection/Index'\r\nimport TBScreening from './TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\n//import AddVitals from './Vitals/AddVitals'\r\nimport AddAllergy from './Allergies/AddAllergy'\r\nimport AddCondition from './Conditions/AddCondition'\r\nimport PostPatient from './PostPatient/Index'\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Accordion, Alert } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  // const [addVitalModal, setAddVitalModal] = useState(false);\r\n  // const AddVitalToggle = () => setAddVitalModal(!addVitalModal)\r\n  const [addConditionModal, setAddConditionModal] = useState(false);\r\n  const AddConditionToggle = () => setAddConditionModal(!addConditionModal)\r\n  const [addAllergyModal, setAddAllergyModal] = useState(false);\r\n  const AddAllergyToggle = () => setAddAllergyModal(!addAllergyModal)\r\n  const [postPatientModal, setPostPatientModal] = useState(false);\r\n  const PostPatientToggle = () => setPostPatientModal(!postPatientModal)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns();\r\n    GetPatientObj();\r\n    ClinicVisitList();\r\n    PatientDetaild();\r\n    //hiv/patient/3\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitList() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data);                \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n    //Check for the last Vital Signs\r\n    const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n    }\r\n    //Check for the Patient Object\r\n    const PatientDetaild = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patient/${props.patientObj.id}`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            patientObj=response.data\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n      }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const addConditionsModal = () => {\r\n    //setpatientObj({...patientObj, ...row});\r\n    setAddConditionModal(!addConditionModal)\r\n  }\r\n  const addAllergiesModal = () => {\r\n    //setpatientObj({...patientObj, ...row});\r\n    setAddAllergyModal(!addAllergyModal)\r\n  }\r\n  const PostPatientService = (row) => {\r\n    //setpatientObj({...patientObj, ...row});\r\n    setPostPatientModal(!postPatientModal)\r\n  }\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.post(`${baseUrl}hiv/art/clinic-visit/`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        PatientDetaild();\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit save successful\");\r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-6\">\r\n        <h2>Clinic Follow-up Visit</h2>\r\n        </div>\r\n        \r\n      </div>\r\n      <Grid columns='equal'>\r\n       <Grid.Column width={5}>\r\n          \r\n            <Segment>\r\n              <Label as='a' color='blue' style={{width:'110%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>Vital Signs</h4>\r\n              </Label>\r\n              <br />\r\n\r\n               <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <br/>\r\n                    <ul className=\"timeline\">\r\n                    { clinicVisitList.length > 0 ?(\r\n                      \r\n                    <Accordion\r\n                        className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                        defaultActiveKey=\"0\"\r\n                        \r\n                      >\r\n                        <>\r\n                        {clinicVisitList.map((visit, i)=>\r\n                        <div className=\"accordion-item\" key={i} >\r\n                          <Accordion.Toggle\r\n                              as={Card.Text}\r\n                              eventKey={`${i}`}\r\n                              className={`accordion-header ${\r\n                                activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                              } accordion-header-info`}\r\n                              onClick={() =>\r\n                                setActiveAccordionHeaderShadow(\r\n                                  activeAccordionHeaderShadow === 1 ? -1 : i\r\n                                )\r\n                              }\r\n                              style={{width:'100%'}}\r\n                          >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text float-start\">Visit Date : <span className=\"\">{visit.visitDate}</span> </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                        \r\n                              <List celled style={{width:'100%'}}>\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.pulse!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px',borderTop:'1px solid #fff', marginTop:'-5px' }}>Pulse <span style={{color:'rgb(153, 46, 98)'}} className=\"float-end\"><b>{visit.vitalSignDto.pulse} bpm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.respiratoryRate!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Respiratory Rate <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.respiratoryRate} bpm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.temperature!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Temperature <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.temperature} <sup>0</sup>C</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.systolic!==null && visit.vitalSignDto.diastolic!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Blood Pressure <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.systolic}/{visit.vitalSignDto.diastolic}</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.height!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Height <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.height} cm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.bodyWeight!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Weight <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.bodyWeight} kg</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.bodyWeight!==null && visit.vitalSignDto.height!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>BMI <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{Math.round(visit.vitalSignDto.bodyWeight/(visit.vitalSignDto.height/100))} kg</b></span></List.Item>)}\r\n                              </List>\r\n                            \r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    )}\r\n                    </>\r\n                    </Accordion>             \r\n\r\n                ):\r\n                (\r\n                  <>\r\n                  <br/>\r\n                  <Alert\r\n                      variant=\"info\"\r\n                      className=\"alert-dismissible solid fade show\"\r\n                    >\r\n                      <p>No Vital Signs</p>\r\n                    </Alert>\r\n                  </>\r\n                )}\r\n                    </ul>\r\n               \r\n                </PerfectScrollbar>\r\n            </Segment>\r\n           \r\n        </Grid.Column>\r\n        <Grid.Column width={11}>\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    value={vital.encounterDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChangeVitalSignDto}\r\n                    min={props.patientObj && props.patientObj.artCommence ? props.patientObj.artCommence.visitDate : null}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                 {errors.encounterDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.encounterDate}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                {showCurrentVitalSigns && (\r\n                  <div className=\"form-check custom-checkbox ml-1 \">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"currentVitalSigns\"\r\n                      id=\"currentVitalSigns\"\r\n                      onChange={handleCheckBox} \r\n                                          \r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"basic_checkbox_1\"\r\n                    >\r\n                      use current Vital Signs\r\n                    </label>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n            <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}></h4>\r\n            </Label>\r\n            <br /><br />\r\n\r\n            <div className=\"row\">\r\n\r\n             \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >HIV Test Result </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whoStagingId\"\r\n                    id=\"whoStagingId\"\r\n                    value={objValues.whoStagingId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whoStagingId\"\r\n                    id=\"whoStagingId\"\r\n                    value={objValues.whoStagingId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\r\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Level of Adherence *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whoStagingId\"\r\n                    id=\"whoStagingId\"\r\n                    value={objValues.whoStagingId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>       \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date PrEP Givern</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"whoStagingId\"\r\n                    id=\"whoStagingId\"\r\n                    value={objValues.whoStagingId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div> \r\n            \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Status</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"functionalStatusId\"\r\n                    id=\"functionalStatusId\"\r\n                    value={objValues.functionalStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n                    <option value=\"None\">None </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            \r\n           \r\n            <br />\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={saving}\r\n              startIcon={<SaveIcon />}\r\n              style={{backgroundColor:\"#014d88\"}}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\r\n      <AddAllergy toggle={AddAllergyToggle} showModal={addAllergyModal} />\r\n      <AddCondition toggle={AddConditionToggle} showModal={addConditionModal} />\r\n      <PostPatient toggle={PostPatientToggle} showModal={postPatientModal} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);\r\n     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n        {props.enableUpdate && (\r\n        <>\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            \r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"adr\"\r\n                  id=\"adr\"\r\n                  value={props.adrObj.adr}\r\n                  onChange={handAdrleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                      {prepSideEffect.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n                {errors.adr !==\"\" ? (\r\n                    <span className={classes.error}>{errors.adr}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                min={props.artStartDate}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n        </div>\r\n        </>)}\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n       {props.enableUpdate && (\r\n        <>\r\n          <div className=\"form-group mb-3 col-md-5\">\r\n              <FormGroup>\r\n              <Label >Onset Date </Label>\r\n              <Input\r\n                  type=\"date\"\r\n                  name=\"ondateInfection\"\r\n                  id=\"ondateInfection\"\r\n                  value={props.infection.ondateInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.ondateInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.ondateInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-5\">        \r\n          <FormGroup>\r\n              <Label > Illness</Label>\r\n              <Input\r\n                  type=\"text\"\r\n                  name=\"illnessInfection\"\r\n                  id=\"illnessInfection\"\r\n                  value={props.infection.illnessInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.illnessInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.illnessInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n          </div>\r\n        </>\r\n        )}\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input, Label, FormGroup} from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { token, url as baseUrl } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst TBScreeningForm = (props) => {\r\n  const [tbStatus, setTbStatus] = useState([]); \r\n  const [TBForms, setTBForms] = useState(false) \r\n\r\n  useEffect(() => {\r\n    TBStatus();\r\n    if(props.tbObj.antiTBDrug ==='NO'){\r\n      setTBForms(true)\r\n    }else{\r\n      setTBForms(false)\r\n    }\r\n    }, [props.tbObj]);\r\n\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const TBStatus =()=>{\r\n    axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    const handleInputChange = e => {\r\n      props.setTbObj ({...props.tbObj,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"antiTBDrug\" ){\r\n          if(e.target.value===\"NO\"){\r\n              setTBForms(true)\r\n          }else{\r\n              setTBForms(false)\r\n          }\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n          \r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n              <Label >Patient on Anti TB Drugs?</Label>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"antiTBDrug\"\r\n                  id=\"antiTBDrug\"\r\n                  value={props.tbObj.antiTBDrug}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  disabled={!props.enableUpdate}\r\n                  required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n\r\n              </Input>\r\n              \r\n            </FormGroup>\r\n          </div>\r\n          {TBForms===true ? (\r\n            <>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label >Patient Currently on IPT?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"currentOnIpt\"\r\n                    id=\"currentOnIpt\"\r\n                    value={props.tbObj.currentOnIpt}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                        <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >coughing?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"coughing\"\r\n                    id=\"coughing\"\r\n                    value={props.tbObj.coughing}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Night Sweat?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"nightSweat\"\r\n                    id=\"nightSweat\"\r\n                    value={props.tbObj.nightSweat}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Fever</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"fever\"\r\n                    id=\"fever\"\r\n                    value={props.tbObj.fever}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Contact with TB Case?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"contactWithTBCase\"\r\n                    id=\"contactWithTBCase\"\r\n                    value={props.tbObj.contactWithTBCase}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Lethergy</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"lethergy\"\r\n                    id=\"lethergy\"\r\n                    value={props.tbObj.lethergy}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              {/* <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {tbStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div> */}\r\n              {(props.tbObj.currentOnIpt===\"NO\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on INH prophylaxis'  && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"YES\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"YES\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"YES\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"YES\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"YES\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n          </>\r\n          )\r\n          :\r\n          \"\"\r\n          }\r\n        </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\n\r\n\r\nexport default TBScreeningForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label,} from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          InputGroupButtonDropdown,\r\n          Input,\r\n          DropdownToggle,\r\n          DropdownMenu,\r\n          DropdownItem\r\n        } from \"reactstrap\";\r\nimport ADR from './../ADR/Index'\r\nimport OpportunisticInfection from './../OpportunisticInfection/Index'\r\nimport TBScreening from './../TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col,   } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Button as ButtonSMUI, Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom';\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst ClinicVisit = (props) => {\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [visitId, setVisitId]= useState()\r\n  const [enableUpdateButton, setEnableUpdateButton]=useState(false)\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [enableUpdate, setEnableUpdate]= useState(false) //Enable update for all input field if the user have permission\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  // the visit date history \r\n  //end of the visit date history\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns()\r\n    GetPatientObj();\r\n    ClinicVisitListHistory();\r\n    if(props.activeContent.id!==null){\r\n     \r\n      GetVisitById(props.activeContent.id)\r\n      setVisitId(props.activeContent.id)\r\n    }\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitListHistory() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data.filter((x)=> x.isCommencement!==true));              \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n  //Check for the last Vital Signs\r\n  const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const  heightFunction =(e)=>{\r\n    if(e==='cm'){\r\n        setHeightValue('cm')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height * 100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n    }else if(e==='m'){\r\n        setHeightValue('m')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height/100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n        \r\n    }\r\n\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.put(`${baseUrl}hiv/art/clinic-visit/${visitId}`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit updated successful\");\r\n        //GetVisitById(visitId)\r\n        //props.setActiveContent({...props.activeContent, route:'consultation', id:\"\", activeTab:\"history\", actionType:\"view\", obj:{}})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n  //Get visit by ID\r\n  async function GetVisitById(visitID) {\r\n    axios\r\n      .get(`${baseUrl}hiv/art/clinic-visit/${visitID}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n          const e = response.data\r\n          setVitalSignDto({ ...e.vitalSignDto })\r\n          objValues.clinicalNote = e.clinicalNote\r\n          objValues.functionalStatusId= e.functionalStatusId\r\n          objValues.whoStagingId= e.whoStagingId \r\n          objValues.nextAppointment= e.nextAppointment\r\n          objValues.adherenceLevel = e.adherenceLevel\r\n          setTbObj({...e.tbScreen})\r\n          setAdrList([...e.adverseDrugReactions])\r\n          setInfectionList([...e.opportunisticInfections])\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const getVisitDetail=(e)=>{\r\n      setEnableUpdateButton(true)\r\n      setVisitId(e.id)\r\n      GetVisitById(e.id)      \r\n  }\r\n  const EnableUpdateAction =()=>{\r\n\r\n      setEnableUpdate(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-3 col-xxl-3 col-lg-3\" >\r\n                <div className=\"card\" style={{ height: \"500px\" }}>\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> Clinic Visits</h4>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                    {clinicVisitList.map((visit,index)=>(\t\r\n                    <div className=\"media pb-3 border-bottom mb-0 align-items-center\" key={index}>\t\t\t\t\t\t\t\t\r\n                      <div className=\"media-body\">\r\n                            <ButtonSMUI\r\n                                color='black'\r\n                                content='Visit Date'\r\n                                icon='calendar alternate'\r\n                                onClick={()=>getVisitDetail(visit)}\r\n                                label={{ basic: true, color: 'grey', pointing: 'left', content: `${visit.visitDate}` }}\r\n                            />\r\n                      </div>\r\n                    </div>\r\n\t\t\t\t\t\t))}\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-9 col-xxl-9 col-lg-9\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> </h4>\r\n                    {enableUpdateButton && (\r\n                    <ButtonSMUI color='facebook' onClick={()=>EnableUpdateAction()} >\r\n                      <Icon name='edit' /> Edit Visit \r\n                    </ButtonSMUI>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Grid columns='equal'>\r\n                    <Grid.Column >\r\n                    <Segment>\r\n                    <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}> Visit Date - {vital.encounterDate}</h4>\r\n                        </Label>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Date of Visit *</FormLabelName>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"encounterDate\"\r\n                                id=\"encounterDate\"\r\n                                value={vital.encounterDate}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                            {errors.encounterDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.encounterDate}</span>\r\n                            ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n                        </div>\r\n                        <Label as='a' color='grey' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n\r\n                        <div className=\" mb-3\">\r\n                        <FormLabelName >Clinical Notes</FormLabelName>\r\n                        <textarea\r\n                            name=\"clinicalNote\"\r\n                            className=\"form-control\"\r\n                            value={objValues.clinicalNote}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            disabled={!enableUpdate}\r\n                        ></textarea>\r\n                        {errors.clinicalNote !==\"\" ? (\r\n                                <span className={classes.error}>{errors.clinicalNote}</span>\r\n                            ) : \"\" }\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >WHO Staging *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"whoStagingId\"\r\n                                id=\"whoStagingId\"\r\n                                value={objValues.whoStagingId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {clinicalStage.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.whoStagingId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.whoStagingId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Functional Status *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"functionalStatusId\"\r\n                                id=\"functionalStatusId\"\r\n                                value={objValues.functionalStatusId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {functionalStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.functionalStatusId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Level of Adherence *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"adherenceLevel\"\r\n                                id=\"adherenceLevel\"\r\n                                value={objValues.adherenceLevel}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n\r\n                                {adherenceLevel.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.adherenceLevel !==\"\" ? (\r\n                                <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <br />\r\n                        <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='pink' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>ADR</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList}  enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <TBScreening tbObj={tbObj} setTbObj={setTbObj} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <Input\r\n                                type=\"date\"\r\n                                name=\"nextAppointment\"\r\n                                id=\"nextAppointment\"\r\n                                className=\"col-md-6\"\r\n                                value={objValues.nextAppointment}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                        {errors.nextAppointment !==\"\" ? (\r\n                                <span className={classes.error}>{errors.nextAppointment}</span>\r\n                            ) : \"\" }\r\n                        <br />\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={saving}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        hidden={!enableUpdate}\r\n                        >\r\n                        {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                        ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                        )}\r\n                        </MatButton>\r\n                    </Segment>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"@reach/menu-button/styles.css\";\r\nimport ConsultationPage from './History/ConsultationPage'\r\n\r\n\r\nconst ClinicVisitHistory = (props) => {    \r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n\r\n  return (\r\n    <div>\r\n         <div className=\"row\">\r\n            \r\n                <ConsultationPage patientObj={patientObj} activeContent={props.activeContent} />  \r\n\r\n        </div>   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClinicVisitHistory;\r\n\r\n\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ViewUpdate/ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent.id]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" HISTORY\">                   \r\n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input,InputGroup,\r\n    InputGroupText,} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n      success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n      }, \r\n}))\r\n\r\nconst PrEPCommencementForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    console.log(props)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInitialAdherenceCounseling: \"\",\r\n        datePrepStart: \"\",\r\n        height: \"\",\r\n        personId: patientObj.personId,\r\n        prepClientId: props.prepId,\r\n        regimenId: \"\",\r\n        urinalysisResult: \"\",\r\n        prepEligibilityUuid:\"\",\r\n        weight:\"\",\r\n        drugAllergies:\"\",\r\n        reffered:\"\",\r\n        datereferred:\"\",\r\n        extra: {},\r\n        nextAppointment: \"\",\r\n        pregnant: true,\r\n        prepEnrollmentUuid: \"\",\r\n\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [pregnant, setpregnant] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [patientDto, setPatientDto] = useState();\r\n\r\n    useEffect(() => {         \r\n        PREGANACY_STATUS();\r\n        GetPatientDTOObj();\r\n    }, []);\r\n    const PREGANACY_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setpregnant(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n            //Vital signs clinical decision support \r\n    const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n        bodyWeight: \"\",\r\n        height: \"\",\r\n    })\r\n    const handleInputChange = e => { \r\n          \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }    \r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateInitialAdherenceCounseling = objValues.dateInitialAdherenceCounseling ? \"\" : \"This field is required\"\r\n        temp.datePrepStart = objValues.datePrepStart ? \"\" : \"This field is required\"\r\n        temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\r\n        temp.height = objValues.height ? \"\" : \"This field is required\"\r\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n        temp.reffered = objValues.reffered ? \"\" : \"This field is required\"\r\n        temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to check the input value for clinical decision \r\n    const handleInputValueCheckHeight =(e)=>{\r\n        if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n        const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n        }\r\n    }\r\n    const handleInputValueCheckBodyWeight =(e)=>{\r\n        if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n        const message =\"Body weight must not be greater than 150 and less than 3\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n        }\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n           setSaving(true);\r\n           objValues.prepEnrollmentUuid=patientDto.uuid \r\n          axios.post(`${baseUrl}prep/commencement`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                 \r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                      toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n            }          \r\n    }\r\n\r\n  return (      \r\n        <div >      \r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2> PrEP Commencement </h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Initial Adherence Counseling </Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateInitialAdherenceCounseling\"\r\n                                id=\"dateInitialAdherenceCounseling\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateInitialAdherenceCounseling}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                            />\r\n                            {errors.dateInitialAdherenceCounseling !==\"\" ? (\r\n                                <span className={classes.error}>{errors.dateInitialAdherenceCounseling}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date PrEP started *</Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"datePrepStart\"\r\n                                id=\"datePrepStart\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                            />\r\n                             {errors.datePrepStart !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datePrepStart}</span>\r\n                            ) : \"\" }   \r\n                            </FormGroup>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\" mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Body Weight</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"weight\"\r\n                                    id=\"weight\"\r\n                                    onChange={handleInputChange}\r\n                                    min=\"3\"\r\n                                    max=\"150\"\r\n                                    value={objValues.weight}\r\n                                    onKeyUp={handleInputValueCheckBodyWeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    kg\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                    <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                            ) : \"\"}\r\n                            {errors.weight !==\"\" ? (\r\n                                <span className={classes.error}>{errors.weight}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>                                   \r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Height</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    cm\r\n                            </InputGroupText>\r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"height\"\r\n                                    id=\"height\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.height}\r\n                                    min=\"48.26\"\r\n                                    max=\"216.408\"\r\n                                    onKeyUp={handleInputValueCheckHeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                    <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    \r\n                                    style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.height !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                            ) : \"\"}\r\n                            {errors.height !==\"\" ? (\r\n                                <span className={classes.error}>{errors.height}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                            {objValues.weight!==\"\" && objValues.height!==''&&(\r\n                                <FormGroup>\r\n                                <Label > {\" \"}</Label>\r\n                                <InputGroup> \r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    BMI : {Math.round(objValues.weight/((objValues.height * objValues.height)/100))}\r\n                                </InputGroupText>                   \r\n                            \r\n                                </InputGroup>                \r\n                                </FormGroup>\r\n                            )}\r\n                        </div>\r\n                        {props.patientObj.personResponseDto.sex==='Female'  || props.patientObj.personResponseDto.sex==='female' || props.patientObj.personResponseDto.sex==='FEMALE' && (       \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Pregnancy Status</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"pregnant\"\r\n                            id=\"pregnant\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.pregnant}\r\n                            \r\n                        >\r\n                        <option value=\"1\"> </option>\r\n                        {pregnant.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        \r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        {objValues.pregnant==='PREGANACY_STATUS_BREASTFEEDING' && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Breast Feeding</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"breastFeeding\"\r\n                            id=\"breastFeeding\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.breastFeeding}\r\n                            \r\n                        >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">History of drug Allergies</Label>\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            name=\"drugAllergies\"\r\n                            id=\"drugAllergies\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.drugAllergies}\r\n                            \r\n                        />\r\n                      \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Urinalysis Result</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"urinalysisResult\"\r\n                            id=\"urinalysisResult\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.urinalysisResult}\r\n                            \r\n                        />\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">referred</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"reffered\"\r\n                            id=\"reffered\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.reffered}\r\n                            \r\n                        >\r\n                        <option value=\"\"> </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        {errors.reffered !==\"\" ? (\r\n                                <span className={classes.error}>{errors.reffered}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Date referred</Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"datereferred\"\r\n                            id=\"datereferred\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.datereferred}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                        />\r\n                        {errors.datereferred !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datereferred}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">PrEP Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"regimenId\"\r\n                            id=\"regimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.regimenId}\r\n                            \r\n                        >\r\n                        <option value=\"1\"> All Regimen</option>\r\n                        <option value=\"34\"> First Line</option>\r\n                        <option value=\"34\"> Second Line</option>\r\n                        <option value=\"34\"> Third Line</option>\r\n            \r\n                        </Input>\r\n                        {errors.regimenId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.regimenId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPEligibiltyScreeningForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInterruption: \"\",\r\n        why: \"\",\r\n        interruptionType: \"\",\r\n        dateRestartPlacedBackMedication: \"\",\r\n        personId: patientObj.id,\r\n        prepClientId: props.prepId\r\n      });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n\r\n          setSaving(true);\r\n          axios.put(`${baseUrl}prep/${props.prepId}/discontinuation-interruption`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                      toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div>                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2> PrEP Discontinuations & Interruptions</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">PrEP Interruptions </Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"interruptionType\"\r\n                            id=\"interruptionType\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.interruptionType}\r\n                            required\r\n                        >\r\n                         <option value=\"\">Select</option>\r\n                        <option value=\"Stopped\">Stopped</option>\r\n                        <option value=\"Default\">Default</option>\r\n                        <option value=\"Restart\">Restart</option>\r\n                        </Input>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of Interruption </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Facility referred to </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client died </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Cause of death</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Source of death information  </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    {/* <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"why\"\r\n                            id=\"why\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.why}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div> */}\r\n                \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date of restart if placed back on medication</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateRestartPlacedBackMedication\"\r\n                            id=\"dateRestartPlacedBackMedication\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateRestartPlacedBackMedication}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                            \r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                   \r\n                </div>\r\n\r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card>                    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from 'moment';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    //let patientAge=\"\"\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    let temp = { ...errors }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n    \r\n    useEffect(() => { \r\n        \r\n        //console.log(props.extra.riskAssessment)\r\n        CounselingType();\r\n    }, [props.patientObj]);\r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{        \r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        props.handleItemClick(page)\r\n    }\r\n    const [objValues, setObjValues]= useState(\r\n            {\r\n                counselingType: \"\",\r\n                drugUseHistory: {},\r\n                extra: {},\r\n                firstTimeVisit: true,\r\n                hivRisk: {},\r\n                numChildrenLessThanFive: \"\",\r\n                numWives: \"\",\r\n                personId: \"\",\r\n                personalHivRiskAssessment: {},\r\n                sexPartner: \"TARGET_GROUP_GEN_POP\",\r\n                sexPartnerRisk: {},\r\n                stiScreening: {},\r\n                targetGroup: \"TARGET_GROUP_GEN_POP\",\r\n                uniqueId: \"\",\r\n                visitDate:\"\"\r\n            }\r\n    )\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            unprotectedVaginalSexCasual:\"\",\r\n            unprotectedVaginalSexRegular:\"\",\r\n            uprotectedAnalSexWithCasual:\"\",\r\n            uprotectedAnalSexWithRegular:\"\", \r\n            stiHistory:\"\",  \r\n            sharedNeedles:\"\",   \r\n            moreThan1SexPartner:\"\",\r\n            analSexWithPartner :\"\",\r\n            unprotectedAnalSexWithPartner:\"\",\r\n            haveYouPaidForSex:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            experienceCondomBreakage:\"\",\r\n            takenPartInSexualOrgy:\"\",\r\n                          \r\n        }\r\n    )\r\n\r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value}); \r\n                          \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            haveSexWithHIVPositive:\"\",\r\n            haveSexWithPartnerInjectDrug:\"\",\r\n            haveSexWithPartnerWhoHasSexWithMen :\"\",\r\n            haveSexWithPartnerTransgender :\"\",\r\n            sexWithPartnersWithoutCondoms:\"\",             \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\r\n                    \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n            analDischarge:\"\",\r\n            analItching:\"\",\r\n            analpain:\"\",\r\n            swollenIguinal:\"\", \r\n            genitalScore:\"\",\r\n                \r\n        }\r\n    )\r\n    const handleInputChangeStiScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});   \r\n                \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    const [drugHistory, setDrugHistory]= useState(\r\n        {\r\n            useAnyOfTheseDrugs:\"\",\r\n            inject:\"\",\r\n            sniff:\"\", \r\n            smoke:\"\", \r\n            Snort:\"\", \r\n            useDrugSexualPerformance:\"\",\r\n            hivTestedBefore:\"\",\r\n            hivNegative:\"\",\r\n            hivPositive:\"\",\r\n            recommendHivRetest:\"\",\r\n            clinicalSetting:\"\", \r\n            reportHivRisk:\"\",\r\n            hivExposure:\"\",\r\n        }\r\n    )\r\n    const handleInputChangeDrugHistory = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setDrugHistory ({...drugHistory,  [e.target.name]: e.target.value});         \r\n    }\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //PREP FORM VALIDATION\r\n        //    temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \r\n\r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            objValues.htsClientId= clientId\r\n            objValues.drugUseHistory= drugHistory\r\n            objValues.personalHivRiskAssessment= riskAssessment\r\n            objValues.sexPartnerRisk= riskAssessmentPartner\r\n            objValues.stiScreening= stiScreening\r\n            objValues.personId= patientID\r\n            objValues.uniqueId= patientID\r\n            axios.post(`${baseUrl}prep/eligibility`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.patientObj.prepEligibilityCount=1\r\n                //props.setPatientObj(response.data)\r\n                toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                      toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n            \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <h2>PrEP Eligibilty Screening Form</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Visit Date *</Label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    value={objValues.visitDate}\r\n                                    onChange={handleInputChange}\r\n                                    min={props.patientObj.personResponseDto.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.visitDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.visitDate}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Sex partners *</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"sexPartners\"\r\n                                    id=\"sexPartners\"\r\n                                    value={objValues.sexPartners}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                    <option value=\"Both\">Both</option>\r\n                                </select>\r\n                                {errors.sexPartners !==\"\" ? (\r\n                                <span className={classes.error}>{errors.sexPartners}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        {props.patientObj.personResponseDto.maritalStatus.display==='Married'   && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label> Number of own children {\"<\"}5 years</Label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"numChildrenLessThanFive\"\r\n                                    id=\"numChildrenLessThanFive\"\r\n                                    value={objValues.numChildrenLessThanFive}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.numChildrenLessThanFive !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numChildrenLessThanFive}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        {props.patientObj.personResponseDto.sex==='Male' || props.patientObj.personResponseDto.sex==='male'  && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Number of wives </Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"numWives\"\r\n                                    id=\"numWives\"\r\n                                    value={objValues.numWives}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                {errors.numWives !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numWives}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Type of counseling *</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"counselingType\"\r\n                                    id=\"counselingType\"\r\n                                    value={objValues.counselingType}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                     <option value={\"\"}>Select</option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                                {errors.counselingType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.counselingType}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexCasual\"\r\n                                        id=\"unprotectedVaginalSexCasual\"\r\n                                        value={riskAssessment.unprotectedVaginalSexCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with regular partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexRegular\"\r\n                                        id=\"unprotectedVaginalSexRegular\"\r\n                                        value={riskAssessment.unprotectedVaginalSexRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with casual partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithCasual\"\r\n                                        id=\"uprotectedAnalSexWithCasual\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with regualar partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithRegular\"\r\n                                        id=\"uprotectedAnalSexWithRegular\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>History of STI</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiHistory\"\r\n                                        id=\"stiHistory\"\r\n                                        value={riskAssessment.stiHistory}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiHistory !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Shared needles/injecting materials</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sharedNeedles\"\r\n                                        id=\"sharedNeedles\"\r\n                                        value={riskAssessment.sharedNeedles}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sharedNeedles !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sharedNeedles}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThan1SexPartner\"\r\n                                        id=\"moreThan1SexPartner\"\r\n                                        value={riskAssessment.moreThan1SexPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThan1SexPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThan1SexPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal sex with Male/Female partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analSexWithPartner\"\r\n                                        id=\"analSexWithPartner\"\r\n                                        value={riskAssessment.analSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with male/female partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedAnalSexWithPartner\"\r\n                                        id=\"unprotectedAnalSexWithPartner\"\r\n                                        value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedAnalSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedAnalSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you paid for sex in the last 6 months?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveYouPaidForSex\"\r\n                                        id=\"haveYouPaidForSex\"\r\n                                        value={riskAssessment.haveYouPaidForSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveYouPaidForSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveYouPaidForSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been paid for sex in the last 6 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you experience condom breakage *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experienceCondomBreakage\"\r\n                                        id=\"experienceCondomBreakage\"\r\n                                        value={riskAssessment.experienceCondomBreakage}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experienceCondomBreakage !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experienceCondomBreakage}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you taken part in sexual orgy *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"takenPartInSexualOrgy\"\r\n                                        id=\"takenPartInSexualOrgy\"\r\n                                        value={riskAssessment.takenPartInSexualOrgy}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.takenPartInSexualOrgy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.takenPartInSexualOrgy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            \r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithHIVPositive\"\r\n                                        id=\"haveSexWithHIVPositive\"\r\n                                        value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithHIVPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithHIVPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            {/* {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who inject drug?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerInjectDrug\"\r\n                                        id=\"haveSexWithPartnerInjectDrug\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerInjectDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerInjectDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with men ?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerWhoHasSexWithMen !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerWhoHasSexWithMen}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is a transgender person</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerTransgender\"\r\n                                        id=\"haveSexWithPartnerTransgender\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerTransgender !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerTransgender}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with multiple partners without condoms</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexWithPartnersWithoutCondoms\"\r\n                                        id=\"sexWithPartnersWithoutCondoms\"\r\n                                        value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexWithPartnersWithoutCondoms !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexWithPartnersWithoutCondoms}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                         \r\n                            {/* </>)} */}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Drug Use History</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you use any of these drugs/substances*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useAnyOfTheseDrugs\"\r\n                                        id=\"useAnyOfTheseDrugs\"\r\n                                        value={drugHistory.useAnyOfTheseDrugs}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useAnyOfTheseDrugs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useAnyOfTheseDrugs}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <h3>Route of Administration</h3>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Inject </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"inject\"\r\n                                        id=\"inject\"\r\n                                        value={drugHistory.inject}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.inject !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.inject}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Sniff </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sniff\"\r\n                                        id=\"sniff\"\r\n                                        value={drugHistory.sniff}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sniff !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sniff}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Snort</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"Snort\"\r\n                                        id=\"Snort\"\r\n                                        value={drugHistory.fever}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.Snort !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.Snort}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Smoke</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"smoke\"\r\n                                        id=\"smoke\"\r\n                                        value={drugHistory.smoke}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.smoke !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.smoke}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you used drugs to enhance sexual performance ? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useDrugSexualPerformance\"\r\n                                        id=\"useDrugSexualPerformance\"\r\n                                        value={drugHistory.useDrugSexualPerformance}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useDrugSexualPerformance !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useDrugSexualPerformance}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had HIV testing before & When was your last test? {\"<\"}1mth 1-3mths 4-6mths {\">\"}6mths </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestedBefore\"\r\n                                        id=\"hivTestedBefore\"\r\n                                        value={drugHistory.hivTestedBefore}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivTestedBefore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivTestedBefore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                            <h3>HIV test result at visit</h3>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Negative</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivNegative\"\r\n                                        id=\"hivNegative\"\r\n                                        value={drugHistory.hivNegative}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivNegative !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivNegative}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Positive</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivPositive\"\r\n                                        id=\"hivPositive\"\r\n                                        value={drugHistory.hivPositive}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Recommended for HIV Retest ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"recommendHivRetest\"\r\n                                        id=\"recommendHivRetest\"\r\n                                        value={drugHistory.recommendHivRetest}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.recommendHivRetest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.recommendHivRetest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Tested in certain Clinical settings, such as STI clinics?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clinicalSetting\"\r\n                                        id=\"clinicalSetting\"\r\n                                        value={drugHistory.clinicalSetting}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clinicalSetting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clinicalSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"reportHivRisk\"\r\n                                        id=\"reportHivRisk\"\r\n                                        value={drugHistory.reportHivRisk}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.reportHivRisk !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.reportHivRisk}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report a specific HIV exposure within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivExposure\"\r\n                                        id=\"hivExposure\"\r\n                                        value={drugHistory.hivExposure}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivExposure !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivExposure}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Genital score +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"genitalScore\"\r\n                                        id=\"genitalScore\"\r\n                                        value={stiScreening.genitalScore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.genitalScore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"swollenIguinal\"\r\n                                        id=\"swollenIguinal\"\r\n                                        value={stiScreening.swollenIguinal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.swollenIguinal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.swollenIguinal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal pain on stooling?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analpain\"\r\n                                        id=\"analpain\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analpain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analpain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal itching?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analItching\"\r\n                                        id=\"analItching\"\r\n                                        value={stiScreening.analItching}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analItching !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analItching}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analDischarge\"\r\n                                        id=\"analDischarge\"\r\n                                        value={stiScreening.analDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                           \r\n                            <Button content='Save' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPVisit = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n        <div>                  \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2>PrEP Visit</h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"uniqueId\"\r\n                                id=\"uniqueId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.uniqueId}\r\n                                required\r\n                            />\r\n                            \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Noted Side Effects</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"entryPointId\"\r\n                                id=\"entryPointId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.entryPointId}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n                \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                            </Input>\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">HTS Result</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <h3>PrEP Drugs</h3>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        </div>\r\n                    \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Level of Adherence</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Why Poor/Fair Adherence?</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPVisit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPRegistrationForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateReferred: \"\",\r\n        extra: {},\r\n        personId: 0,\r\n        prepEligibilityUuid: \"\",\r\n        riskType: \"\",\r\n        supporterName: \"\",\r\n        supporterPhone: \"\",\r\n        supporterRelationshipType: \"\",\r\n        uniqueId: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [relatives, setRelatives] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n\r\n    useEffect(() => {         \r\n        GetPatientDTOObj();\r\n        RELATIONSHIP();\r\n      }, []);\r\n      const RELATIONSHIP =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setRelatives(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //const patientDTO= response.data.enrollment\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    console.log(patientDto)\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    } \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"This field is required\"\r\n        temp.dateReferred = objValues.dateReferred ? \"\" : \"This field is required\"\r\n        temp.riskType = objValues.riskType ? \"\" : \"This field is required\"\r\n        temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\r\n        temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\r\n        temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\r\n        temp.uniqueId = objValues.uniqueId ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate) {   \r\n          objValues.personId=props.patientObj.personId\r\n          objValues.prepEligibilityUuid=patientDto.uuid \r\n          setSaving(true);\r\n          axios.post(`${baseUrl}prep/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.prepEnrollmentCount=1\r\n                  toast.success(\"Prep Enrollment save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n        }\r\n    }\r\n\r\n  return (      \r\n      <div >                  \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n            <div className=\"row\">\r\n                            <h2>PrEP Enrollment </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueId\"\r\n                                    id=\"uniqueId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUniqueArtNo\"\r\n                                    id=\"ancUniqueArtNo\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUniqueArtNo}\r\n                                    required\r\n                                />\r\n                                {errors.ancUniqueArtNo !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUniqueArtNo}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"riskType\"\r\n                                    id=\"riskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.riskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> Select</option>\r\n                    \r\n                                {relatives.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.riskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.riskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                {props.patientObj.hivPositive===true && (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={\"Positive\"}\r\n                                    disabled\r\n                                />\r\n                               \r\n                                </FormGroup>\r\n                                </div>\r\n                                )}\r\n                                {props.patientObj.dateHivPositive!==null && (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={props.patientObj.dateHivPositive}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        disabled\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferred\"\r\n                                        id=\"dateReferred\"\r\n                                        value={objValues.dateReferred}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    />\r\n                                    {errors.dateReferred !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferred}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterName\"\r\n                                        id=\"supporterName\"\r\n                                        value={objValues.supporterName}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.supporterName !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterName}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Relationship</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"select\"\r\n                                        name=\"supporterRelationshipType\"\r\n                                        id=\"supporterRelationshipType\"\r\n                                        value={objValues.supporterRelationshipType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    >\r\n                                        <option value=\"\"> Select</option>\r\n                    \r\n                                        {relatives.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                    {errors.supporterRelationshipType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterRelationshipType}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter Phone Number</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.supporterPhone !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterPhone}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                onClick={props.toggle}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {/* {activeContent==='child-consultation' &&( <ChildConsultation patientObj={patientObj} setActiveContent={setActiveContent}/>)} */}\r\n          {activeContent.route==='prep-commencement' &&( <PrEPCommencementForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-interruptions' &&( <PrEPDiscontinuationsInterruptions patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-screening' &&( <PrEPEligibiltyScreeningForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-visit' &&( <PrEPVisit />)}\r\n          {activeContent.route==='prep-registration' &&( <PrEPRegistrationForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)} \r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    //const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n                                    dateEnrolled: \"\",\r\n                                    dateOfLastHivNegativeTest: \"\",\r\n                                    dateReferredForPrep: \"\",\r\n                                    extra: {},\r\n                                    hivTestingPoint: \"\",\r\n                                    prepRiskType: \"\",\r\n                                    personDto:{},\r\n                                    personId: 0,\r\n                                    prepSupporter: \"\",\r\n                                    uniqueClientId: \"\",\r\n                                    ancUnique:\"\"\r\n                                });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Registeration save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...errors, [e.target.name]: \"\"})         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                   \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n\r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    \r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Prep /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}