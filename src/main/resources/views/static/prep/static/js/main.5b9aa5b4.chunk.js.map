{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtByAge.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtBySex.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Index.js","main/webapp/jsx/components/Visualisation/Index.js","main/webapp/jsx/components/Patient/PatientListIit.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/Consultation/ADR/Index.js","main/webapp/jsx/components/Consultation/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/Allergies/AddAllergy.js","main/webapp/jsx/components/Consultation/Conditions/AddCondition.js","main/webapp/jsx/components/Consultation/PostPatient/Index.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ViewUpdate/ADR/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/TBScreening/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/History/ConsultationPage.js","main/webapp/jsx/components/Consultation/ViewUpdate/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","patientList","setPatientList","loading","setLoading","axios","baseUrl","headers","then","response","data","catch","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","icons","title","columns","field","filtering","isLoading","map","row","name","personResponseDto","firstName","surname","hospital_number","clientCode","uniqueClientId","gender","sex","age","dateOfBirth","undefined","moment","format","count","Label","size","prepCount","actions","to","pathname","state","patientObj","prepId","ButtonGroup","variant","style","backgroundColor","Button","fontWeight","patientId","personId","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","Highcharts","setOptions","colors","getOptions","radialGradient","cx","cy","r","stops","brighten","ReceivingArtByAge","chart","plotBackgroundColor","plotBorderWidth","plotShadow","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","connectorColor","showInLegend","series","sliced","y","ReceivingArtBySex","align","verticalAlign","distance","startAngle","endAngle","center","innerSize","useStyles","SummaryView","activeItem","React","anchorEl","Boolean","padding","md","lg","sm","xs","className","CardBody","highcharts","subtitle","legend","layout","xAxis","categories","labels","x","yAxis","allowDecimals","responsive","rules","condition","maxWidth","chartOptions","credits","options2","Widget","class","divStyle","borderRadius","Home","key","setKey","startIcon","textTransform","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","secondary","icon","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","classes","patientObjs","biometricStatus","setBiometricStatus","setDevices","setHivStatus","PatientCurrentStatus","CheckBiometric","console","log","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","root2","phoneNumber","contactPoint","getPhoneNumber","address","city","getAddress","Typography","Detail","as","onClick","setActiveContent","activeContent","route","tag","ExpansionPanelDetails","Divider","ExpansionPanelActions","navItemText","SubMenu","currentStatus","setGenderType","Observation","observation","mental","filter","evaluation","length","Menu","inverted","Item","RecentHistory","vitaLoad","setViralLoad","setRefillList","setClinicVisitList","recentActivities","setRecentActivities","history","useHistory","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","LaboratoryHistory","PharmacyList","ClinicVisitList","RecentActivities","LabObject","forEach","index","array","dataOrders","labOrder","tests","push","LoadViewPage","action","path","actionType","activeTab","Accordion","defaultActiveKey","i","Toggle","Text","date","Collapse","activities","activity","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","viewable","deletable","delete","toast","errorMessage","apierror","message","test","status","labTestOrderStatus","orderDate","labTestGroupName","labTestName","viralLoadIndicationName","labTestOrderStatusName","Alert","ADR","AddAllergy","saving","setSaving","allergy","show","showModal","toggle","Header","FormGroup","Input","required","Spinner","e","preventDefault","post","patientsVitalsSigns","AddCondition","commenced","newDate","PostPatient","selectedOption","setSelectedOption","services","setServices","filterService","moduleServiceCode","Object","entries","label","moduleServiceName","ServicesPost","encounterDate","facilityId","serviceCode","visitId","postServices","onChange","isMulti","noOptionsMessage","serviceArr","ClinicVisit","dropdownOpen","setDropdownOpen","toggleDropDown","errors","setErrors","clinicVisitList","temp","getPatientObj","setGetPatientObj","setClinicalStage","setFunctionalStatus","adherenceLevel","setAdherenceLevel","setTbStatus","setTBForms","addConditionModal","setAddConditionModal","addAllergyModal","setAddAllergyModal","postPatientModal","setPostPatientModal","currentVitalSigns","setcurrentVitalSigns","showCurrentVitalSigns","setShowCurrentVitalSigns","illnessInfection","ondateInfection","infectionList","adr","adrOnsetDate","adrList","bodyWeight","diastolic","systolic","pulse","temperature","respiratoryRate","vitalClinicalSupport","setVitalClinicalSupport","adheres","adrScreened","adverseDrugReactions","artStatusId","cd4","cd4Percentage","clinicalNote","clinicalStageId","functionalStatusId","hivEnrollmentId","nextAppointment","lmpDate","oiScreened","opportunisticInfections","tbScreen","stiIds","stiTreated","uuid","visitDate","whoStagingId","objValues","setObjValues","serviceTypeId","vital","setVitalSignDto","currentOnIpt","coughing","antiTBDrug","nightSweat","fever","contactWithTBCase","lethergy","tbStatusId","tbObj","FunctionalStatus","WhoStaging","AdherenceLevel","TBStatus","VitalSigns","GetPatientObj","PatientDetaild","lastVitalSigns","patObJ","handleInputChange","target","handleInputChangeVitalSignDto","Grid","Column","Segment","ribbon","visit","List","celled","vitalSignDto","paddingBottom","paddingTop","borderTop","Math","round","border","min","artCommence","max","checked","htmlFor","InputGroup","onKeyUp","InputGroupText","addonType","isOpen","toFixed","disabled","labTestGroupId","values","every","enrollment","RelativeList","relative","removeRelativeLocation","IconButton","prepSideEffect","setPrepSideEffect","PrepSideEffect","handAdrleInputChange","setAdrObj","adrObj","splice","setAdrList","enableUpdate","artStartDate","Icon","Table","striped","InfectionList","removeInfection","handleInfectionInputChange","setInfection","infection","setInfectionList","TBScreeningForm","tbStatus","TBForms","setTbObj","setVisitId","enableUpdateButton","setEnableUpdateButton","setEnableUpdate","clinicalStage","functionalStatus","isCommencement","ClinicVisitListHistory","GetVisitById","visitID","content","basic","pointing","put","hidden","ClinicVisitHistory","ConsultationPage","ClinicVisitPage","ClinicHistory","flexGrow","PrEPCommencementForm","dateInitialAdherenceCounseling","datePrepStart","prepClientId","prepRegimen","urinalysisResult","weight","pregnancyStatus","breastFeeding","drugAllergies","reffered","dateReferred","carePoints","for","dateOfRegistration","validate","position","POSITION","TOP_RIGHT","PrEPEligibiltyScreeningForm","dateInterruption","why","interruptionType","dateRestartPlacedBackMedication","eligibilityScreeningClientName","eligibilityScreeningDateVisit","eligibilityScreeningDob","eligibilityScreeningOccupation","PrEPVisit","uniqueId","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","targetGroupId","ovc_enrolled","ovcNumber","hivStatus","setTransferIn","enrolled","PrEPRegistrationForm","time","regDate","value1","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","item","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","finger","newStoredBiometrics","reject","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","severity","AlertTitle","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","horizontal","paddingLeft","Content","capturedObj","art","setArt","CardContent","Biometric","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","lastName","middleName","relatives","setRelatives","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","useLocation","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","ancUnique","setCarePoints","setSourceReferral","setEnrollSetting","setKP","setPregnancyStatus","hospitalNumStatus","setHospitalNumStatus","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","KP","PregnancyStatus","GetCountry","alert","useCallback","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","newConatctsInfo","contactInfo","line","fullName","patientForm","landmark","checkPhoneNumberBasic","inputName","slice","autoClose","hideProgressBar","margingRight","Form","defaultChecked","currentDate","setDate","setMonth","dobNew","abs","maritalStatusOption","occupationOption","educationOption","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","getCountryId","setStateByCountryId","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","code","centered","backdrop","Title","Footer","setOvcEnrolled","getSex","identifiers","altphone","maritalStatus","employmentStatus","education","getStateId","patientAge","getSexId","dateOfRegistration1","patientDTO","femaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","kP","transferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","getCharacters","person","hivEnrollment","handleCheckBox","floor","random","App","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.5b9aa5b4.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8383/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjY0ODYxOTU4fQ.XbEO4PrecMNb-QH67pzw285KSXSWO2GBEE3aZ0O_nSEPjqGPpTrArFUxIyt0UgKd2C1twqqn0AlEqXQTNurpJA';\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}prep/persons`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"PrEP Count\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            isLoading={loading}\r\n            data={ patientList.map((row) => ({\r\n                //Id: manager.id,\r\n                name:row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\r\n                hospital_number: getHospitalNumber(row.personResponseDto.identifier),\r\n                clientCode: row.uniqueClientId,\r\n                //phone_number:  row.phone,\r\n                gender:row && row.personResponseDto.sex ? row.personResponseDto.sex : \"\",\r\n                age: (row.personResponseDto.dateOfBirth === 0 ||\r\n                    row.personResponseDto.dateOfBirth === undefined ||\r\n                    row.personResponseDto.dateOfBirth === null ||\r\n                    row.personResponseDto.dateOfBirth === \"\" )\r\n                        ? 0\r\n                        : calculate_age(moment(row.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                \r\n                count: (<Label color=\"blue\" size=\"mini\">{row.prepCount}</Label>),\r\n                \r\n                actions:\r\n        \r\n                <div>\r\n                    {row.prepCount >0 && (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: \"/patient-history\",\r\n                                state: {patientObj: row.personResponseDto,  prepId:row.uniqueClientId}\r\n                            }}\r\n                            \r\n                        >\r\n                            <ButtonGroup variant=\"contained\" \r\n                                aria-label=\"split button\"\r\n                                style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                size=\"large\"\r\n                            >\r\n                            <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            aria-label=\"select merge strategy\"\r\n                            aria-haspopup=\"menu\"\r\n                            style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                            >\r\n                                <MdDashboard />\r\n                            </Button>\r\n                            <Button \r\n                            style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                            >\r\n                                <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                            </Button>\r\n                            \r\n                            </ButtonGroup>\r\n                        </Link> \r\n                    </>\r\n                    )} \r\n                    {row.prepCount <=0 && (\r\n                    <>\r\n                        <Link\r\n                              to={{\r\n                                  pathname: \"/enroll-patient\",\r\n                                  state: { patientId : row.personId, patientObj: row.personResponseDto }\r\n                              }}\r\n                          >\r\n                            <ButtonGroup variant=\"contained\" \r\n                                aria-label=\"split button\"\r\n                                style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                size=\"large\"\r\n                            >\r\n                            <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            aria-label=\"select merge strategy\"\r\n                            aria-haspopup=\"menu\"\r\n                            style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                            >\r\n                                <TiArrowForward />\r\n                            </Button>\r\n                            <Button \r\n                            style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                            >\r\n                                <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>PrEp Enrollemnt</span>\r\n                            </Button>\r\n                            \r\n                            </ButtonGroup>\r\n                        </Link> \r\n                    </>\r\n                    )} \r\n                                    \r\n                </div>\r\n                \r\n                }))}\r\n        \r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import Highcharts from 'highcharts';\r\n\r\n// Radialize the colors\r\nHighcharts.setOptions({\r\n    colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n        return {\r\n            radialGradient: {\r\n                cx: 0.5,\r\n                cy: 0.3,\r\n                r: 0.7\r\n            },\r\n            stops: [\r\n                [0, color],\r\n                [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\r\n            ]\r\n        };\r\n    })\r\n});\r\n\r\nexport const ReceivingArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children currently receiving ART by Age'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Currently Receiving ART By Age',\r\n        data: [\r\n            { name: '25 + ',  sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n           \r\n        ]\r\n    }]\r\n};","export const ReceivingArtBySex = {\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: 0,\r\n        plotShadow: false\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART by Sex',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        y: -160\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            \r\n            dataLabels: {\r\n                enabled: true,\r\n                distance: -50,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    color: 'white'\r\n                }\r\n            },\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            center: ['50%', '75%'],\r\n            size: '110%',\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        type: 'pie',\r\n        name: 'Newly Enrolled on ART ',\r\n        innerSize: '50%',\r\n        data: [\r\n            ['Male', 58.9],\r\n            ['Female', 13.29],\r\n            \r\n        ]\r\n    }]\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY DIAGNOSED HIV+</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">VIRALLY SUPPRESSED</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}hiv/patients/iit`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={ patientList.map((row) => ({\r\n                  //Id: manager.id,\r\n                    name:row.currentStatus!== \"Not Enrolled\" ?\r\n                        (\r\n                           <>\r\n                            <Link\r\n                            to ={{\r\n                                pathname: \"/patient-history\",\r\n                                state: { patientObj: row  }\r\n                            }}\r\n\r\n                            title={\"Click to view patient dashboard\"}\r\n                            > {row.firstName + \" \" + row.surname}\r\n                            </Link>\r\n                            </>\r\n                        ):\r\n                        (\r\n                            <>\r\n                             <Link\r\n                                to={{\r\n                                    pathname: \"/enroll-patient\",\r\n                                    state: { patientId : row.id, patientObj: row }\r\n                                }}\r\n \r\n                             title={\"Enroll Patient\"}\r\n                             > {row.firstName + \" \" + row.surname}\r\n                             </Link>\r\n                             </>\r\n                         ),\r\n                    hospital_number: getHospitalNumber(row.identifier),\r\n                    gender:row && row.sex ? row.sex : \"\",\r\n                    age: (row.dateOfBirth === 0 ||\r\n                        row.dateOfBirth === undefined ||\r\n                        row.dateOfBirth === null ||\r\n                        row.dateOfBirth === \"\" )\r\n                          ? 0\r\n                          : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                    \r\n                    status: (<Label color=\"blue\" size=\"mini\">{row.currentStatus}</Label>),\r\n                 \r\n                    actions:\r\n            \r\n                    <div>\r\n\r\n                                {row.currentStatus!== \"Not Enrolled\" ?\r\n                                    (\r\n                                        <>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: { patientObj: row  }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    (\r\n                                        <>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <TiArrowForward />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Enroll Patient</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                        </>\r\n                                    )\r\n\r\n                                }\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport LostToFollowUp from './Patient/PatientListIit'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>\r\n                 \r\n                  <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  //const permissions= props.permissions ? props.permissions : [];\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  //const [patientBiometricStatus, setPatientBiometricStatus]= useState(props.patientObj.biometricStatus);\r\n  const [biometricStatus, setBiometricStatus] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [biometricModal, setBiometricModal] = useState(false);\r\n  const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  const [hivStatus, setHivStatus] = useState();\r\n  const [artModal, setArtModal] = useState(false);\r\n  const Arttoggle = () => setArtModal(!artModal);\r\n  useEffect(() => {\r\n    PatientCurrentStatus();\r\n    CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of KP\r\n  const CheckBiometric =()=>{\r\n      axios\r\n        .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setBiometricStatus(response.data);\r\n            if(response.data===true){\r\n              axios\r\n                  .get(`${baseUrl}biometrics/devices`,\r\n                      { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                  )\r\n                  .then((response) => {\r\n                      setDevices(response.data);\r\n                      \r\n                  })\r\n                  .catch((error) => {\r\n                      console.log(error)\r\n                  });\r\n            \r\n              }\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n  }\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentStatus() {\r\n        axios\r\n            .get(`${baseUrl}hiv/status/patient-current/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              setHivStatus(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n    const loadChildEvaluation =(row)=> {\r\n      props.setActiveContent('child-evaluation')\r\n    }\r\n    const capturePatientBiometric =(row)=> {\r\n      //props.setActiveContent('biometrics')\r\n      props.setActiveContent({...props.activeContent, route:'biometrics', obj:row})\r\n    }\r\n    const loadArtCommencement =(row)=> {\r\n      props.setActiveContent('art-commencement')\r\n    }\r\n    \r\n    const loadArt =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setArtModal(!artModal)\r\n    }\r\n    \r\n    const CurrentStatus = ()=>{\r\n\r\n          return (  <Label color=\"blue\" size=\"mini\">{hivStatus}</Label>);\r\n  }\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      return address ? address.city : '';\r\n    };\r\n    const handleBiometricCapture = (id) => { \r\n      let patientObjID= id\r\n      setBiometricModal(!biometricModal);\r\n    }\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel defaultExpanded>\r\n\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                <Row>\r\n                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.surname }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>{patientObj.sex && patientObj.sex!==null ?  patientObj.sex : '' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                      {biometricStatus===true ? (\r\n                          <>\r\n                              <div >\r\n                                  <Typography variant=\"caption\">\r\n                                      <Label color={props.patientObj.biometricStatus===true? \"green\" : \"red\"} size={\"mini\"}>\r\n                                          Biometric Status\r\n                                          <Label.Detail>{props.patientObj.biometricStatus===true? \"Captured\" : \"Not Capture\"}</Label.Detail>\r\n                                      </Label>\r\n                                      {props.patientObj.biometricStatus!==true ? (\r\n                                    \r\n                                          <>\r\n                                             \r\n                                                  <>\r\n                                                  <Label as='a' color='teal' onClick={() => capturePatientBiometric(patientObj)} tag>\r\n                                                      Capture Now\r\n                                                  </Label>\r\n                                                  </>\r\n                                            \r\n                                          </>\r\n                                      )\r\n                                      :\"\"\r\n                                      }\r\n                                      \r\n                                  </Typography>\r\n                              </div>\r\n                          </>\r\n                          )\r\n                          :\r\n                          <>\r\n                              <div >\r\n                                  <Typography variant=\"caption\">\r\n                                      <Label color={\"red\"} size={\"mini\"}>\r\n                                          Biometric Not Install\r\n                                          \r\n                                      </Label>\r\n                                    \r\n                                  </Typography>\r\n                              </div>\r\n                          </>\r\n                      }\r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes.details}>\r\n                \r\n                    {/* <Button\r\n                      color='red'\r\n                      content='BloodType'\r\n                      //icon='heart'\r\n                      label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                    /> */}                                  \r\n                    {/* <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Height'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      />               */}\r\n                      {/* <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Weight'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      /> */}\r\n                               \r\n                {/* <div className={classes.column}>\r\n                  <Button primary  floated='left' onClick={() => get_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\")) > 5 ? loadAdultEvaluation(patientObj) :loadChildEvaluation(patientObj) }><span style={{fontSize:\"11px\"}}>Initial Clinic Evaluation</span></Button>\r\n                </div> */}\r\n                {/* {patientCurrentStatus !==true && props.patientObj.enrollment.targetGroupId !==\"456\" ?                   \r\n                  (\r\n                    <>\r\n                      <div className={classes.column}>\r\n                        <Button primary  floated='left' onClick={() => loadMentalHealthScreening(patientObj) }><span style={{fontSize:\"11px\"}}>Mental Health Screening</span></Button>\r\n                      </div>\r\n                    </>\r\n                  ) :\"\"           \r\n                } */}\r\n               {/* {patientObj.commenced!==true && (\r\n                <div className={classes.column} style={{paddingLeft:\"20px\"}}>\r\n                {\" \"}<Button primary onClick={() => loadArt(patientObj)} ><span style={{fontSize:\"11px\"}}>ART Commencement </span></Button>\r\n                </div>\r\n                )\r\n               }\r\n                     */}\r\n                </ExpansionPanelDetails>\r\n                <Divider />\r\n                <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    let mentalStatus=false\r\n    let initialEvaluationStatus=false\r\n    useEffect(() => {\r\n        Observation();\r\n        gender =props.patientObj && props.patientObj.sex ? props.patientObj.sex : null\r\n        setGenderType(gender===\"Female\" ? true : false)\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                if(mental.length > 1){\r\n                    mentalStatus=true\r\n                }\r\n                if(evaluation.length > 1){\r\n                    initialEvaluationStatus=true\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n    const loadEAC =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'counseling'})\r\n    }\r\n    const loadStatusUpdate =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'status-update'})\r\n    }\r\n    const loadPharmacyModal =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'pharmacy'})\r\n    }\r\n    const loadLaboratoryModal =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'laboratory'})\r\n    }\r\n    const loadCervicalCancer = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'cervical-cancer'})\r\n    }\r\n    const loadPrEPDiscontinuationsInterruptions = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions'})\r\n    }\r\n    const loadPrEPRegistrationForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-registration'})\r\n    }\r\n    const loadPrEPCommencementForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-commencement'})\r\n    }\r\n    const loadPrEPEligibiltyScreeningForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-screening'})\r\n    }\r\n    const loadPrEPVisitForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-visit'})\r\n    }\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"mini\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>                  \r\n                <Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>\r\n                {/* <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibilty Screening Form</Menu.Item> */}\r\n                <Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>\r\n                <Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>\r\n                <Menu.Item >History</Menu.Item>                     \r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: '100%',\r\n  },\r\n  heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: 'bolder',\r\n  },\r\n}));\r\nconst RecentHistory = (props) => {\r\n  const classes = useStyles();\r\n  const [vitaLoad, setViralLoad]=useState([])\r\n  const [refillList, setRefillList] = useState([])\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let history = useHistory();\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n\r\n  useEffect(() => {\r\n    LaboratoryHistory();\r\n    PharmacyList();\r\n    ClinicVisitList();\r\n    RecentActivities();\r\n  }, [props.patientObj.id]);\r\n\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities =()=>{\r\n    axios\r\n       .get(`${baseUrl}hiv/patients/${props.patientObj.id}/activities?full=false`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setRecentActivities(response.data)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n  //Get list of LaboratoryHistory\r\n  const LaboratoryHistory =()=>{\r\n    axios\r\n       .get(`${baseUrl}laboratory/orders/patients/${props.patientObj.id}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n           let LabObject= []\r\n                response.data.forEach(function(value, index, array) {\r\n                    const dataOrders = value.labOrder.tests                    \r\n                    if(dataOrders[index]) {\r\n                        dataOrders.forEach(function(value, index, array) {\r\n                            LabObject.push(value)\r\n                        })                       \r\n                    }                   \r\n                });\r\n              setViralLoad(LabObject)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n   //GET LIST Drug Refill\r\n   async function PharmacyList() {\r\n    setLoading(true)\r\n    axios\r\n        .get(`${baseUrl}hiv/art/pharmacy/patient?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLoading(false)\r\n            setRefillList(response.data);                \r\n        })\r\n        .catch((error) => {  \r\n            setLoading(false)  \r\n        });        \r\n  }\r\n   //GET LIST Drug Refill\r\n   async function ClinicVisitList() {\r\n    setLoading(true)\r\n    axios\r\n        .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLoading(false)\r\n            setClinicVisitList(response.data);                \r\n        })\r\n        .catch((error) => {  \r\n            setLoading(false)  \r\n        });        \r\n  }\r\n  const labStatus =(status)=> {\r\n      if(status===0){\r\n        return \"timeline-badge info\"\r\n      }else if(status===1){\r\n        return \"timeline-badge warning\"\r\n      }else if(status===2){\r\n        return \"timeline-badge success\"\r\n      }else if(status===3){\r\n        return \"timeline-badge danger\"\r\n      }else if(status===4){\r\n        return \"timeline-badge primary\"\r\n      }else if(status===5){\r\n        return \"timeline-badge info\"\r\n      }else {\r\n        return \"timeline-badge secondary\"\r\n      }\r\n  }\r\n  const ActivityName =(name)=> {\r\n      if(name==='HIV Enrollment'){\r\n        return \"HE\"\r\n      }else if(name==='Pharmacy refill'){\r\n        return \"PR\"\r\n      }else if(name==='Clinical evaluation'){\r\n        return \"CE\"\r\n      }else if(name==='Clinic visit follow up'){\r\n        return \"CV\"\r\n      }else if(name==='ART Commencement'){\r\n        return \"AC\"\r\n      }else {\r\n        return \"RA\"\r\n      }\r\n  }\r\n  const regimenName =(regimenObj)=> {\r\n    let regimenArr = []\r\n    regimenObj.forEach(function (value, index, array) {\r\n      //console.log(value)\r\n        regimenArr.push(value['name'])\r\n    })\r\n    return regimenArr.toString();\r\n  }\r\n  const LoadViewPage =(row,action)=>{\r\n        \r\n    if(row.path==='Mental-health'){        \r\n        props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='Art-commence'){\r\n        props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='Clinical-evaluation'){\r\n        props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='eac1'){\r\n        props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id, actionType:action})\r\n    }\r\n    else if(row.path==='eac2'){\r\n        props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id, actionType:action})\r\n    }\r\n    else if(row.path==='eac3'){\r\n        props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id, actionType:action})\r\n    }else if(row.path==='hiv-enrollment'){\r\n        history.push({\r\n            pathname: '/update-patient',\r\n            state: { id: row.id, patientObj:props.patientObj, actionType:action }\r\n        });\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n    }else if(row.path==='pharmacy'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        props.setActiveContent({...props.activeContent, route:'pharmacy-update', id:row.id, activeTab:\"history\", actionType:action, obj:row})\r\n\r\n    }else if(row.path==='Laboratory'){\r\n        props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='clinic-visit'){\r\n      props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, activeTab:\"history\",actionType:action, })\r\n\r\n  }else{\r\n\r\n    }\r\n    \r\n}\r\nconst LoadDeletePage =(row)=>{\r\n    \r\n    if(row.path==='Mental-health'){        \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }else if(row.path==='Art-commence'){\r\n        //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });\r\n\r\n    }else if(row.path==='Clinical-evaluation'){\r\n        //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });\r\n\r\n    }else if(row.path==='eac1'){\r\n        //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/eac/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }\r\n    else if(row.path==='eac2'){\r\n        //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/eac/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }\r\n    else if(row.path==='eac3'){\r\n        //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/eac/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }else if(row.path==='hiv-enrollment'){\r\n        axios\r\n        .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n    }else if(row.path==='pharmacy'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n        axios\r\n        .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        }); \r\n\r\n    }else if(row.path==='clinic-visit'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        }); \r\n    }else{\r\n\r\n    }\r\n    \r\n}\r\nconst redirectLink=()=>{\r\n  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n}\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                    defaultActiveKey=\"0\"\r\n                  >\r\n                    <>\r\n                    {recentActivities.map((data, i)=>\r\n                    <div className=\"accordion-item\" key={i}>\r\n                      <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                      >\r\n                      <span className=\"accordion-header-icon\"></span>\r\n                      <span className=\"accordion-header-text\">Visit Date : <span className=\"\">{data.date}</span> </span>\r\n                      <span className=\"accordion-header-indicator\"></span>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse\r\n                      eventKey={`${i}`}\r\n                      className=\"accordion__body\"\r\n                    >\r\n                      <div className=\"accordion-body-text\">\r\n                      <ul className=\"timeline\">\r\n                        {data.activities && data.activities.map((activity,index) => ( \r\n                         \r\n                          <>\r\n                            <li>\r\n                              <div className=\"timeline-panel\">\r\n                              <div className={index % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(activity.name)}</div>\r\n                              <div className=\"media-body\">\r\n                                <h5 className=\"mb-1\">{activity.name}</h5>\r\n                                <small className=\"d-block\">\r\n                                {activity.date}\r\n                                </small>\r\n                              </div>\r\n                              <Dropdown className=\"dropdown\">\r\n                                <Dropdown.Toggle\r\n                                variant=\" light\"\r\n                                className=\"i-false p-0 btn-info sharp\"\r\n                                >\r\n                                <svg\r\n                                  width=\"18px\"\r\n                                  height=\"18px\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  version=\"1.1\"\r\n                                >\r\n                                  <g\r\n                                  stroke=\"none\"\r\n                                  strokeWidth=\"1\"\r\n                                  fill=\"none\"\r\n                                  fillRule=\"evenodd\"\r\n                                  >\r\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                                  </g>\r\n                                </svg>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"dropdown-menu\">\r\n                                {activity.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'view')}\r\n                                  >\r\n                                  View\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                {activity.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'update')}\r\n                                  >\r\n                                  Update\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                  {activity.deletable && (<Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  to=\"/widget-basic\"\r\n                                  onClick={()=>LoadDeletePage(activity)}\r\n                                  >\r\n                                  Delete\r\n                                  </Dropdown.Item>\r\n                                  )}\r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              </div>\r\n                            </li>\r\n                          </>\r\n                        ))}                          \r\n                      </ul>\r\n                      </div>\r\n                    </Accordion.Collapse>\r\n                  </div>\r\n                )}\r\n                </>\r\n                </Accordion>\r\n                \r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-0 pb-0\">\r\n            <h4 className=\"card-title\">Visit Chart</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <PerfectScrollbar\r\n              style={{ height: \"370px\" }}\r\n              id=\"DZ_W_TimeLine\"\r\n              className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n            >\r\n              <ul className=\"timeline\">\r\n                {vitaLoad.length >0 ? (\r\n                  <>\r\n                    {vitaLoad.map((test,index) => ( \r\n                    <>\r\n                      <li key={index}>\r\n                      <div className={labStatus(test.labTestOrderStatus)}></div>\r\n                      <span\r\n                        className=\"timeline-panel text-muted\"\r\n                        onClick={()=>redirectLink()}\r\n                        //to=\"\"\r\n                      >\r\n                        <h6 className=\"mb-0\">\r\n                          Test Order Date{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.orderDate}</strong>\r\n                        </h6>\r\n                        {test.labTestGroupName!=='others' &&(<h6 className=\"mb-0\">\r\n                          Test Order{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestGroupName + \" - \" + test.labTestName}</strong>.\r\n                        </h6>\r\n                          )}\r\n                          {test.labTestGroupName==='others' &&(<h6 className=\"mb-0\">\r\n                          Test Order{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestName + \" - \" + test.viralLoadIndicationName}</strong>.\r\n                        </h6>\r\n                          )}\r\n                        \r\n                        <h6 className=\"mb-0\">\r\n                          Status{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestOrderStatusName}</strong>.\r\n                        </h6>\r\n                        \r\n                      </span>\r\n                      </li>\r\n                    </>\r\n\r\n                    ))}\r\n                  \r\n                  </>\r\n                  ) \r\n                  :\r\n                  <Alert\r\n                    variant=\"info\"\r\n                    className=\"alert-dismissible solid fade show\"\r\n                  >\r\n                    <p>No visit yet</p>\r\n                  </Alert>\r\n                }\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n\r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            <Input\r\n                type=\"select\"\r\n                name=\"adr\"\r\n                id=\"adr\"\r\n                value={props.adrObj.adr}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                >\r\n                  <option value=\"\"> Select</option>\r\n                    {prepSideEffect.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                        </option>\r\n                    ))}\r\n            </Input>\r\n            {errors.adr !==\"\" ? (\r\n                <span className={classes.error}>{errors.adr}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                onChange={handAdrleInputChange}\r\n                min={props.artStartDate}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n        <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n            <Icon name='plus' /> Add\r\n        </LabelSui>\r\n        </div>\r\n\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n      </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n            <FormGroup>\r\n            <Label >Onset Date </Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"ondateInfection\"\r\n                id=\"ondateInfection\"\r\n                value={props.infection.ondateInfection}\r\n                onChange={handleInfectionInputChange}\r\n                min={props.artStartDate}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.ondateInfection !==\"\" ? (\r\n                <span className={classes.error}>{errors.ondateInfection}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Illness</Label>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"illnessInfection\"\r\n                id=\"illnessInfection\"\r\n                value={props.infection.illnessInfection}\r\n                onChange={handleInfectionInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.illnessInfection !==\"\" ? (\r\n                <span className={classes.error}>{errors.illnessInfection}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-2\">\r\n        <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n            <Icon name='plus' /> Add\r\n        </LabelSui>\r\n        </div>\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AddAllergy = (props) => {\r\n\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [allergy, setAllergy]= useState({allergy: \"\"})\r\n    \r\n        const handleInputChange = e => {            \r\n            setAllergy ({...allergy,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, allergy,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  //props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"md\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Add Allergy\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Allergies</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"allergy\"\r\n                                            id=\"allergy\"\r\n                                            //value={allergy.functionalStatusId}\r\n                                            //onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\">Select </option>\r\n                                           \r\n                                        </Input>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAllergy;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AddCondition = (props) => {\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [allergy, setAllergy]= useState({allergy: \"\"})\r\n    \r\n        const handleInputChange = e => {            \r\n            setAllergy ({...allergy,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, allergy,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"md\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Add Conditions\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Conditions</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"allergy\"\r\n                                            id=\"allergy\"\r\n                                            //value={allergy.functionalStatusId}\r\n                                            //onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\">Select </option>\r\n                                           \r\n                                        </Input>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCondition;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {  Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from 'date-fns';\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\nlet newDate = new Date()\r\n\r\nconst PostPatient = (props) => {\r\n    const patientObj = props.patientObj;\r\n    const [selectedOption, setSelectedOption] = useState();\r\n    const classes = useStyles()\r\n    const [services, setServices]= useState([]);\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        ServicesPost()\r\n      }, []);\r\n        ///GET LIST OF Post Services\r\n        async function ServicesPost() {\r\n            axios\r\n                .get(`${baseUrl}patient/vital-sign/post-service`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    const filterService = response.data.filter((x) => x.moduleServiceCode!=='consultation-code' && x.moduleServiceCode!=='hiv-code')\r\n                    setServices(\r\n                        Object.entries(filterService).map(([key, value]) => ({\r\n                          label: value.moduleServiceName,\r\n                          value: value.moduleServiceCode,\r\n                        })))\r\n                 \r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n\r\n    const [postServices, setPostServices]= useState({                                                  \r\n                                                        encounterDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n                                                        facilityId: 1,\r\n                                                        personId:\"\",\r\n                                                        serviceCode:\"\",\r\n                                                        visitId: \"\"\r\n                                                    })\r\n    \r\n\r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            let serviceArr = []\r\n            selectedOption.forEach(function (value, index, array) {\r\n                serviceArr.push(value['value'])\r\n            })\r\n            postServices.personId=patientObj.id\r\n            postServices.visitId=patientObj.visitId\r\n            postServices.serviceCode=serviceArr\r\n            axios.post(`${baseUrl}patient/post`, postServices,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  //props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Post Patient\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                              \r\n                                   <Select\r\n                                        onChange={setSelectedOption}\r\n                                        value={selectedOption}\r\n                                        options={services}\r\n                                        isMulti=\"true\"\r\n                                        noOptionsMessage=\"true\"\r\n                                    />\r\n\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                    >\r\n                                    {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostPatient;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, Icon, List, Button, Card,Feed } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          Input,\r\n        } from \"reactstrap\";\r\nimport ADR from './ADR/Index'\r\nimport OpportunisticInfection from './OpportunisticInfection/Index'\r\nimport TBScreening from './TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\n//import AddVitals from './Vitals/AddVitals'\r\nimport AddAllergy from './Allergies/AddAllergy'\r\nimport AddCondition from './Conditions/AddCondition'\r\nimport PostPatient from './PostPatient/Index'\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Accordion, Alert } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  // const [addVitalModal, setAddVitalModal] = useState(false);\r\n  // const AddVitalToggle = () => setAddVitalModal(!addVitalModal)\r\n  const [addConditionModal, setAddConditionModal] = useState(false);\r\n  const AddConditionToggle = () => setAddConditionModal(!addConditionModal)\r\n  const [addAllergyModal, setAddAllergyModal] = useState(false);\r\n  const AddAllergyToggle = () => setAddAllergyModal(!addAllergyModal)\r\n  const [postPatientModal, setPostPatientModal] = useState(false);\r\n  const PostPatientToggle = () => setPostPatientModal(!postPatientModal)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns();\r\n    GetPatientObj();\r\n    ClinicVisitList();\r\n    PatientDetaild();\r\n    //hiv/patient/3\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitList() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data);                \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n    //Check for the last Vital Signs\r\n    const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n    }\r\n    //Check for the Patient Object\r\n    const PatientDetaild = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patient/${props.patientObj.id}`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            patientObj=response.data\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n      }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const addConditionsModal = () => {\r\n    //setpatientObj({...patientObj, ...row});\r\n    setAddConditionModal(!addConditionModal)\r\n  }\r\n  const addAllergiesModal = () => {\r\n    //setpatientObj({...patientObj, ...row});\r\n    setAddAllergyModal(!addAllergyModal)\r\n  }\r\n  const PostPatientService = (row) => {\r\n    //setpatientObj({...patientObj, ...row});\r\n    setPostPatientModal(!postPatientModal)\r\n  }\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.post(`${baseUrl}hiv/art/clinic-visit/`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        PatientDetaild();\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit save successful\");\r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-6\">\r\n        <h2>Clinic Follow-up Visit</h2>\r\n        </div>\r\n        \r\n      </div>\r\n      <Grid columns='equal'>\r\n       <Grid.Column width={5}>\r\n          \r\n            <Segment>\r\n              <Label as='a' color='blue' style={{width:'110%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>Vital Signs</h4>\r\n              </Label>\r\n              <br />\r\n\r\n               <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <br/>\r\n                    <ul className=\"timeline\">\r\n                    { clinicVisitList.length > 0 ?(\r\n                      \r\n                    <Accordion\r\n                        className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                        defaultActiveKey=\"0\"\r\n                        \r\n                      >\r\n                        <>\r\n                        {clinicVisitList.map((visit, i)=>\r\n                        <div className=\"accordion-item\" key={i} >\r\n                          <Accordion.Toggle\r\n                              as={Card.Text}\r\n                              eventKey={`${i}`}\r\n                              className={`accordion-header ${\r\n                                activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                              } accordion-header-info`}\r\n                              onClick={() =>\r\n                                setActiveAccordionHeaderShadow(\r\n                                  activeAccordionHeaderShadow === 1 ? -1 : i\r\n                                )\r\n                              }\r\n                              style={{width:'100%'}}\r\n                          >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text float-start\">Visit Date : <span className=\"\">{visit.visitDate}</span> </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                        \r\n                              <List celled style={{width:'100%'}}>\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.pulse!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px',borderTop:'1px solid #fff', marginTop:'-5px' }}>Pulse <span style={{color:'rgb(153, 46, 98)'}} className=\"float-end\"><b>{visit.vitalSignDto.pulse} bpm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.respiratoryRate!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Respiratory Rate <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.respiratoryRate} bpm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.temperature!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Temperature <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.temperature} <sup>0</sup>C</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.systolic!==null && visit.vitalSignDto.diastolic!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Blood Pressure <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.systolic}/{visit.vitalSignDto.diastolic}</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.height!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Height <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.height} cm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.bodyWeight!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Weight <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.bodyWeight} kg</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.bodyWeight!==null && visit.vitalSignDto.height!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>BMI <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{Math.round(visit.vitalSignDto.bodyWeight/(visit.vitalSignDto.height/100))} kg</b></span></List.Item>)}\r\n                              </List>\r\n                            \r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    )}\r\n                    </>\r\n                    </Accordion>             \r\n\r\n                ):\r\n                (\r\n                  <>\r\n                  <br/>\r\n                  <Alert\r\n                      variant=\"info\"\r\n                      className=\"alert-dismissible solid fade show\"\r\n                    >\r\n                      <p>No Vital Signs</p>\r\n                    </Alert>\r\n                  </>\r\n                )}\r\n                    </ul>\r\n               \r\n                </PerfectScrollbar>\r\n            </Segment>\r\n           \r\n        </Grid.Column>\r\n        <Grid.Column width={11}>\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    value={vital.encounterDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChangeVitalSignDto}\r\n                    min={props.patientObj && props.patientObj.artCommence ? props.patientObj.artCommence.visitDate : null}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                 {errors.encounterDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.encounterDate}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                {showCurrentVitalSigns && (\r\n                  <div className=\"form-check custom-checkbox ml-1 \">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"currentVitalSigns\"\r\n                      id=\"currentVitalSigns\"\r\n                      onChange={handleCheckBox} \r\n                                          \r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"basic_checkbox_1\"\r\n                    >\r\n                      use current Vital Signs\r\n                    </label>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n            <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}></h4>\r\n            </Label>\r\n            <br /><br />\r\n\r\n            <div className=\"row\">\r\n\r\n             \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >HIV Test Result </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whoStagingId\"\r\n                    id=\"whoStagingId\"\r\n                    value={objValues.whoStagingId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whoStagingId\"\r\n                    id=\"whoStagingId\"\r\n                    value={objValues.whoStagingId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\r\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Level of Adherence *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whoStagingId\"\r\n                    id=\"whoStagingId\"\r\n                    value={objValues.whoStagingId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>       \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date PrEP Givern</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"whoStagingId\"\r\n                    id=\"whoStagingId\"\r\n                    value={objValues.whoStagingId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div> \r\n            \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Status</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"functionalStatusId\"\r\n                    id=\"functionalStatusId\"\r\n                    value={objValues.functionalStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n                    <option value=\"None\">None </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            \r\n           \r\n            <br />\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={saving}\r\n              startIcon={<SaveIcon />}\r\n              style={{backgroundColor:\"#014d88\"}}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\r\n      <AddAllergy toggle={AddAllergyToggle} showModal={addAllergyModal} />\r\n      <AddCondition toggle={AddConditionToggle} showModal={addConditionModal} />\r\n      <PostPatient toggle={PostPatientToggle} showModal={postPatientModal} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);\r\n     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n        {props.enableUpdate && (\r\n        <>\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            \r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"adr\"\r\n                  id=\"adr\"\r\n                  value={props.adrObj.adr}\r\n                  onChange={handAdrleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                      {prepSideEffect.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n                {errors.adr !==\"\" ? (\r\n                    <span className={classes.error}>{errors.adr}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                min={props.artStartDate}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n        </div>\r\n        </>)}\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n       {props.enableUpdate && (\r\n        <>\r\n          <div className=\"form-group mb-3 col-md-5\">\r\n              <FormGroup>\r\n              <Label >Onset Date </Label>\r\n              <Input\r\n                  type=\"date\"\r\n                  name=\"ondateInfection\"\r\n                  id=\"ondateInfection\"\r\n                  value={props.infection.ondateInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.ondateInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.ondateInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-5\">        \r\n          <FormGroup>\r\n              <Label > Illness</Label>\r\n              <Input\r\n                  type=\"text\"\r\n                  name=\"illnessInfection\"\r\n                  id=\"illnessInfection\"\r\n                  value={props.infection.illnessInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.illnessInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.illnessInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n          </div>\r\n        </>\r\n        )}\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input, Label, FormGroup} from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { token, url as baseUrl } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst TBScreeningForm = (props) => {\r\n  const [tbStatus, setTbStatus] = useState([]); \r\n  const [TBForms, setTBForms] = useState(false) \r\n\r\n  useEffect(() => {\r\n    TBStatus();\r\n    if(props.tbObj.antiTBDrug ==='NO'){\r\n      setTBForms(true)\r\n    }else{\r\n      setTBForms(false)\r\n    }\r\n    }, [props.tbObj]);\r\n\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const TBStatus =()=>{\r\n    axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    const handleInputChange = e => {\r\n      props.setTbObj ({...props.tbObj,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"antiTBDrug\" ){\r\n          if(e.target.value===\"NO\"){\r\n              setTBForms(true)\r\n          }else{\r\n              setTBForms(false)\r\n          }\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n          \r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n              <Label >Patient on Anti TB Drugs?</Label>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"antiTBDrug\"\r\n                  id=\"antiTBDrug\"\r\n                  value={props.tbObj.antiTBDrug}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  disabled={!props.enableUpdate}\r\n                  required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n\r\n              </Input>\r\n              \r\n            </FormGroup>\r\n          </div>\r\n          {TBForms===true ? (\r\n            <>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label >Patient Currently on IPT?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"currentOnIpt\"\r\n                    id=\"currentOnIpt\"\r\n                    value={props.tbObj.currentOnIpt}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                        <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >coughing?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"coughing\"\r\n                    id=\"coughing\"\r\n                    value={props.tbObj.coughing}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Night Sweat?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"nightSweat\"\r\n                    id=\"nightSweat\"\r\n                    value={props.tbObj.nightSweat}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Fever</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"fever\"\r\n                    id=\"fever\"\r\n                    value={props.tbObj.fever}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Contact with TB Case?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"contactWithTBCase\"\r\n                    id=\"contactWithTBCase\"\r\n                    value={props.tbObj.contactWithTBCase}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Lethergy</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"lethergy\"\r\n                    id=\"lethergy\"\r\n                    value={props.tbObj.lethergy}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              {/* <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {tbStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div> */}\r\n              {(props.tbObj.currentOnIpt===\"NO\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on INH prophylaxis'  && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"YES\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"YES\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"YES\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"YES\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"YES\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n          </>\r\n          )\r\n          :\r\n          \"\"\r\n          }\r\n        </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\n\r\n\r\nexport default TBScreeningForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label,} from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          InputGroupButtonDropdown,\r\n          Input,\r\n          DropdownToggle,\r\n          DropdownMenu,\r\n          DropdownItem\r\n        } from \"reactstrap\";\r\nimport ADR from './../ADR/Index'\r\nimport OpportunisticInfection from './../OpportunisticInfection/Index'\r\nimport TBScreening from './../TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col,   } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Button as ButtonSMUI, Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom';\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst ClinicVisit = (props) => {\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [visitId, setVisitId]= useState()\r\n  const [enableUpdateButton, setEnableUpdateButton]=useState(false)\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [enableUpdate, setEnableUpdate]= useState(false) //Enable update for all input field if the user have permission\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  // the visit date history \r\n  //end of the visit date history\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns()\r\n    GetPatientObj();\r\n    ClinicVisitListHistory();\r\n    if(props.activeContent.id!==null){\r\n     \r\n      GetVisitById(props.activeContent.id)\r\n      setVisitId(props.activeContent.id)\r\n    }\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitListHistory() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data.filter((x)=> x.isCommencement!==true));              \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n  //Check for the last Vital Signs\r\n  const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const  heightFunction =(e)=>{\r\n    if(e==='cm'){\r\n        setHeightValue('cm')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height * 100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n    }else if(e==='m'){\r\n        setHeightValue('m')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height/100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n        \r\n    }\r\n\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.put(`${baseUrl}hiv/art/clinic-visit/${visitId}`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit updated successful\");\r\n        //GetVisitById(visitId)\r\n        //props.setActiveContent({...props.activeContent, route:'consultation', id:\"\", activeTab:\"history\", actionType:\"view\", obj:{}})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n  //Get visit by ID\r\n  async function GetVisitById(visitID) {\r\n    axios\r\n      .get(`${baseUrl}hiv/art/clinic-visit/${visitID}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n          const e = response.data\r\n          setVitalSignDto({ ...e.vitalSignDto })\r\n          objValues.clinicalNote = e.clinicalNote\r\n          objValues.functionalStatusId= e.functionalStatusId\r\n          objValues.whoStagingId= e.whoStagingId \r\n          objValues.nextAppointment= e.nextAppointment\r\n          objValues.adherenceLevel = e.adherenceLevel\r\n          setTbObj({...e.tbScreen})\r\n          setAdrList([...e.adverseDrugReactions])\r\n          setInfectionList([...e.opportunisticInfections])\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const getVisitDetail=(e)=>{\r\n      setEnableUpdateButton(true)\r\n      setVisitId(e.id)\r\n      GetVisitById(e.id)      \r\n  }\r\n  const EnableUpdateAction =()=>{\r\n\r\n      setEnableUpdate(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-3 col-xxl-3 col-lg-3\" >\r\n                <div className=\"card\" style={{ height: \"500px\" }}>\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> Clinic Visits</h4>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                    {clinicVisitList.map((visit,index)=>(\t\r\n                    <div className=\"media pb-3 border-bottom mb-0 align-items-center\" key={index}>\t\t\t\t\t\t\t\t\r\n                      <div className=\"media-body\">\r\n                            <ButtonSMUI\r\n                                color='black'\r\n                                content='Visit Date'\r\n                                icon='calendar alternate'\r\n                                onClick={()=>getVisitDetail(visit)}\r\n                                label={{ basic: true, color: 'grey', pointing: 'left', content: `${visit.visitDate}` }}\r\n                            />\r\n                      </div>\r\n                    </div>\r\n\t\t\t\t\t\t))}\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-9 col-xxl-9 col-lg-9\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> </h4>\r\n                    {enableUpdateButton && (\r\n                    <ButtonSMUI color='facebook' onClick={()=>EnableUpdateAction()} >\r\n                      <Icon name='edit' /> Edit Visit \r\n                    </ButtonSMUI>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Grid columns='equal'>\r\n                    <Grid.Column >\r\n                    <Segment>\r\n                    <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}> Visit Date - {vital.encounterDate}</h4>\r\n                        </Label>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Date of Visit *</FormLabelName>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"encounterDate\"\r\n                                id=\"encounterDate\"\r\n                                value={vital.encounterDate}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                            {errors.encounterDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.encounterDate}</span>\r\n                            ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n                        </div>\r\n                        <Label as='a' color='grey' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n\r\n                        <div className=\" mb-3\">\r\n                        <FormLabelName >Clinical Notes</FormLabelName>\r\n                        <textarea\r\n                            name=\"clinicalNote\"\r\n                            className=\"form-control\"\r\n                            value={objValues.clinicalNote}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            disabled={!enableUpdate}\r\n                        ></textarea>\r\n                        {errors.clinicalNote !==\"\" ? (\r\n                                <span className={classes.error}>{errors.clinicalNote}</span>\r\n                            ) : \"\" }\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >WHO Staging *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"whoStagingId\"\r\n                                id=\"whoStagingId\"\r\n                                value={objValues.whoStagingId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {clinicalStage.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.whoStagingId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.whoStagingId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Functional Status *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"functionalStatusId\"\r\n                                id=\"functionalStatusId\"\r\n                                value={objValues.functionalStatusId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {functionalStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.functionalStatusId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Level of Adherence *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"adherenceLevel\"\r\n                                id=\"adherenceLevel\"\r\n                                value={objValues.adherenceLevel}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n\r\n                                {adherenceLevel.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.adherenceLevel !==\"\" ? (\r\n                                <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <br />\r\n                        <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='pink' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>ADR</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList}  enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <TBScreening tbObj={tbObj} setTbObj={setTbObj} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <Input\r\n                                type=\"date\"\r\n                                name=\"nextAppointment\"\r\n                                id=\"nextAppointment\"\r\n                                className=\"col-md-6\"\r\n                                value={objValues.nextAppointment}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                        {errors.nextAppointment !==\"\" ? (\r\n                                <span className={classes.error}>{errors.nextAppointment}</span>\r\n                            ) : \"\" }\r\n                        <br />\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={saving}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        hidden={!enableUpdate}\r\n                        >\r\n                        {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                        ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                        )}\r\n                        </MatButton>\r\n                    </Segment>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"@reach/menu-button/styles.css\";\r\nimport ConsultationPage from './History/ConsultationPage'\r\n\r\n\r\nconst ClinicVisitHistory = (props) => {    \r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n\r\n  return (\r\n    <div>\r\n         <div className=\"row\">\r\n            \r\n                <ConsultationPage patientObj={patientObj} activeContent={props.activeContent} />  \r\n\r\n        </div>   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClinicVisitHistory;\r\n\r\n\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ViewUpdate/ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent.id]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" HISTORY\">                   \r\n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input,InputGroup,\r\n    InputGroupText,} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n      success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n      }, \r\n}))\r\n\r\nconst PrEPCommencementForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    console.log(props)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInitialAdherenceCounseling: \"\",\r\n        datePrepStart: \"\",\r\n        height: \"\",\r\n        personId: patientObj.id,\r\n        prepClientId: props.prepId,\r\n        prepRegimen: \"\",\r\n        urinalysisResult: \"\",\r\n        weight:\"\",\r\n        pregnancyStatus:\"\",\r\n        breastFeeding:\"\",\r\n        drugAllergies:\"\",\r\n        reffered:\"\",\r\n        dateReferred:\"\"\r\n\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n            //Vital signs clinical decision support \r\n    const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n        bodyWeight: \"\",\r\n        height: \"\",\r\n    })\r\n    const handleInputChange = e => { \r\n          \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }    \r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateInitialAdherenceCounseling = objValues.dateInitialAdherenceCounseling ? \"\" : \"This field is required\"\r\n        temp.datePrepStart = objValues.datePrepStart ? \"\" : \"This field is required\"\r\n        temp.prepRegimen = objValues.prepRegimen ? \"\" : \"This field is required\"\r\n        temp.height = objValues.height ? \"\" : \"This field is required\"\r\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n        temp.reffered = objValues.reffered ? \"\" : \"This field is required\"\r\n        temp.dateReferred = objValues.dateReferred ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to check the input value for clinical decision \r\n    const handleInputValueCheckHeight =(e)=>{\r\n        if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n        const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n        }\r\n    }\r\n    const handleInputValueCheckBodyWeight =(e)=>{\r\n        if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n        const message =\"Body weight must not be greater than 150 and less than 3\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n        }\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n           setSaving(true);\r\n          axios.put(`${baseUrl}prep/${props.prepId}/commencement`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                 \r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n              });\r\n            }          \r\n    }\r\n\r\n  return (      \r\n        <div >      \r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2> PrEP Commencement </h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Initial Adherence Counseling </Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateInitialAdherenceCounseling\"\r\n                                id=\"dateInitialAdherenceCounseling\"\r\n                                //min=\"1983-12-31\"\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateInitialAdherenceCounseling}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                            />\r\n                            {errors.dateInitialAdherenceCounseling !==\"\" ? (\r\n                                <span className={classes.error}>{errors.dateInitialAdherenceCounseling}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date PrEP started *</Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"datePrepStart\"\r\n                                id=\"datePrepStart\"\r\n                                //min=\"1983-12-31\"\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                            />\r\n                             {errors.datePrepStart !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datePrepStart}</span>\r\n                            ) : \"\" }   \r\n                            </FormGroup>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\" mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Body Weight</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"weight\"\r\n                                    id=\"weight\"\r\n                                    onChange={handleInputChange}\r\n                                    min=\"3\"\r\n                                    max=\"150\"\r\n                                    value={objValues.weight}\r\n                                    onKeyUp={handleInputValueCheckBodyWeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    kg\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                    <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                            ) : \"\"}\r\n                            {errors.weight !==\"\" ? (\r\n                                <span className={classes.error}>{errors.weight}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>                                   \r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Height</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    cm\r\n                            </InputGroupText>\r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"height\"\r\n                                    id=\"height\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.height}\r\n                                    min=\"48.26\"\r\n                                    max=\"216.408\"\r\n                                    onKeyUp={handleInputValueCheckHeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                    <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    \r\n                                    style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.height !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                            ) : \"\"}\r\n                            {errors.height !==\"\" ? (\r\n                                <span className={classes.error}>{errors.height}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                            {objValues.weight!==\"\" && objValues.height!==''&&(\r\n                                <FormGroup>\r\n                                <Label > {\" \"}</Label>\r\n                                <InputGroup> \r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    BMI : {Math.round(objValues.weight/((objValues.height * objValues.height)/100))}\r\n                                </InputGroupText>                   \r\n                            \r\n                                </InputGroup>                \r\n                                </FormGroup>\r\n                            )}\r\n                        </div>\r\n                                \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"prepRegimen\">Pregnancy Status</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"pregnancyStatus\"\r\n                            id=\"pregnancyStatus\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.pregnancyStatus}\r\n                            \r\n                        >\r\n                        <option value=\"1\"> </option>\r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        \r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Breast Feeding</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"breastFeeding\"\r\n                            id=\"breastFeeding\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.breastFeeding}\r\n                            \r\n                        >\r\n                        <option value=\"\"> </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">History of drug Allergies</Label>\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            name=\"drugAllergies\"\r\n                            id=\"drugAllergies\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.drugAllergies}\r\n                            \r\n                        />\r\n                      \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Urinalysis Result</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"urinalysisResult\"\r\n                            id=\"urinalysisResult\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.urinalysisResult}\r\n                            \r\n                        />\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Referred</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"reffered\"\r\n                            id=\"reffered\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.reffered}\r\n                            \r\n                        >\r\n                        <option value=\"\"> </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        {errors.reffered !==\"\" ? (\r\n                                <span className={classes.error}>{errors.reffered}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Date Referred</Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateReferred\"\r\n                            id=\"dateReferred\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateReferred}\r\n                            \r\n                        />\r\n                        {errors.dateReferred !==\"\" ? (\r\n                                <span className={classes.error}>{errors.dateReferred}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"prepRegimen\">PrEP Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"prepRegimen\"\r\n                            id=\"prepRegimen\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.prepRegimen}\r\n                            \r\n                        >\r\n                        <option value=\"1\"> All Regimen</option>\r\n                        <option value=\"34\"> First Line</option>\r\n                        <option value=\"34\"> Second Line</option>\r\n                        <option value=\"34\"> Third Line</option>\r\n            \r\n                        </Input>\r\n                        {errors.prepRegimen !==\"\" ? (\r\n                                <span className={classes.error}>{errors.prepRegimen}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPEligibiltyScreeningForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInterruption: \"\",\r\n        why: \"\",\r\n        interruptionType: \"\",\r\n        dateRestartPlacedBackMedication: \"\",\r\n        personId: patientObj.id,\r\n        prepClientId: props.prepId\r\n      });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n\r\n          setSaving(true);\r\n          axios.put(`${baseUrl}prep/${props.prepId}/discontinuation-interruption`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div>                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2> PrEP Discontinuations & Interruptions</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">PrEP Interruption Type </Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"interruptionType\"\r\n                            id=\"interruptionType\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.interruptionType}\r\n                            required\r\n                        >\r\n                         <option value=\"\">Select</option>\r\n                        <option value=\"Stopped\">Stopped</option>\r\n                        <option value=\"Default\">Default</option>\r\n                        <option value=\"Restart\">Restart</option>\r\n                        </Input>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of Interruption </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Facility referred to </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client died </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Cause of death</Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Dource of death information  </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateInterruption\"\r\n                            id=\"dateInterruption\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateInterruption}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"why\"\r\n                            id=\"why\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.why}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date of restart if placed back on medication</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateRestartPlacedBackMedication\"\r\n                            id=\"dateRestartPlacedBackMedication\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateRestartPlacedBackMedication}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                            \r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                   \r\n                </div>\r\n\r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card>                    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPEligibiltyScreeningForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        eligibilityScreeningClientName: \"\",\r\n        eligibilityScreeningDateVisit: \"\",\r\n        eligibilityScreeningDob: \"\",\r\n        eligibilityScreeningOccupation: \"\",\r\n        personId: patientObj.id,\r\n        prepClientId: props.prepId\r\n      });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n\r\n          setSaving(true);\r\n          axios.put(`${baseUrl}prep/${props.prepId}/eligibility-screening`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div>                   \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2>PrEP Eligibilty Screening Form</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Client Name * </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"eligibilityScreeningClientName\"\r\n                            id=\"eligibilityScreeningClientName\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.eligibilityScreeningClientName}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Age * </Label>\r\n                        <Input\r\n                            type=\"number\"\r\n                            name=\"eligibilityScreeningDob\"\r\n                            id=\"eligibilityScreeningDob\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.eligibilityScreeningDob}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date Of Visit *</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"eligibilityScreeningDateVisit\"\r\n                            id=\"eligibilityScreeningDateVisit\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.eligibilityScreeningDateVisit}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                            \r\n                        </FormGroup>\r\n                    </div>\r\n                    {/* <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Education Level </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"uniqueId\"\r\n                            id=\"uniqueId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.uniqueId}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div> */}\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Occupation </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"eligibilityScreeningOccupation\"\r\n                            id=\"eligibilityScreeningOccupation\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.eligibilityScreeningOccupation}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div>\r\n                \r\n                </div>\r\n\r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card>                    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPVisit = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n        <div>                  \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2>PrEP Visit</h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"uniqueId\"\r\n                                id=\"uniqueId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.uniqueId}\r\n                                required\r\n                            />\r\n                            \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Noted Side Effects</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"entryPointId\"\r\n                                id=\"entryPointId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.entryPointId}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n                \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                            </Input>\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">HTS Result</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <h3>PrEP Drugs</h3>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        </div>\r\n                    \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Level of Adherence</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Why Poor/Fair Adherence?</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPVisit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPRegistrationForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >                  \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2>PrEP Registration Form</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"uniqueId\"\r\n                            id=\"uniqueId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.uniqueId}\r\n                            required\r\n                        />\r\n                        {errors.uniqueId !==\"\" ? (\r\n                            <span className={classes.error}>{errors.uniqueId}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date enrolled in PrEP *</Label>\r\n                        <DateTimePicker\r\n                            time={false}\r\n                            name=\"dateConfirmedHiv\"\r\n                            id=\"dateConfirmedHiv\"\r\n                            value={objValues.regDate}\r\n                            onChange={value1 =>\r\n                                setObjValues({ ...objValues, dateConfirmedHiv: moment(value1).format(\"YYYY-MM-DD\") })\r\n                            }\r\n                            \r\n                                max={new Date()}\r\n                        />\r\n                            \r\n                        </FormGroup>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                    <Label for=\"entryPointId\">Population Type *</Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"entryPointId\"\r\n                        id=\"entryPointId\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.entryPointId}\r\n                        required\r\n                    >\r\n                    <option value=\"\"> </option>\r\n        \r\n                    {carePoints.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                        </option>\r\n                    ))}\r\n                    {errors.entryPointId !==\"\" ? (\r\n                            <span className={classes.error}>{errors.entryPointId}</span>\r\n                        ) : \"\" }\r\n                    </Input>\r\n                    </FormGroup>\r\n                    \r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                    <Label for=\"entryPointId\">Partner Type *</Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"entryPointId\"\r\n                        id=\"entryPointId\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.entryPointId}\r\n                        required\r\n                    >\r\n                    <option value=\"\"> </option>\r\n        \r\n                    {carePoints.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                        </option>\r\n                    ))}\r\n                    {errors.entryPointId !==\"\" ? (\r\n                            <span className={classes.error}>{errors.entryPointId}</span>\r\n                        ) : \"\" }\r\n                    </Input>\r\n                    </FormGroup>\r\n                    \r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                    <Label >HIV Testing Point </Label>\r\n                    <Input\r\n                        type=\"select\"\r\n                        name=\"statusAtRegistrationId\"\r\n                        id=\"statusAtRegistrationId\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.statusAtRegistrationId}\r\n                        required\r\n                    >\r\n                    <option value=\"Select\"> </option>\r\n        \r\n                    {hivStatus.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                        </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !==\"\" ? (\r\n                            <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                        ) : \"\" }\r\n                    </Input>\r\n                    </FormGroup>\r\n                    </div>\r\n                \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date of last HIV Negative test*</Label>\r\n                        <DateTimePicker\r\n                            time={false}\r\n                            name=\"dateConfirmedHiv\"\r\n                            id=\"dateConfirmedHiv\"\r\n                            value={objValues.regDate}\r\n                            onChange={value1 =>\r\n                                setObjValues({ ...objValues, dateConfirmedHiv: moment(value1).format(\"YYYY-MM-DD\") })\r\n                            }\r\n                            \r\n                                max={new Date()}\r\n                        />\r\n                            \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date Referred for PrEP * </Label>\r\n                        <DateTimePicker\r\n                            time={false}\r\n                            name=\"dateConfirmedHiv\"\r\n                            id=\"dateConfirmedHiv\"\r\n                            value={objValues.regDate}\r\n                            onChange={value1 =>\r\n                                setObjValues({ ...objValues, dateConfirmedHiv: moment(value1).format(\"YYYY-MM-DD\") })\r\n                            }\r\n                            \r\n                                max={new Date()}\r\n                        />\r\n                        {errors.sourceOfReferrer !==\"\" ? (\r\n                            <span className={classes.error}>{errors.sourceOfReferrer}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                onClick={props.toggle}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {/* {activeContent==='child-consultation' &&( <ChildConsultation patientObj={patientObj} setActiveContent={setActiveContent}/>)} */}\r\n          {activeContent.route==='prep-commencement' &&( <PrEPCommencementForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-interruptions' &&( <PrEPDiscontinuationsInterruptions patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-screening' &&( <PrEPEligibiltyScreeningForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-visit' &&( <PrEPVisit />)}\r\n          {activeContent.route==='prep-registration' &&( <PrEPRegistrationForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)} \r\n                    \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    //const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n                                    dateEnrolled: \"\",\r\n                                    dateOfLastHivNegativeTest: \"\",\r\n                                    dateReferredForPrep: \"\",\r\n                                    extra: {},\r\n                                    hivTestingPoint: \"\",\r\n                                    prepRiskType: \"\",\r\n                                    personDto:{},\r\n                                    personId: 0,\r\n                                    prepSupporter: \"\",\r\n                                    uniqueClientId: \"\",\r\n                                    ancUnique:\"\"\r\n                                });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Registeration save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...errors, [e.target.name]: \"\"})         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                   \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n\r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    \r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Prep /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}